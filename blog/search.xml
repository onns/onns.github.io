<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>修复MacOS上crontab的Operation not permitted问题</title>
      <link href="/blog/2020/06/10/fix-crontab-operation-not-permitted-on-mac/"/>
      <url>/blog/2020/06/10/fix-crontab-operation-not-permitted-on-mac/</url>
      
        <content type="html"><![CDATA[<p>因为项目需要Xcode，但是Xcode又必须要在<code>10.15</code>以上的系统下运行，不得已更新了系统，然而更新一时爽，bug修复***。真的是出现了各种问题，没办法，挨个解决叭…</p><a id="more"></a><h2 id="起因">起因</h2><p>为了方便电脑自动化整理文档，我的电脑上一直运行着一堆定时的脚本，用来隔一段时间将截图整理到<code>图片</code>文件夹。有人这里可能会问，为什么不直接把截图目录设置成<code>Pictures</code>目录，因为截图在桌面用起来更方便诶，毕竟截图就是为了发出去或者做什么的不是。</p><p>但用完所有截图都在桌面真的好乱。</p><p>所以我之前版本的定时脚本都是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -l</span><br><span class="line">30 */1 * * * bash /Users/onns/Documents/code/bash/clear </span><br><span class="line">0 22 * * * bash /Users/onns/Documents/code/bash/backup</span><br></pre></td></tr></table></figure><p>在更新系统之前一直都可以正常运行，但更新了之后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">You have new mail.</span><br><span class="line">$ cat /var/mail/onns</span><br><span class="line">...</span><br><span class="line">bash: /Users/onns/Documents/code/bash/clear: Operation not permitted</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这个的原因就是苹果更新了<code>System Integrity Protection</code>功能，具体的可以去看官方的公告：<a href="https://support.apple.com/en-us/HT204899" target="_blank" rel="noopener">About System Integrity Protection on your Mac</a>，所以最简单粗暴的解决方案就是关闭<code>SIP</code>。</p><p>但我觉得，苹果既然出于安全考虑推出了这样一个功能，那就尽量遵从苹果的思路来，毕竟你后面还要更新系统，难道每次都关一次？何况关起来还挺麻烦的。。。也不安全。</p><p>同时你会留意到，<code>系统安全隐私</code>里增加了一项权限划分<code>Full Disk Access</code>，大概也是出于安全考虑吧。</p><center><p><img src="//onns.xyz/blog/image/20200610-1.png" alt="Full Disk Access页面"></p></center><p>这是我修复bug之后的截图了，最开始的时候这里面什么都没有。</p><p>还有就是，打开<code>Terminal</code>的时候，会弹出下列信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The default interactive shell is now zsh.</span><br><span class="line">To update your account to use zsh, please run `chsh -s /bin/zsh`.</span><br><span class="line">For more details, please visit https://support.apple.com/kb/HT208050.</span><br></pre></td></tr></table></figure><p>详细可以去官网看：<a href="https://support.apple.com/en-us/HT208050" target="_blank" rel="noopener">Use zsh as the default shell on your Mac</a></p><p>所以总结来说，定时脚本出错的原因有两点：</p><ol><li>苹果更改了默认的shell工具</li><li>shell工具的权限不够</li><li>crontab的权限不够（自我猜测，不知道这点是不是影响因素）</li></ol><h2 id="解决">解决</h2><h3 id="更改shell">更改shell</h3><p>这一点很好操作，首先先将<code>zsh</code>作为默认的shell工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure><p>然后只需要重启一下<code>Terminal</code>就可以了。</p><p>然后修改一下定时任务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">% crontab -e</span><br><span class="line">30 */1 * * * zsh /Users/onns/Documents/code/bash/clear </span><br><span class="line">0 22 * * * zsh /Users/onns/Documents/code/bash/backup</span><br></pre></td></tr></table></figure><p>然后我这样又试了一下，还是报错了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsh: can<span class="string">'t open input file: /Users/onns/Documents/code/bash/clear</span></span><br></pre></td></tr></table></figure><p>所以还是需要给<code>zsh</code>权限</p><h3 id="赋予Full-Disk-Access权限">赋予Full Disk Access权限</h3><ol><li>打开<code>System Preference -&gt; Security &amp; Privacy -&gt; Privacy</code>。</li><li>找到<code>Full Disk Access</code>。</li><li>点击左下角的<code>锁头🔒</code>解锁更改权限，输入密码。</li><li>点击添加按钮，在弹出的文件浏览页面按住<code>cmd+shift+G</code>，输入<code>/bin</code>，点击<code>go</code>来到<code>/bin</code>目录并选择<code>zsh</code>，添加。</li><li>同理在<code>/usr/sbin/</code>目录下找到<code>cron</code>，添加。</li></ol><p>成功，完。</p><h2 id="参考文档">参考文档</h2><ul><li><a href="https://support.apple.com/en-us/HT204899" target="_blank" rel="noopener">About System Integrity Protection on your Mac</a></li><li><a href="https://support.apple.com/en-us/HT208050" target="_blank" rel="noopener">Use zsh as the default shell on your Mac</a></li><li><a href="https://osxdaily.com/2020/04/27/fix-cron-permissions-macos-full-disk-access/" target="_blank" rel="noopener">How to Fix Cron Permission Issues in MacOS Catalina &amp; Mojave</a></li><li><a href="https://blog.bejarano.io/fixing-cron-jobs-in-mojave/" target="_blank" rel="noopener">Fixing cron jobs in Mojave</a></li><li><a href="https://stackoverflow.com/questions/58593877/crontab-cant-execute-python-script-with-error-errno-1-operation-not-permitt" target="_blank" rel="noopener">Crontab can’t execute python script with error: “[Errno 1] Operation not permitted”</a></li><li><a href="https://www.howtogeek.com/444596/how-to-change-the-default-shell-to-bash-in-macos-catalina/" target="_blank" rel="noopener">How to Change the Default Shell to Bash on macOS Catalina</a></li><li><a href="https://blog.csdn.net/qq_38287952/article/details/86755672" target="_blank" rel="noopener">Mac权限问题，operation not permitted</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macos </tag>
            
            <tag> cron </tag>
            
            <tag> crontab </tag>
            
            <tag> Catalina </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些处理字符的工具</title>
      <link href="/blog/2020/06/05/some-tools/"/>
      <url>/blog/2020/06/05/some-tools/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://onns.xyz/tools/hyphens-to-camel-case/">连字符转驼峰式</a></li></ul><a id="more"></a><h2 id="连字符转驼峰式"><a href="https://onns.xyz/tools/hyphens-to-camel-case/">连字符转驼峰式</a></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toCamel</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> temp = str.replace(<span class="regexp">/(?:-+([^-]))/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">$<span class="number">1</span>, $<span class="number">2</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $<span class="number">2.</span>toUpperCase();</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> temp.slice(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + temp.slice(<span class="number">1</span>);;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考链接">参考链接</h2><ul><li><a href="https://colorlib.com/wp/template/contact-form-v9/" target="_blank" rel="noopener">Contact Form v9</a></li><li><a href="https://regexper.com/#%2F%28%5B%5E-%5D%29%28%3F%3A-%2B%28%5B%5E-%5D%29%29%2Fg" target="_blank" rel="noopener">Regexper</a></li><li><a href="https://blog.csdn.net/qq_42392522/article/details/83376466" target="_blank" rel="noopener">JS 实现：驼峰式转下横线，下横线转驼峰式</a></li><li><a href="https://blog.csdn.net/qq_26212731/article/details/78523624" target="_blank" rel="noopener">js监听textarea 内容的变化，并计算内容的长度</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> hyphens </tag>
            
            <tag> camel case </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在MacOS上部署ftp服务器</title>
      <link href="/blog/2020/06/02/ftp-server-on-mac/"/>
      <url>/blog/2020/06/02/ftp-server-on-mac/</url>
      
        <content type="html"><![CDATA[<p>因为小米手机的文件管理支持远程存储服务，早就想在自己的Mac上弄了，但是搜索了几次都失败了，昨晚半夜两点热得睡不着（好惨一男的），起床捣鼓，记录之。</p><a id="more"></a><center><p><img src="//onns.xyz/blog/image/20200602-1.jpg" alt="手机文件管理支持远程存储列表"></p></center><p>之前搜索的，无一例外，全是叫我输入如下所示的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> sudo -s launchctl load -w /System/Library/LaunchDaemons/ftp.plist</span><br></pre></td></tr></table></figure><p>但是看下面的消息，原文链接点<a href="https://apple.stackexchange.com/questions/361901/host-ftp-server-on-mojave" target="_blank" rel="noopener">这里</a>：</p><blockquote><p>Apple removed the included File Transfer Protocol (FTP) server from recent versions of macOS. FTP is not secure by default and better avoided.<br>FTP is not secure because the connection is not encrypted. Modern network protocols are encrypted by default – even on local networks.</p></blockquote><p>出于安全考虑，苹果官方已经把ftp.plist<code>移除</code>了，解决办法是需要自己安装一个<code>ftpd服务</code>。</p><p>用<code>homebrew</code>就可以安装了，如果没有安装可以参考<a href="https://onns.xyz/blog/2020/06/01/install-homebrew-on-mac/">这里</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install pure-ftpd</span><br><span class="line">brew services start pure-ftpd</span><br></pre></td></tr></table></figure><p>然后需要配置<code>ftpd</code>的验证，使之可以通过系统用户进行验证登录。<br>新建一个<code>/etc/pam.d/pure-ftpd</code>文件，记得用root权限编辑。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/pam.d/pure-ftpd</span><br></pre></td></tr></table></figure><p>内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># pure-ftpd: auth account password session</span><br><span class="line">auth       required       pam_opendirectory.so</span><br><span class="line">account    required       pam_permit.so</span><br><span class="line">password   required       pam_deny.so</span><br><span class="line">session    required       pam_permit.so</span><br></pre></td></tr></table></figure><p>然后让配置文件生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/<span class="built_in">local</span>/sbin/pure-ftpd -lpam -B</span><br></pre></td></tr></table></figure><p>最后重启一下<code>pure-ftpd</code>服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services restart pure-ftpd</span><br></pre></td></tr></table></figure><p>停止的命令是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services stop pure-ftpd</span><br></pre></td></tr></table></figure><p>这里是<code>pure-ftpd</code>的<a href="https://download.pureftpd.org/pub/pure-ftpd/doc/README.MacOS-X" target="_blank" rel="noopener">官方文档</a>，虽然很简单但。。。聊胜于无吧。</p><h2 id="汇总">汇总</h2><p>如果出现任何问题，可以参考 <a href="https://superuser.com/questions/1398800/pure-ftpd-connection-refused-localhost-on-high-sierra" target="_blank" rel="noopener">pure-ftpd Connection refused localhost on high sierra</a>，这个软件的相关文档真的很不完善，重复完成下述步骤应该就可以解决了，我也不知道为什么我出问题了，但是重装就解决了，这大概就是重启/重装解决99%的问题的人生四大哲理吧。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">brew services stop pure-ftpd</span><br><span class="line">brew remove pure-ftpd</span><br><span class="line">brew upgrade</span><br><span class="line">brew cleanup</span><br><span class="line">brew install pure-ftpd</span><br><span class="line">sudo vi /etc/pam.d/pure-ftpd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># pure-ftpd: auth account password session</span><br><span class="line">auth       required       pam_opendirectory.so</span><br><span class="line">account    required       pam_permit.so</span><br><span class="line">password   required       pam_deny.so</span><br><span class="line">session    required       pam_permit.so</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/<span class="built_in">local</span>/sbin/pure-ftpd -lpam -B</span><br><span class="line">brew services restart pure-ftpd</span><br></pre></td></tr></table></figure><p>完。</p><p>真的很方便，直接在手机上存取了就。</p><center><p><img src="//onns.xyz/blog/image/20200602-2.jpg" alt="手机连接ftp示意图"></p></center><h2 id="参考链接">参考链接</h2><ul><li><a href="https://www.jianshu.com/p/f4994754b74a" target="_blank" rel="noopener">MAC搭建FTP服务器</a>（不靠谱，错误答案）</li><li><a href="https://zhidao.baidu.com/question/653759039211321605.html" target="_blank" rel="noopener">mac os 10.13.6 如何启动FTP服务器？急！ </a>（不靠谱，错误答案）</li><li><a href="https://blog.csdn.net/weixin_33733810/article/details/92498798" target="_blank" rel="noopener">Mac实践–MAC搭建FTP服务器</a>（SFTP可以参照这个，FTP依然是错误的）</li><li><a href="https://apple.stackexchange.com/questions/361901/host-ftp-server-on-mojave" target="_blank" rel="noopener">host ftp server on Mojave</a></li><li><a href="https://apple.stackexchange.com/questions/141633/quick-to-install-and-set-up-ftp-server-on-homebrew-for-osx" target="_blank" rel="noopener">quick to install and set up FTP server on homebrew for OSX</a></li><li><a href="https://download.pureftpd.org/pub/pure-ftpd/doc/README.MacOS-X" target="_blank" rel="noopener">PURE-FTPD DOCUMENTATION-Notes for MacOS users</a></li><li><a href="https://superuser.com/questions/1398800/pure-ftpd-connection-refused-localhost-on-high-sierra" target="_blank" rel="noopener">pure-ftpd Connection refused localhost on high sierra</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macos </tag>
            
            <tag> homebrew </tag>
            
            <tag> ftpd </tag>
            
            <tag> pure-ftpd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在MacOS上安装Homebrew</title>
      <link href="/blog/2020/06/01/install-homebrew-on-mac/"/>
      <url>/blog/2020/06/01/install-homebrew-on-mac/</url>
      
        <content type="html"><![CDATA[<p>因为想在Mac上安装<code>python3</code>，一个最友好的方式是安装<code>pyenv</code>，所以顺便把包管理工具<code>homebrew</code>一起安装了叭。</p><a id="more"></a><p>安装方法参照<a href="https://docs.brew.sh/Installation" target="_blank" rel="noopener">官方安装文档</a>，不过这个配置好像有点麻烦，如果想要一键可以试试<a href="https://treehouse.github.io/installation-guides/mac/homebrew" target="_blank" rel="noopener">这个</a>。</p><p>我本来是想顺着官方文档来的，但是还要配置环境变量的样子，算了，用一键脚本。</p><p>在用之前需要解决一个问题，<code>GitHub</code> 的源在国内访问太慢了。。。之前尝试过用 <code>HTTP_PROXY</code>，发现没什么用，今天又去查了一下，这下就可以了。随意感受下速度的变化，从<code>41.00 KiB/s</code>到<code>9.04 MiB/s</code>，完全不是一个数量级好吧。</p><center><p><img src="//onns.xyz/blog/image/20200601-1.png" alt="未开启代理之前"></p><p><img src="//onns.xyz/blog/image/20200601-2.png" alt="开启代理之后"></p></center><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启代理命令，这个需要你本地有代理程序哦</span></span><br><span class="line"><span class="built_in">export</span> ALL_PROXY=socks5://127.0.0.1:1081</span><br></pre></td></tr></table></figure><p>然后就可以一键安装<code>homebrew</code>了，中间输入一次密码即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><p>然后安装<code>pyenv</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install pyenv</span><br></pre></td></tr></table></figure><p>然后安装<code>python3</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install 3.8.0</span><br></pre></td></tr></table></figure><p>虽然<code>pyenv</code>和<code>python3</code>都装好了，但是还是要设置一下环境变量，参照官方的<a href="https://github.com/pyenv/pyenv#installation" target="_blank" rel="noopener">文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export PYENV_ROOT="$HOME/.pyenv"'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH="$PYENV_ROOT/bin:$PATH"'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">'if command -v pyenv 1&gt;/dev/null 2&gt;&amp;1; then\n  eval "$(pyenv init -)"\nfi'</span> &gt;&gt; ~/.bash_profile</span><br></pre></td></tr></table></figure><p>然后重启一下命令行即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv global 3.8.0</span><br><span class="line">$ python</span><br><span class="line">Python 3.8.0 (default, Jun  1 2020, 11:01:42) </span><br><span class="line">[Clang 10.0.1 (clang-1001.0.46.4)] on darwin</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br></pre></td></tr></table></figure><p>完。</p><h2 id="参考文档">参考文档</h2><ul><li><a href="https://opensource.com/article/19/5/python-3-default-mac" target="_blank" rel="noopener">The right and wrong way to set Python 3 as default on a Mac</a></li><li><a href="https://treehouse.github.io/installation-guides/mac/homebrew" target="_blank" rel="noopener">Installing Homebrew on a Mac</a></li><li><a href="https://docs.brew.sh/Installation" target="_blank" rel="noopener">Homebrew Documentation</a></li><li><a href="https://www.zhihu.com/question/276143842" target="_blank" rel="noopener">怎么解决从github下载资源慢？</a></li><li><a href="https://github.com/pyenv/pyenv#installation" target="_blank" rel="noopener">Simple Python Version Management: pyenv</a></li><li><a href="https://stackoverflow.com/questions/33321312/cannot-switch-python-with-pyenv" target="_blank" rel="noopener">Cannot switch Python with pyenv</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> macos </tag>
            
            <tag> homebrew </tag>
            
            <tag> pyenv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome插件-同步播放电影</title>
      <link href="/blog/2020/05/12/chrome-extension-sync-sofa/"/>
      <url>/blog/2020/05/12/chrome-extension-sync-sofa/</url>
      
        <content type="html"><![CDATA[<h2 id="太长不看版">太长不看版</h2><p>sync-sofa是一个chrome的插件，安装之后可以让两台不同的设备在播放同一个视频源的时候，彼此同步操作（播放、暂停、拖动进度条等）。</p><p>目前支持的网站：</p><ul><li><a href="https://www.iqiyi.com/" target="_blank" rel="noopener">爱奇艺</a></li><li><a href="https://www.youku.com/" target="_blank" rel="noopener">优酷视频</a></li><li><a href="https://www.weiyun.com/" target="_blank" rel="noopener">微云网盘</a></li><li><a href="https://v.qq.com/" target="_blank" rel="noopener">腾讯视频</a></li><li><a href="https://www.youtube.com/" target="_blank" rel="noopener">YouTube</a></li></ul><a id="more"></a><h3 id="操作流程">操作流程</h3><p>这里以<code>微云</code>为例，好处是只要你找到了视频源，就可以播放任何你想要播放的视频。本来也想加入百度云的，但奈何百度云有所限制，只能看未来是否有技术上的突破了。</p><p><strong>用户1</strong>：浏览器顶部为渐变色，主题颜色为粉红色<br><strong>用户2</strong>：浏览器顶部为黑色，主题颜色为黑色</p><ol><li>双方都打开视频，跳过一切广告或者片头之后，暂停视频。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-1.png" alt="初始页面"></p></center><ol start="2"><li><strong>用户1</strong>点开插件，点击请求<code>识别码</code>按钮。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-2.png" alt="请求识别码页面"></p></center><ol start="3"><li><strong>用户1</strong>请求成功后，会收到一个长度为4的<code>识别码</code>（图示中为<strong>aM9d</strong>），<code>识别码</code>自动复制到<code>剪切板</code>，并弹出提示，提示和插件页面<code>3秒</code>后自动关闭。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-3.png" alt="请求识别码成功页面"></p></center><ol start="4"><li><strong>用户1</strong>将<code>识别码</code>发送给<strong>用户2</strong>，<strong>用户2</strong>点开插件，在上方输入框输入<code>识别码</code>，点击<strong>开始</strong>按钮。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-4.png" alt="根据识别码匹配页面"></p></center><ol start="5"><li><strong>用户2</strong>和<strong>用户1</strong>匹配成功后，双方都会收到成功提示。至此，一切准备工作完成，可以开始观看视频。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-5.png" alt="用户2匹配成功界面"></p><p><img src="//onns.xyz/blog/image/20200512-6.png" alt="用户1匹配成功界面"></p></center><ol start="6"><li>若<strong>一方用户</strong>断开连接，<strong>另一方用户</strong>会收到通知，届时只需按照<code>步骤1-5</code>重新建立连接即可。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-7.png" alt="根据识别码匹配页面"></p></center><h3 id="相关连接">相关连接</h3><ul><li><a href="https://chrome.google.com/webstore/detail/sync-sofa-online-video-sy/kgpnhgmpijhpkefpddoehhminpfiddmg" target="_blank" rel="noopener">Chrome插件下载地址</a></li><li><a href="https://github.com/LouisYLWang/Sync-Sofa" target="_blank" rel="noopener">项目地址</a></li><li><a href="https://github.com/LouisYLWang/Sync-Sofa/issues" target="_blank" rel="noopener">反馈地址</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chrome </tag>
            
            <tag> extension </tag>
            
            <tag> sync-sofa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10下安装PCL1.9.1</title>
      <link href="/blog/2020/04/11/pcl-vs2017-in-windows10/"/>
      <url>/blog/2020/04/11/pcl-vs2017-in-windows10/</url>
      
        <content type="html"><![CDATA[<p>PCL的库配置是真的繁琐，配置了好多次才成功。<br>Point Cloud Library 1.9.1 + Visual Studio 2017 + Windows 10</p><a id="more"></a><h2 id="PCL">PCL</h2><p><code>PCL</code> 从 <code>1.8.0</code> 版本开始代码都托管在了<a href="https://github.com/PointCloudLibrary/pcl/releases/" target="_blank" rel="noopener">GitHub</a>之上，点击这里直接下载即可：<a href="https://github.com/PointCloudLibrary/pcl/releases/download/pcl-1.9.1/PCL-1.9.1-AllInOne-msvc2017-win64.exe" target="_blank" rel="noopener">PCL-1.9.1-AllInOne-msvc2017-win64.exe</a>。</p><p>因为 <code>PCL</code> 会依赖很多插件库，所以下 <code>AllInOne</code> 版本就可以都装上了。</p><p>安装的时候一路下一步即可，不过需要注意安装的最后会弹出一个单独的安装程序来安装 <code>OpenNI2</code>。假如我 <code>PCL的安装目录（PCL_ROOT）</code> 为 <strong>D:\Program Files\PCL1.9.1</strong><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，那么建议 <code>OpenNI2</code> 的安装目录设置为 <strong>%PCL_ROOT%\3rdParty\OpenNI2</strong>，即：<strong>D:\Program Files\PCL1.9.1\3rdParty\OpenNI2</strong>。这样做的目的是为了方便管理第三方库。</p><p>至此，<code>PCL</code> 及其相关第三方库安装完成。</p><h2 id="添加环境变量">添加环境变量</h2><p>在 <code>计算机—&gt;属性—&gt;高级系统属性—&gt;高级—&gt;环境变量</code> 中，添加如下<code>环境变量</code>：</p><center><table><thead><tr><th style="text-align:left">变量</th><th style="text-align:left">值</th></tr></thead><tbody><tr><td style="text-align:left">PCL_ROOT</td><td style="text-align:left">D:\Program Files\PCL1.9.1</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\bin</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\Boost\lib</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\FLANN\bin</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\OpenNI2\Lib</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\OpenNI2\Redist</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\OpenNI2\Tools</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\Qhull\bin</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\VTK\bin</td></tr></tbody></table></center><p>由于PATH要添加的变量很多，有 <code>8</code> 个，鉴于有人懒得打八次，直接点击<code>编辑文本</code>，将下述内容粘贴到行尾即可，注意<strong>分号</strong>。</p><center><p><img src="//onns.xyz/blog/image/20200411-1.png" alt="编辑文本示意图"></p></center><blockquote><p>%PCL_ROOT%\bin;%PCL_ROOT%\3rdParty\Boost\lib;%PCL_ROOT%\3rdParty\FLANN\bin;%PCL_ROOT%\3rdParty\OpenNI2\Lib;%PCL_ROOT%\3rdParty\OpenNI2\Redist;%PCL_ROOT%\3rdParty\OpenNI2\Tools;%PCL_ROOT%\3rdParty\Qhull\bin;%PCL_ROOT%\3rdParty\VTK\bin;</p></blockquote><h2 id="VS2017配置">VS2017配置</h2><p>打开VS2017，新建一个 <code>C++</code>的<code>空项目</code>即可。</p><p>首先打开<code>属性管理器</code>，如果找不到可以在<code>视图-&gt;其他窗口-&gt;属性管理器</code>中打开，或者直接搜索也可以。</p><p>然后在<code>属性管理器-&gt; Release | x64</code>文件夹右键，<code>添加新项目属性表</code>，名字自己起即可。</p><p>接着右键<code>刚刚创建的属性表</code>，点击<code>属性</code>，弹出如图所示界面。</p><center><p><img src="//onns.xyz/blog/image/20200411-2.png" alt="属性页"></p></center><p>在 <code>通用属性—&gt;VC++目录—&gt;包含目录</code> 中添加 <code>7</code> 项，这个只能一个一个加，就没法偷懒了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\PCL1.9.1\include\pcl-1.9</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\Boost\include\boost-1_68</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\Eigen\eigen3</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\FLANN\include</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\OpenNI2\Include</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\Qhull\include</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\VTK\include\vtk-8.1</span><br></pre></td></tr></table></figure><p>在 <code>通用属性—&gt;VC++目录—&gt;库目录</code> 中添加 <code>6</code> 项，同上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\PCL1.9.1\lib</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\Boost\lib</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\FLANN\lib</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\OpenNI2\Lib</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\Qhull\lib</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\VTK\lib</span><br></pre></td></tr></table></figure><p>在 <code>C/C++—&gt;预处理器—&gt;预处理器定义</code> 中添加 <code>3</code> 行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_CRT_SECURE_NO_WARNINGS</span><br><span class="line">_SCL_SECURE_NO_WARNINGS</span><br><span class="line">_SILENCE_FPOS_SEEKPOS_DEPRECATION_WARNING</span><br></pre></td></tr></table></figure><p>将 <code>C/C++—&gt;所有选项—&gt;SDL检查</code> 改为<code>否 (/sdl-)</code>。</p><p>在 <code>通用属性—&gt;链接器—&gt;输入—&gt;附加的依赖项</code> 中添加 <code>lib</code> 文件，<code>Release</code> 和 <code>Debug</code> 所需要的库文件不同，写了一个python脚本文件，保存运行就可以了。然后把输出的结果复制添加即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置PCL的lib目录</span></span><br><span class="line">PCL_LIB_DIR = <span class="string">'D:/Program Files/PCL1.9.1/lib'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置VTK的lib目录</span></span><br><span class="line">VTK_LIB_DIR = <span class="string">'D:/Program Files/PCL1.9.1/3rdParty/VTK/lib'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下列两行二选其一</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># VERSION = 'DEBUG'</span></span><br><span class="line">VERSION = <span class="string">'RELEASE'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> home, dirs, files <span class="keyword">in</span> os.walk(PCL_LIB_DIR):</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">        ext = <span class="string">'_release.lib'</span></span><br><span class="line">        num = <span class="number">-12</span></span><br><span class="line">        <span class="keyword">if</span> VERSION == <span class="string">'DEBUG'</span>:</span><br><span class="line">            ext = <span class="string">'_debug.lib'</span></span><br><span class="line">            num = <span class="number">-10</span></span><br><span class="line">        <span class="keyword">if</span> filename[num:] == ext:</span><br><span class="line">            print(filename)</span><br><span class="line">            <span class="comment"># fullname = os.path.join(home, filename)</span></span><br><span class="line">            <span class="comment"># print(fullname)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> home, dirs, files <span class="keyword">in</span> os.walk(VTK_LIB_DIR):</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">        <span class="keyword">if</span> os.path.splitext(filename)[<span class="number">1</span>] == <span class="string">'.lib'</span>:</span><br><span class="line">            <span class="keyword">if</span> VERSION == <span class="string">'RELEASE'</span> <span class="keyword">and</span> filename[<span class="number">-6</span>:<span class="number">-4</span>] != <span class="string">'gd'</span>:</span><br><span class="line">                print(filename)</span><br><span class="line">            <span class="keyword">if</span> VERSION == <span class="string">'DEBUG'</span> <span class="keyword">and</span> filename[<span class="number">-6</span>:<span class="number">-4</span>] == <span class="string">'gd'</span>:</span><br><span class="line">                print(filename)</span><br></pre></td></tr></table></figure><center><p><img src="//onns.xyz/blog/image/20200411-3.png" alt="运行结果图"></p></center><h2 id="参考文档">参考文档</h2><ul><li><a href="https://mp.weixin.qq.com/s/WcNKk07GEAbhUTS1aPRufw" target="_blank" rel="noopener">PCL1.8.1+vs2015配置教程</a></li><li><a href="https://blog.csdn.net/weixin_41991128/article/details/83864713" target="_blank" rel="noopener">VS2017配置PCL1.9（win10环境）</a></li></ul><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">安装的时候有人建议把目录 <code>PCL 1.9.1</code> 中间的<code>空格</code>删掉，我就照做了。</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows10 </tag>
            
            <tag> PCL </tag>
            
            <tag> point cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页截图之停止GIF</title>
      <link href="/blog/2020/04/01/stop-gif-for-screenshot/"/>
      <url>/blog/2020/04/01/stop-gif-for-screenshot/</url>
      
        <content type="html"><![CDATA[<p>经常会有用到网页截取的时候，截取方法很简单，但是如果页面里GIF图很多的话，会出现截断，即GIF上下画面不一致（因为本质上全屏截图也都是先截屏幕再拼接的）。花点功夫找了下，记录之。</p><a id="more"></a><p>都是以<code>Chrome</code>为例，其它浏览器就自行google咯。首先去下一个自己喜欢的全屏截图插件，<a href="https://chrome.google.com/webstore/search/Screenshot?hl=en" target="_blank" rel="noopener">传送门</a>。</p><p>小tip：微信页面采用的是 <code>lazy load</code> 模式，要自己浏览一遍全文才能加载所有的GIF和图片。</p><p>然后就打开<code>开发者模式</code>，快捷键 <code>cmd+alt+i</code>，选择标签为 <code>console</code> 的一栏，将下述代码粘贴进去，回车即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createElement</span>(<span class="params">type, callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> element = <span class="built_in">document</span>.createElement(type);</span><br><span class="line"></span><br><span class="line">    callback(element);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">freezeGif</span>(<span class="params">img</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> width = img.width,</span><br><span class="line">    height = img.height,</span><br><span class="line">    canvas = createElement(<span class="string">'canvas'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">clone</span>) </span>&#123;</span><br><span class="line">        clone.width = width;</span><br><span class="line">        clone.height = height;</span><br><span class="line">    &#125;),</span><br><span class="line">    attr,</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> freeze = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        canvas.getContext(<span class="string">'2d'</span>).drawImage(img, <span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; img.attributes.length; i++) &#123;</span><br><span class="line">            attr = img.attributes[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (attr.name !== <span class="string">'"'</span>) &#123; <span class="comment">// test for invalid attributes</span></span><br><span class="line">                canvas.setAttribute(attr.name, attr.value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        canvas.style.position = <span class="string">'absolute'</span>;</span><br><span class="line"></span><br><span class="line">        img.parentNode.insertBefore(canvas, img);</span><br><span class="line">        img.style.opacity = <span class="number">0</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (img.complete) &#123;</span><br><span class="line">        freeze();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        img.addEventListener(<span class="string">'load'</span>, freeze, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">freezeAllGifs</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Array</span>().slice.apply(<span class="built_in">document</span>.images).map(freezeGif);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">freezeAllGifs();</span><br></pre></td></tr></table></figure><p>代码自 <a href="https://stackoverflow.com/a/24707088/13182099" target="_blank" rel="noopener">Stopping GIF Animation Programmatically</a> 处拷贝。</p><p>然后GIF图就都不动啦。</p><p>完。</p>]]></content>
      
      
      <categories>
          
          <category> work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（七）</title>
      <link href="/blog/2020/03/16/java-notes-7/"/>
      <url>/blog/2020/03/16/java-notes-7/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="集合">集合</h2><a id="more"></a><ul><li><p><code>for each</code> 循环可以与任何实现了 <code>Iterable</code> 接口的对象一起工作。</p></li><li><p>迭代器访问 <code>HashSet</code> 虽然可以确定在迭代过程中能够遍历到集合中的所有元素，但却无法预知元素被访问的次序。</p></li><li><p>将 Java 迭代器认为是<code>位于两个元素之间</code>的。当调用 <code>next</code> 时，迭代器就越过下一个元素，并返回刚刚越过的那个元素的引用。</p></li><li><p>如果想删除两个相邻的元素，需要先 <code>next</code> 再 <code>remove</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Iterator&lt;String&gt; it = c.Iterator();</span><br><span class="line">it.next();</span><br><span class="line">it.remove();</span><br><span class="line">it.next();</span><br><span class="line">it.remove();</span><br></pre></td></tr></table></figure></li><li><p>在 Java 程序设计语言中，所有链表实际上都是<code>双向链接的</code>。</p></li></ul><center><table><thead><tr><th style="text-align:left">集合类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">ArrayList</td><td style="text-align:left">一种可以动态增长和缩减的索引序列</td></tr><tr><td style="text-align:left">LinkedList</td><td style="text-align:left">一种可以在任何位置进行高效地插人和删除操作的有序序列</td></tr><tr><td style="text-align:left">ArrayDeque</td><td style="text-align:left">一种用循环数组实现的双端队列</td></tr><tr><td style="text-align:left">HashSet</td><td style="text-align:left">一种没有重复元素的无序集合</td></tr><tr><td style="text-align:left">TreeSet</td><td style="text-align:left">—种有序集</td></tr><tr><td style="text-align:left">EnumSet</td><td style="text-align:left">一种包含枚举类型值的集</td></tr><tr><td style="text-align:left">LinkedHashSet</td><td style="text-align:left">一种可以记住元素插人次序的集</td></tr><tr><td style="text-align:left">PriorityQueue</td><td style="text-align:left">一种允许高效删除最小元素的集合</td></tr><tr><td style="text-align:left">HashMap</td><td style="text-align:left">一种存储键/值关联的数据结构</td></tr><tr><td style="text-align:left">TreeMap</td><td style="text-align:left">一种键值有序排列的映射表</td></tr><tr><td style="text-align:left">EnumMap</td><td style="text-align:left">一种键值属于枚举类型的映射表</td></tr><tr><td style="text-align:left">LinkedHashMap</td><td style="text-align:left">一种可以记住键/值项添加次序的映射表</td></tr><tr><td style="text-align:left">WeakHashMap</td><td style="text-align:left">一种其值无用武之地后可以被垃圾回收器回收的映射表</td></tr><tr><td style="text-align:left">IdentityHashMap</td><td style="text-align:left">一种用 == 而不是用 equals 比较键值的映射表</td></tr></tbody></table><p><img src="//onns.xyz/blog/image/20200316-1.png" alt="集合框架中的类"></p></center><ul><li>数组和数组列表都有一个重大的缺陷。这就是从数组的<code>中间位置插入/删除</code>一个元素要付出很大的代价，其原因是数组中处于被删除元素之后的所有元素都要向数组的前端移动。</li><li>链表是一个有序集合。</li><li>可以根据需要给容器附加许多的迭代器，但是这些迭代器只能<code>读取列表</code>。另外，再单独附加一个<code>既能读又能写</code>的迭代器。</li><li>迭代器检测到并发修改：在每个迭代器方法的开始处检查自己改写操作的计数值是否与集合的改写操作计数值一致。</li><li>散列表（hash table）：要想査找表中对象的位置，就要先计算它的散列码，然后与桶的总数取余，所得到的结果就是保存这个元素的桶的索引。</li><li>装填因子（load factor）决定何时对散列表进行再散列。</li><li>树集是一个有序集合。</li><li>链接散列映射将用<code>访问顺序</code>，而不是<code>插入顺序</code>，对映射条目进行迭代。</li><li>每次调用 get 或 put，受到影响的条目将从当前的位置删除，并放到条目链表的尾部（只有条目在链表中的位置会受影响，而散列表中的桶不会受影响。一个条目总位于与键散列码对应的桶中）。</li><li>EmimSet 是一个枚举类型元素集的高效实现。EnumSet 类没有公共的构造器。</li><li><code>IdentityHashMap</code> 类的键的散列值不是用 <code>hashCode</code> 函数计算 的，而是用 <code>System.identityHashCode</code> 方法计算的。它根据对象的内存地址来计算散列码。两个对象在比较时使用 <code>==</code>。</li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（六）</title>
      <link href="/blog/2020/03/14/java-notes-6/"/>
      <url>/blog/2020/03/14/java-notes-6/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="范型程序设计">范型程序设计</h2><a id="more"></a><ul><li><p>构造函数中可以省略泛型类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; file = <span class="keyword">new</span> ArrayList&lt;&gt;()</span><br></pre></td></tr></table></figure></li><li><p>出现编译错误比类在运行时出现类的强制类型转换异常要好得多。</p></li><li><p><code>类型参数</code>使得程序具有更好的<code>可读性</code>和<code>安全性</code>。</p></li><li><p>泛型类可以有多个类型变量，例如 <code>public class Pair&lt;T, U&gt; { ... }</code>。</p></li><li><p>泛型方法可以定义在普通类中，也可以定义在泛型类中。</p></li><li><p>类型变量放在修饰符的后面，返回类型的前面。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArrayAlg</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getMiddle</span><span class="params">(T... a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[a.length / <span class="number">2</span>];</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>当调用一个泛型方法时，在方法名前的尖括号中放人具体的类型：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String middle = ArrayAlg.&lt;String&gt;getMiddle(<span class="string">"John"</span>, <span class="string">"Q."</span>, <span class="string">"Public"</span>);</span><br></pre></td></tr></table></figure></li><li><p>可以通过对类型变量 T 设置<code>限定</code>来对类型变量加以约束。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Comparable&gt; <span class="function">T <span class="title">min</span><span class="params">(T[] a)</span> ...</span></span><br></pre></td></tr></table></figure></li><li><p>一个类型变量或通配符可以有多个限定，例如：<code>T extends Comparable &amp; Serializable</code>。限定类型用 <code>&amp;</code> 分隔，而 <code>,</code> 用来分隔类型变量。</p></li><li><p>在 Java 的继承中，可以根据需要拥有多个接口超类型，但限定中至多有一个类。如果用 一个类作为限定，它必须是限定列表中的第一个。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p></li><li><p>无论何时定义一个泛型类型，都自动提供了一个相应的原始类型（raw type）。</p></li><li><p>原始类型用第一个限定的类型变量来替换，如果没有给定限定就用 <code>Object</code> 替换。</p></li><li><p>当程序调用泛型方法时，如果擦除返回类型，编译器插入强制类型转换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Pair&lt;Employee&gt; buddies = ...;</span><br><span class="line">Employee buddy = buddies.getFirst();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 对原始方法 Pair.getFirst 的调用。</span></span><br><span class="line"><span class="comment">// 2. 将返回的 Object 类型强制转换为 Employee 类型。</span></span><br></pre></td></tr></table></figure></li><li><p>Java 泛型转换：</p><ul><li>虚拟机中没有泛型，只有普通的类和方法。</li><li>所有的类型参数都用它们的限定类型替换。</li><li>桥方法被合成来保持多态。</li><li>为保持类型安全性，必要时插人强制类型转换。</li></ul></li><li><p>桥方法：解决类型擦除与多态发生的冲突。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DateInterval</span> <span class="keyword">extends</span> <span class="title">Pair</span>&lt;<span class="title">LocalDate</span>&gt; </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSecond</span><span class="params">(LocalDate second)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 上述类擦除后会变成</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DateInterval</span> <span class="keyword">extends</span> <span class="title">Pair</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSecond</span><span class="params">(LocalDate second)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 但会从Pair类中继承一个方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pair</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSecond</span><span class="params">(Object second)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 桥方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSecond</span><span class="params">(Object second)</span> </span>&#123; setSecond((Date) second); &#125;</span><br></pre></td></tr></table></figure></li><li><p>大多数 Java 泛型限制都是由类型擦除引起的。</p></li><li><p>不能用类型参数代替基本类型。</p></li><li><p>虚拟机中的对象总有一个特定的非泛型类型。</p></li><li><p>不能实例化参数化类型的数组。</p></li><li><p>不能实例化类型变置。</p></li><li><p>不能构造泛型数组。</p></li><li><p>带有超类型限定的通配符可以向泛型对象写人，带有子类型限定的通配符可以从泛型对象读取。</p></li></ul><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">不太懂</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">道理理解但还需要更详细的文档补充</span><a href="#fnref:2" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>InDesign小技巧</title>
      <link href="/blog/2020/02/27/Indesign-skills/"/>
      <url>/blog/2020/02/27/Indesign-skills/</url>
      
        <content type="html"><![CDATA[<p>记录一些InDesign的小技巧。</p><a id="more"></a><ul><li>InDesign导入高清图像会失真，原因是为了加快图像的加载速度，解决方案：<code>View-&gt;Display Performance-&gt;High Quality Display</code>。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></li></ul><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;"><a href="https://www.jb51.net/Indesign/632934.html" target="_blank" rel="noopener">Indesign导入的高清图片变模糊怎么办?</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adobe </tag>
            
            <tag> indesign </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（五）</title>
      <link href="/blog/2020/02/25/java-notes-5/"/>
      <url>/blog/2020/02/25/java-notes-5/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="异常、断言和日志">异常、断言和日志</h2><a id="more"></a><h3 id="异常">异常</h3><ul><li><p>在 Java 程序设计语言中，异常对象都是派生于 <code>Throwable</code> 类的一个实例。</p></li><li><p><code>Error</code> 类层次结构描述了 Java 运行时系统的内部错误和资源耗尽错误。除了通告给用户，并尽力使程序安全地终止之外，再无能为力。</p></li><li><p>在设计 Java 程序时， 需要关注 <code>Exception</code> 层次结构：</p><ol><li><strong>RuntimeException</strong>：由程序错误导致的异常。</li><li><strong>其它异常</strong>：程序本身没有问题，但由于像<code>I/O错误</code>这类问题导致的异常。</li></ol></li><li><p>如果出现 <code>RuntimeException</code> 异常，那么就一定是你的问题。</p></li><li><p>派生于 Error 类或 RuntimeException 类的所有异常称为<code>非受查（unchecked）异常</code>，所有其他的异常称为<code>受查（checked）异常</code>。</p></li><li><p>一个方法必须声明所有可能抛出的受查异常，而非受查异常要么不可控制（Error），要么就应该避免发生（RuntimeException）。</p></li><li><p>抛出异常：</p><ol><li>找到一个合适的异常类。</li><li>创建这个类的一个对象。</li><li>将对象抛出。</li></ol></li><li><p>如果调用了一个抛出受查异常的方法，就必须对它进行处理，或者继续传递。</p></li><li><p>应该捕获那些<code>知道如何处理的异常</code>，而将那些<code>不知道怎样处理的异常</code>继续进行传递。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(String filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    InputStream in = <span class="keyword">new</span> FileInputStream(filename);</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">    <span class="keyword">while</span> ((b = in.read()) != -<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// process input</span></span><br><span class="line">      ...</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (IOException exception)</span><br><span class="line">  &#123;</span><br><span class="line">    exception.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更好的选择👇</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(String filename)</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  InputStream in = <span class="keyword">new</span> FileInputStream(filename);</span><br><span class="line">  <span class="keyword">int</span> b;</span><br><span class="line">  <span class="keyword">while</span> ((b = in.read()) != -<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// process input</span></span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>如果编写一个覆盖超类的方法，而这个方法又没有抛出异常，那么这个方法就必须捕获方法代码中出现的每一个受查异常。</p></li><li><p>不允许在子类的 throws 说明符中出现超过超类方法所列出的异常类范围。</p></li><li><p>强烈建议使用这种包装技术，这样可以让用户抛出子系统中的高级异常，而不会丢失原始异常的细节。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> </span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// access the database</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e)</span><br><span class="line">&#123;</span><br><span class="line">  Throwable se = <span class="keyword">new</span> ServletException(<span class="string">"database error"</span>);</span><br><span class="line">  se.initCause(e);</span><br><span class="line">  <span class="keyword">throw</span> se;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得原始异常</span></span><br><span class="line">Throwable e = se.getCause();</span><br></pre></td></tr></table></figure></li><li><p>不管是否有异常被捕获，<code>finally</code> 子句中的代码都被执行。</p></li><li><p><code>带资源的 try 语句</code>可以很好地处理“如果 try 块抛出一个异常，而且 close 方法也抛出一个异常”的问题。</p></li><li><p>异常处理不能代替简单的测试。因为异常捕获的耗时较长。</p></li><li><p>不要过分地细化异常。</p></li><li><p>不要压制异常。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p></li><li><p>在检测错误时，“苛刻”要比“放任”更好。尽早抛出异常可以让使用者更方便的处理，而未知的异常才是最难检查的。</p></li><li><p>不要羞于传递异常。</p></li></ul><hr><h3 id="断言">断言</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span> 条件;</span><br><span class="line"><span class="keyword">assert</span> 条件:表达式;</span><br></pre></td></tr></table></figure><ul><li>断言失败是致命的、不可恢复的错误。</li><li>断言检查只用于开发和测阶段。</li></ul><hr><ul><li>7个日志记录器级别：<ul><li>SEVERE</li><li>WARNING</li><li>INFO</li><li>CONFIG</li><li>FINE</li><li>FINER</li><li>FINEST<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">没太看懂</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（四）</title>
      <link href="/blog/2020/02/24/java-notes-4/"/>
      <url>/blog/2020/02/24/java-notes-4/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="接口、lambda-表达式与内部类">接口、lambda 表达式与内部类</h2><a id="more"></a><h3 id="接口">接口</h3><ul><li><p>接口中的所有方法自动地属于 <code>public</code>，在接口中声明方法时不必提供关键字 <code>public</code>。</p></li><li><p>接口绝不能含有 <code>实例域</code>。提供实例域和方法实现的任务应该由实现接口的那个类来完成。</p></li><li><p>为了让类实现一个接口，需要：</p><ol><li>将类声明为实现给定的接口。<br>要将类声明为实现某个接口，需要使用关键字 <strong>implements</strong>。</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span> <span class="keyword">implements</span> <span class="title">Comparable</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>对接口中的所有方法进行定义。</li></ol></li><li><p>如果存在这样一种通用算法，它能够对两个不同的子类对象进行比较，则应该在<code>超类</code>中提供一个 <code>compareTo</code> 方法，并将这个方法声明为 <code>final</code>。</p></li><li><p>接口不是类，不能使用 <code>new</code> 运算符实例化一个接口，但是可以声明接口的变量，接口变量必须引用实现了接口的类对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="keyword">new</span> Comparable(...); <span class="comment">// ERROR</span></span><br><span class="line">Comparable x; <span class="comment">// OK</span></span><br><span class="line">x = <span class="keyword">new</span> Employee(...); <span class="comment">// OK provided Employee implements Comparable</span></span><br></pre></td></tr></table></figure></li><li><p>可以使用 <code>instance</code> 检查一个对象是否实现了某个特定的接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> Comparable) &#123;...&#125;</span><br></pre></td></tr></table></figure></li><li><p>接口中的域将被自动设为 <code>public static final</code>。</p></li><li><p>在实现接口时，必须把方法声明为 <code>public</code>，否则，编译器将认为这个方法的访问属性是包可见性，即类的默认访问属性，之后编译器就会给出试图提供更严格的访问权限的警告信息。</p></li><li><p>每个类可以实现多个接口。</p></li><li><p>可以为接口方法提供一个默认实现，必须用 <code>default</code> 修饰符标记这样一个方法。</p></li><li><p>默认方法的一个重要用法是 <code>接口演化（interface evolution）</code>，保证不会对旧代码产生影响。</p></li><li><p>如果先在一个接口中将一个方法定义为默认方法，然后又在超类或另一个接口中定义了同样的方法，遵循如下规则：</p><ol><li>超类优先。<br>如果超类提供了一个具体方法，同名而且有相同参数类型的默认方法会被忽略。</li><li>接口冲突。<br>如果一个超接口提供了一个默认方法，另一个接口提供了一个同名而且参数类型(不论是否是默认参数)相同的方法，必须覆盖这个方法来解决冲突。</li></ol></li></ul><hr><p>接口与回调可能在这里不太看得懂，暂时跳过。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p><hr><h3 id="lambda-表达式">lambda 表达式</h3><ul><li><p>lambda表达式就是一个代码块， 以及必须传入代码的变量规范。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(String first, String second)</span><br><span class="line">  -&gt; first.length() - second.length()</span><br></pre></td></tr></table></figure></li><li><p>如果代码要完成的计算无法放在一个表达式中，就可以像写方法一样，把这些代码放在 <code>{}</code> 中， 并包含显式的 return 语句。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(String first, String second) -&gt;</span><br><span class="line">&#123; </span><br><span class="line">  <span class="keyword">if</span> (first.length() &lt; second.length()) <span class="keyword">return</span> -<span class="number">1</span>; </span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (first.length() &gt; second.length()) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>即使 lambda 表达式没有参数，仍然要提供空括号，就像无参数方法一样。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">() -&gt; &#123; <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">100</span>; i &gt;= <span class="number">0</span>; i-- ) System.out.println(i); &#125;</span><br></pre></td></tr></table></figure></li><li><p>如果可以推导出一个 lambda 表达式的参数类型，则可以忽略其类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comparator&lt;String&gt; comp</span><br><span class="line">= (first, second) <span class="comment">// Same as (String first, String second)</span></span><br><span class="line">  -&gt; first.length() - second.length();</span><br></pre></td></tr></table></figure></li><li><p>如果方法只有一个参数，而且这个参数的类型可以推导得出，那么甚至还可以省略小括号。</p></li><li><p>无需指定 lambda 表达式的返回类型。lambda 表达式的返回类型总是会由上下文推导得出。</p></li><li><p>要用 <code>::</code> 操作符分隔方法名与对象或类名主要有3种情况：</p><ul><li>object::instanceMethod</li><li>Class::staticMethod</li><li>Class::instanceMethod</li></ul></li><li><p>无法构造泛型类型 <code>T</code> 的数组。（数组构造器引用对于克服这个限制很有用。）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Object[] people = stream.toArray(); <span class="comment">// Object数组引用</span></span><br><span class="line">Person[] people = stream.toArray(Person[]::<span class="keyword">new</span>); <span class="comment">// Person数组引用</span></span><br></pre></td></tr></table></figure></li><li><p>lambda 表达式中捕获的变量必须实际上是<code>最终变量（effectively final）</code>。</p></li><li><p>lambda 表达式的体与嵌套块有相同的作用域。</p></li><li><p>在 lambda 表达式中声明与一个局部变量同名的参数或局部变量是不合法的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Path first = Paths.get(<span class="string">"/usr/bin"</span>); </span><br><span class="line">Comparator&lt;String&gt; comp =</span><br><span class="line">(first, second) -&gt; first.length() - second.length();</span><br><span class="line"><span class="comment">// Error: Variable first already defined</span></span><br></pre></td></tr></table></figure></li><li><p>在一个 lambda 表达式中使用 <code>this</code> 关键字时，是指创建这个 lambda 表达式的方法的 <code>this</code> 参数。</p></li><li><p>使用 lambda 表达式的重点是<code>延迟执行（deferred execution）</code>。</p></li></ul><hr><h3 id="内部类">内部类</h3><ul><li>使用内部类的原因：<ul><li>内部类方法可以访问该类定义所在的作用域中的数据，包括私有的数据。</li><li>内部类可以对同一个包中的其他类隐藏起来。</li><li>当想要定义一个回调函数且不想编写大量代码时，使用匿名（anonymous）内部类比较便捷。</li></ul></li><li>使用外围类引用的正规语法为 <code>OuterClass.this</code>。</li></ul><p>好晕啊😭，看不懂。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p><p>代理也待看<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">待看</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">待看</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">待看</span><a href="#fnref:3" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下超好用的软件——Teleport ultra</title>
      <link href="/blog/2020/02/21/teleport-ultra-for-windows/"/>
      <url>/blog/2020/02/21/teleport-ultra-for-windows/</url>
      
        <content type="html"><![CDATA[<p><code>Teleport ultra</code> 是一个可以把整个站离线下载下来的工具，超级好用。<br>有很多技术文档都是在线的、静态的，用这个工具很合适～</p><a id="more"></a><ol><li>新建项目向导</li><li>复制一个网址，包含该网站的目录结构</li><li>选择网站和爬取深度</li><li>选择爬取所有文件</li><li>保存当前项目</li><li>点击蓝色三角号▶️开始按钮</li><li>完成</li></ol>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> software </tag>
            
            <tag> windows </tag>
            
            <tag> teleport ultra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信文章svg交互</title>
      <link href="/blog/2020/02/20/wechat-svg/"/>
      <url>/blog/2020/02/20/wechat-svg/</url>
      
        <content type="html"><![CDATA[<p>如果不是特别想做的话，还是在文章的开头劝退一波，因为 <strong>付出 &gt;&gt; 收获</strong>，不论如何，最终的反响不是特别好。</p><a id="more"></a><p>回归正题，前前后后弄了一周多的时间，期间都是高强度研究的那种，踩过了很多坑，希望大家复现的时候少踩些坑。</p><h2 id="壹">壹</h2><p>最初的时候是一篇名叫<a href="https://mp.weixin.qq.com/s/-gugc0Gn0XZXSOONw-NKHg" target="_blank" rel="noopener">《2020，我的新年签居然是…》</a>的推送吸引了大家的注意力，站在他们的肩（chuang）膀（yi）上，我们做了进一步的升华。</p><p>首先需要了解一下微信文章推送的定位，它是一个<code>阉割</code>了的网页，只保留了<code>文本</code>、<code>媒体</code>和<code>样式</code>这三种内容，而我们正常网页交互所使用的 <code>js</code> 则完全不能使用，甚至连 <code>&lt;style&gt;&lt;/style&gt;</code> 这样的样式标签也会被移除。一句话概括，你只能展示内容，而无法与读者互动，无法交互。</p><p>而 <code>svg</code> 是为数不多的可以用到的可定制式的交互样式，它的出身可以百度如果你感兴趣。<code>svg</code> 能够做到的交互我目前知道两个<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，简要概括就是：<code>透明度/角度变化</code>和<code>（按照固定轨迹）移动</code>，基本上所有的交互都是这两个交互的<code>延伸</code>和<code>组合</code>。</p><p><strong>透明度/角度变化</strong>：实际中用到的就是<code>点击空白处显示文字</code>。<br><strong>（按照固定轨迹）移动</strong>：<code>点击移动</code>、<code>抽奖</code>等。</p><h2 id="贰">贰</h2><p>抽签的本质上就是<strong>签高速的移动</strong>，可能有些人不太理解，我解释下。如果不想了解或者觉得我解释的不清楚可以跳过或者看<a href="https://www.zhihu.com/question/25403913/answer/142033761" target="_blank" rel="noopener">《为什么高速顺时针旋转的车轮看起来像是缓慢的逆时针旋转？》</a>。</p><p>我们偶尔看公路上的车轮会保持静止，因为车轮速度过快，每次看到的时候车轮都保持同一个位置，这就是高速带来的<code>静止</code>效果。<code>svg</code> 有一个参数就是可以让某一秒的画面代替动画中间的间隙效果，后面会详细介绍。</p><h2 id="叁">叁</h2><p>签的所有设计工作在 <code>Adobe illustrator</code> 中进行，后续的修补和动画通过<code>修改代码</code>完成。</p><p>在所有工作开始前一定要确定的事情是你整个画布的大小，后续所有的调整和动画都是基于<code>数值计算</code>的，如果最后才发现开始设计得不统一，再回来修改的话，等于之前所有的工作都要重做一遍。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p><p>我选取的画布大小是 <code>640*960</code>，后续所有的参数都是基于这个。</p><p>新建画布的时候，一定要去画布预设里把文档的出血设置成 <code>0</code>，出血是为了打印时四周预留足够的空间，但我们要精确计算到像素，所以必须要刨除这些不确定因素。</p><p>接下来就是画面能动起来的重中之重：<code>图层结构</code>。</p><p>在介绍之前先了解一下 <code>Adobe illustrator</code> 的<code>编组</code>功能，<code>编组</code>功能的作用是能够让许多对象<code>作为一个整体</code>进行编辑等后续操作。体现在 <code>svg</code> 代码中则易于理解些，即众多对象被 <code>&lt;g&gt;&lt;/g&gt;</code> 标签包裹。</p><p>将图层结构与代码结构综合理解，有助于对整个动画的原理进行理解，如果觉得有些难以理解，可以跳过，只要按步骤做即可。</p><p>首先说图层结构，图层结构总体设计如下（假设16张签面）：</p><center><p><img src="//onns.xyz/blog/image/20200220-2.jpg" alt="图层结构"></p><p>图1 图层结构</p></center><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">新年签设计</span><br><span class="line">├── 前景</span><br><span class="line">|   ├── 签面1</span><br><span class="line">|   |   ├── “门”字</span><br><span class="line">|   |   ├── “门”字</span><br><span class="line">|   |   ├── “满”字</span><br><span class="line">|   |   ├── “绩”字</span><br><span class="line">|   |   └── 签1背景图</span><br><span class="line">|   ├── 签面2</span><br><span class="line">|   ├── ...</span><br><span class="line">|   └── 签面16</span><br><span class="line">├── 背景</span><br><span class="line">|   ├── 2020文字</span><br><span class="line">|   ├── 老鼠图案</span><br><span class="line">|   ├── ...</span><br><span class="line">|   └── 红色背景</span><br></pre></td></tr></table></figure><p>接下来详细讲一下。</p><p>首先要把签上<code>动的部分</code>和<code>不动的部分</code>分开，<code>不动的部分</code>放在<strong>背景层</strong>，只要放在背景层里，细致的结构无须考虑；<code>动的部分</code>放在<strong>前景层</strong>，每个签面内容都编组为一个整体，16个整体在<strong>前景层</strong>里是平行关系，处于同一层次。</p><p>每个签内容保证在编组里即可，内部的细节层次结构也都不影响。</p><p>接下来的重点是，每个签的位置摆放。16个签<strong>依次水平等间距摆放</strong>即可。</p><p>需要注意 <code>png</code> 格式的图片大小不能超过 <strong>100kb</strong>。<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></p><center><p><img src="//onns.xyz/blog/image/20200220-1.jpg" alt="设计图"></p><p>图2 设计图</p></center><p>摆放时需要满足的要求是：<strong>画布宽度中只允许出现一个签</strong>，长度为 <code>640</code> 的画布每个签之间的水平间距应该<code>大于等于640</code>。</p><p><code>图2</code>中<strong>门门满绩</strong>相对于画布左上角的相对位置是：<code>x:131 y:164</code>，那么<strong>瘦十斤</strong>相对于画布左上角的位置应该是：<code>x:131+640 y:164</code>。</p><p>等整体设计完成之后，就可以导出了。</p><center><p><img src="//onns.xyz/blog/image/20200220-3.jpg" alt="导出选项"></p><p>图3 导出选项</p></center><p>选择导出为 <code>svg</code>，然后需要注意两个参数：</p><ol><li>样式选择为 <code>演示文稿属性</code><sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></li><li>图像选择为 <code>链接</code><sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup></li></ol><p>然后你就拥有了以 <code>&lt;svg&gt;&lt;/svg&gt;</code> 包裹的签代码，就可以添加动画了。</p><hr><p>写了俩小时写不动了，歇会儿😂</p><hr><h2 id="肆">肆</h2><p>在用文本编辑器打开 <code>svg</code>之后，你会看到如下的一个标签结构。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xlink</span>=<span class="string">"http://www.w3.org/1999/xlink"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">viewBox</span>=<span class="string">"0 0 640 96000"</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先要做的是将 <code>svg</code> 标签属性里的 <code>viewBox</code> 大小设置为我们的画布大小，改为 <code>0 0 640 960</code>。</p><p>在 <code>Adobe illustrator</code> 里的文档结构在 <code>svg</code> 代码里会完全反过来。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xlink</span>=<span class="string">"http://www.w3.org/1999/xlink"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">viewBox</span>=<span class="string">"0 0 640 9600"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 背景层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签16<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签2<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签1<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加动画的方法非常简单，在属于前景层的 <code>&lt;g&gt;&lt;/g&gt;</code> 里添加代码即可：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xlink</span>=<span class="string">"http://www.w3.org/1999/xlink"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">viewBox</span>=<span class="string">"0 0 640 9600"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 背景层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签16<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签2<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签1<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">animateTransform</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">attributeName</span>=<span class="string">"transform"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"translate"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">values</span>=<span class="string">"0 0;-640 0;-1280 0;...;-8960 0"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">begin</span>=<span class="string">"0s"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">dur</span>=<span class="string">"0.45s"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">end</span>=<span class="string">"click"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">fill</span>=<span class="string">"freeze"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">calcMode</span>=<span class="string">"discrete"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">repeatCount</span>=<span class="string">"indefinite"</span>&gt;</span><span class="tag">&lt;/<span class="name">animateTransform</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>需要自行修改的属性和解释的属性如下，其它没解释的就自行百度即可。</p><ol><li><code>type</code> 设置为 <code>&quot;translate&quot;</code>，就是移动的意思。</li><li><code>values</code> 设置为每个签的水平间距，值为负，即 <code>0 0</code> 、 <code>-640 0</code> 、 <code>-640*2 0</code> 、 <code>-640*3 0</code>，以此类推。</li><li><code>begin</code> 设置为 <code>0</code>，动画一开始就进行。</li><li><code>dur</code> 为整个动画持续时间，自行设置。</li><li><code>end</code> 何时结束动画，点击结束，即 <code>click</code>。</li><li><code>fill</code> 就是上文提到的动画间隙如何填充，就用固定的画面填充即可，即 <code>freeze</code>。</li><li><code>repeatCount</code> 重复次数，在没点击之前肯定是无限次重复啦。</li></ol><p>至此动画已经可以动起来并且点击停止了，再加一个封面图片就可以了，然后设置封面点击一次就消失。这里可以用透明度降低的动画效果，也可以用移动到画布之外的动画效果。</p><p>前面说过 <code>svg</code> 的标签结构和图层结构是反的，所以新加的封面放在整个文档的最下方，和<code>前景</code>、<code>背景</code>同级。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xlink</span>=<span class="string">"http://www.w3.org/1999/xlink"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">viewBox</span>=<span class="string">"0 0 640 9600"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 背景层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 前景层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 封面层</span><br><span class="line">    <span class="tag">&lt;<span class="name">rect</span> <span class="attr">y</span>=<span class="string">"1.5"</span> <span class="attr">fill</span>=<span class="string">"#b6352f"</span> <span class="attr">width</span>=<span class="string">"649"</span> <span class="attr">height</span>=<span class="string">"960"</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"960"</span> <span class="attr">href</span>=<span class="string">"https://mmbiz.qpic.cn/mmbiz_jpg/g84wSb3VFX7sDq8k89pwzNiaQIibwiav6P7QQrPNCfVibmRAKhlrz1868ybEGAxzKpJaZovZpUw69P15Daqsltiaic7A/0?wx_fmt=jpeg"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">animatetransform</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">attributename</span>=<span class="string">"transform"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"translate"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">values</span>=<span class="string">"0 0;10000 0"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">begin</span>=<span class="string">"click"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">dur</span>=<span class="string">"0.01s"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">fill</span>=<span class="string">"freeze"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">calcmode</span>=<span class="string">"discrete"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">repeatcount</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">animatetransform</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>至此，抽签的 <code>svg</code> 功能方面已经全部完成，下面的额外工作是<code>设计优化</code>和<code>微信公众平台适配</code>。</p><h2 id="伍">伍</h2><p>虽然签做好了，但是有一个很让人无语的问题：只有签面的区域点击才可以，红色背景点击没有办法令签停止。</p><center><p><img src="//onns.xyz/blog/image/20200220-4.jpg" alt="有效区域示意图"></p><p>图4 有效区域示意图</p></center><p>我的第一个解决方法是：<strong>将签面的背景图补成整个画布的大小，周围填充透明像素</strong>。</p><p>当时想出这个办法的时候我都为自己的机智而鼓掌，结果到最后一步的时候现实终于将魔爪伸向了我这只小猫咪了。<strong>微信png图片最大允许100KB</strong>，我整个人都傻了。</p><p>前面都写了<code>画布图片大小</code>影响到整个制作过程，所以我又从头制作了一遍，呵呵。</p><p>作为一个完美主义者，最终还是找到了一个解决方案：<strong>在每个签里加一个拉伸到整个画布大小的透明图像</strong>。这个方法亲测可以把有效区域扩大至整个画布，问题解决。这个透明图像放在<code>签编组</code>的任意位置都可以，反正是透明的，不会造成遮挡。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xlink</span>=<span class="string">"http://www.w3.org/1999/xlink"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">viewBox</span>=<span class="string">"0 0 640 9600"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 背景层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 前景层</span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span> <span class="attr">data-name</span>=<span class="string">"门门满绩"</span>&gt;</span></span><br><span class="line">      // 透明图像</span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"960"</span> <span class="attr">href</span>=<span class="string">"https://mmbiz.qpic.cn/mmbiz_png/g84wSb3VFX4WIFj78My2uNfKb2aBE3j32DkhOa6UEmCy5icgPPLZibMLczvJTMVJGfO1Z3y9eWef5emxn78gb6Ww/0?wx_fmt=png"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 封面层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后把所有的图像传到微信后台然后替换一下链接即可。<br>这里需要注意 <code>Adobe illustrator</code> 导出的 <code>image</code> 标签里的地址属性是 <code>xlink:href=&quot;图像地址&quot;</code>，微信无法识别，需要改成 <code>href=&quot;图像地址&quot;</code>，批量替换即可。</p><h2 id="陆">陆</h2><p>前前后后忙活了好几周，踩了好多坑，也有很多本来不会对整体有影响的小错误出现，唯一促使自己坚持下来的动力就是：<code>做都做了</code>、<code>我有强迫症啊喂，这地方多出几个像素我受不了</code>、<code>我是完美主义者啊，既然做了，那就做好</code>、<code>对阅读量充满期待，万一呢？</code>。前几个是本性，后一个是希冀。事实证明，爬得越高，摔得越惨。平平淡淡的反响，掩饰不住的失落，更别提当时网络的不畅导致二维码没有正常跳转。</p><p>但这就是生活啊，人生啊～永远对未知的结果抱有恐惧和期待。</p><p>不过在我心里，我已经做到最好了。</p><p><a href="https://onns.xyz/s/2020q">https://onns.xyz/s/2020q</a></p><h2 id="完">完</h2><ul><li><a href="https://mp.weixin.qq.com/s/-gugc0Gn0XZXSOONw-NKHg" target="_blank" rel="noopener">2020，我的新年签居然是…</a></li><li><a href="https://zhuanlan.zhihu.com/p/75023148" target="_blank" rel="noopener">详细教你微信公众号正文页SVG交互开发</a></li><li><a href="https://www.zhangxinxu.com/wordpress/2014/08/so-powerful-svg-smil-animation/" target="_blank" rel="noopener">超级强大的SVG SMIL animation动画详解</a></li></ul><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">可能有很多，但我只了解到两个。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">坑1，一定要注意顺序。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">坑2，微信后台只允许上传小于100kb的透明图片，超过的会强制转换为jpg，本来设计的效果全没了，真是个大坑。</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline-block; vertical-align: top;"><a href="https://zhuanlan.zhihu.com/p/75023148" target="_blank" rel="noopener">把Styling选择为Presentation Attributes，这样导出的SVG就不含有style，而且元素的样式也会通过标签属性进行设置，而不使用style内联css。</a></span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline-block; vertical-align: top;">坑2，选别的会把图片变成base64编码后直接保存到文档里，很大的文档导致层次混乱。</span><a href="#fnref:5" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> svg </tag>
            
            <tag> wechat </tag>
            
            <tag> illustrator </tag>
            
            <tag> adobe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>excel字符串查找</title>
      <link href="/blog/2020/02/19/find-string-in-excel/"/>
      <url>/blog/2020/02/19/find-string-in-excel/</url>
      
        <content type="html"><![CDATA[<p>经常会有在excel查找多个字符串的需求，比如在一个大excel表里找几门课，之前一直是导出成 <code>csv</code> 然后对文本文档进行操作，这样最终还要导回 <code>excel</code>，今天花费3、4个小时学了下vb，做了一个宏，直接在excel上操作。</p><a id="more"></a><h2 id="最长公共子序列">最长公共子序列</h2><p>逻辑是将课程名与要查找的课程名进行<code>最长公共子序列</code>匹配，达到阈值则算找到相应的课程。</p><p>所用到的算法可以参考：<br><a href="https://blog.csdn.net/zjxxyz123/article/details/80277721" target="_blank" rel="noopener">最长公共子序列（Longest Common Subsequence）问题</a></p><p>代码copy自 <a href="https://thydzik.com/longest-common-subsequence-implemented-in-vba-visual-basic-for-applications/" target="_blank" rel="noopener">Longest Common Subsequence implemented in VBA (Visual Basic for Applications)</a>，做了简单的修改。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> max(<span class="keyword">ByRef</span> a <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByRef</span> b <span class="keyword">As</span> <span class="built_in">Long</span>) <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    <span class="keyword">If</span> a &gt;= b <span class="keyword">Then</span></span><br><span class="line">        max = a</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        max = b</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> longestCommonSubsequence(<span class="keyword">ByRef</span> string1 <span class="keyword">As</span> <span class="built_in">String</span>, <span class="keyword">ByRef</span> string2 <span class="keyword">As</span> <span class="built_in">String</span>) <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">    <span class="keyword">If</span> string1 = vbNullString <span class="keyword">Or</span> string2 = vbNullString <span class="keyword">Then</span></span><br><span class="line">        MsgBox <span class="string">"出错"</span></span><br><span class="line">        <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">Dim</span> num() <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">'define the array, note rows of zeros get added to front automatically</span></span><br><span class="line">    <span class="keyword">ReDim</span> num(Len(string1), Len(string2))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Long</span>, j <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> Len(string1)</span><br><span class="line">        <span class="keyword">For</span> j = <span class="number">1</span> <span class="keyword">To</span> Len(string2)</span><br><span class="line">            <span class="keyword">If</span> <span class="keyword">Mid</span>$(string1, i, <span class="number">1</span>) = <span class="keyword">Mid</span>$(string2, j, <span class="number">1</span>) <span class="keyword">Then</span></span><br><span class="line">                num(i, j) = num(i - <span class="number">1</span>, j - <span class="number">1</span>) + <span class="number">1</span></span><br><span class="line">            <span class="keyword">Else</span></span><br><span class="line">                num(i, j) = max(num(i - <span class="number">1</span>, j), num(i, j - <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span> j</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> Len(string1) &gt; Len(string2) <span class="keyword">Then</span></span><br><span class="line">        longestCommonSubsequence = num(Len(string1), Len(string2)) * <span class="number">100.0</span> / Len(string2)</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        longestCommonSubsequence = num(Len(string1), Len(string2)) * <span class="number">100.0</span> / Len(string1)</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><h2 id="构建查询字符串">构建查询字符串</h2><p>没有想到在vb里创建一个字符串数组变量这么麻烦，最终还是选择了<a href="https://stackoverflow.com/questions/19369132/declare-and-initialize-string-array-in-vba" target="_blank" rel="noopener">Declare and Initialize String Array in VBA</a>里的方法。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> classList() <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">classList = Split(<span class="string">"符号学,大学语文,统计"</span>, <span class="string">","</span>)</span><br></pre></td></tr></table></figure><p>有点担心需要查询的课程名中有 <code>,</code>，到时候可能要找些别的符号作为分隔符。</p><h2 id="遍历并标记">遍历并标记</h2><p>参考<a href="https://stackoverflow.com/questions/10923053/using-vba-to-select-and-highlight-excel-rows" target="_blank" rel="noopener">Using VBA to Select and Highlight Excel Rows</a>，使用 <code>.EntireRow.Interior.ColorIndex</code> 方法来将整行标记，在excel里，白色的数值是<strong>2</strong>，黄色是<strong>6</strong>。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">If</span> longestCommonSubsequence(Cells(pos, nameRow).<span class="keyword">text</span>, classList(classNum)) &gt; <span class="number">40</span> <span class="keyword">Then</span></span><br><span class="line">Cells(pos, nameRow).EntireRow.Interior.ColorIndex = <span class="number">6</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure><h2 id="完整代码">完整代码</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> max(<span class="keyword">ByRef</span> a <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByRef</span> b <span class="keyword">As</span> <span class="built_in">Long</span>) <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    <span class="keyword">If</span> a &gt;= b <span class="keyword">Then</span></span><br><span class="line">        max = a</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        max = b</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> longestCommonSubsequence(<span class="keyword">ByRef</span> string1 <span class="keyword">As</span> <span class="built_in">String</span>, <span class="keyword">ByRef</span> string2 <span class="keyword">As</span> <span class="built_in">String</span>) <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">    <span class="keyword">If</span> string1 = vbNullString <span class="keyword">Or</span> string2 = vbNullString <span class="keyword">Then</span></span><br><span class="line">        MsgBox <span class="string">"出错"</span></span><br><span class="line">        <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">Dim</span> num() <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">'define the array, note rows of zeros get added to front automatically</span></span><br><span class="line">    <span class="keyword">ReDim</span> num(Len(string1), Len(string2))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Long</span>, j <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> Len(string1)</span><br><span class="line">        <span class="keyword">For</span> j = <span class="number">1</span> <span class="keyword">To</span> Len(string2)</span><br><span class="line">            <span class="keyword">If</span> <span class="keyword">Mid</span>$(string1, i, <span class="number">1</span>) = <span class="keyword">Mid</span>$(string2, j, <span class="number">1</span>) <span class="keyword">Then</span></span><br><span class="line">                num(i, j) = num(i - <span class="number">1</span>, j - <span class="number">1</span>) + <span class="number">1</span></span><br><span class="line">            <span class="keyword">Else</span></span><br><span class="line">                num(i, j) = max(num(i - <span class="number">1</span>, j), num(i, j - <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span> j</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> Len(string1) &gt; Len(string2) <span class="keyword">Then</span></span><br><span class="line">        longestCommonSubsequence = num(Len(string1), Len(string2)) * <span class="number">100.0</span> / Len(string2)</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        longestCommonSubsequence = num(Len(string1), Len(string2)) * <span class="number">100.0</span> / Len(string1)</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> FindAndMark()</span><br><span class="line">    <span class="keyword">Dim</span> pos <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    <span class="keyword">Dim</span> nameRow <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    <span class="keyword">Dim</span> classNum <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> rate <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    nameRow = <span class="number">1</span></span><br><span class="line">    rate = <span class="number">40</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> classList() <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    classList = Split(<span class="string">"符号学,大学语文,统计"</span>, <span class="string">","</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> pos = <span class="number">1</span> <span class="keyword">To</span> Sheet1.UsedRange.Rows.Count    </span><br><span class="line">        Cells(pos, nameRow).EntireRow.Interior.ColorIndex = <span class="number">2</span></span><br><span class="line">    <span class="keyword">Next</span> pos</span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> pos = <span class="number">1</span> <span class="keyword">To</span> Sheet1.UsedRange.Rows.Count</span><br><span class="line">        <span class="keyword">For</span> classNum = <span class="number">0</span> <span class="keyword">To</span> UBound(classList)</span><br><span class="line">            <span class="keyword">If</span> longestCommonSubsequence(Cells(pos, nameRow).<span class="keyword">text</span>, classList(classNum)) &gt; rate <span class="keyword">Then</span></span><br><span class="line">                Cells(pos, nameRow).EntireRow.Interior.ColorIndex = <span class="number">6</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">Next</span> pos</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>完整的代码如上，需要自己拿去修改的地方有：</p><ol><li><code>nameRow</code> 是需要查找的名字所在的列号</li><li><code>classList</code> 是需要查找的名字的集合</li><li><code>rate</code> 是重复率，即阈值</li></ol><h2 id="测试">测试</h2><p>测试结果如图所示：</p><center><p><img src="https://onns.xyz/blog/image/20200219-1.png" alt="测试结果图"></p></center><h2 id="其它">其它</h2><p>如果只显示标黄的相关问题可以百度。</p><ul><li><a href="https://zhidao.baidu.com/question/555387177.html" target="_blank" rel="noopener">在EXCEL表格中，如何把标注黄色的数据单元格筛选出来</a></li></ul><h2 id="参考文档">参考文档</h2><ul><li><a href="https://www.vitoshacademy.com/excel-search-and-highlight-text/" target="_blank" rel="noopener">Excel VBA – Search and highlight text</a></li></ul><p>如果有任何问题可以留言问我～～</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> visual basic for applications </tag>
            
            <tag> macro </tag>
            
            <tag> LCS </tag>
            
            <tag> excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（三）</title>
      <link href="/blog/2020/02/14/java-notes-3/"/>
      <url>/blog/2020/02/14/java-notes-3/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="继承">继承</h2><a id="more"></a><ul><li><p>在设计类的时候，应该将通用的方法放在超类中，而将具有特殊用途的方法放在子类中。</p></li><li><p>子类继承的方法不能直接地访问超类的私有域，可以使用 <code>super</code> 调用超类的方法来重写子类的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSalary</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">double</span> baseSalary = <span class="keyword">super</span>.getSalary();</span><br><span class="line">  <span class="keyword">return</span> baseSalary + bonus;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>super</code> 调用构造器的语句必须是子类构造器的第一条语句。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Manager</span><span class="params">(String name, <span class="keyword">double</span> salary, <span class="keyword">int</span> year, </span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> month, <span class="keyword">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">super</span>(name, salary, year, month, day);</span><br><span class="line">  <span class="comment">// 调用超类 Employee 中含有 n、s、year month </span></span><br><span class="line">  <span class="comment">// 和 day 参数的构造器</span></span><br><span class="line">  bonus = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>如果子类的构造器没有显式地调用超类的构造器，则将自动地调用超类默认（没有参数）的构造器。如果超类没有不带参数的构造器，并且在子类的构造器中又没有显式地调用超类的其他构造器，则 Java 编译器将报告错误。</p></li><li><p><code>super</code> 关键字的两个用途:</p><ol><li>调用超类的方法。</li><li>调用超类的构造器。</li></ol></li><li><p><strong>多态（polymorphism）</strong>：一个对象变量可以指示多种实际类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Manager boss = <span class="keyword">new</span> Manager(. . .);</span><br><span class="line">Employee[] staff = <span class="keyword">new</span> Employee[<span class="number">3</span>];</span><br><span class="line">staff[<span class="number">0</span>] = boss;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在这个例子中，变量 staff[0] 与 boss 引用同一个对象。</span></span><br><span class="line"><span class="comment">// 但编译器将 staff[0] 看成 Employee 对象。 这意味着，</span></span><br><span class="line"><span class="comment">// 可以这样调用</span></span><br><span class="line">boss.setBonus(<span class="number">5000</span>); <span class="comment">// OK</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 但不能这样调用</span></span><br><span class="line">staff[<span class="number">0</span>].setBonus(<span class="number">5000</span>); <span class="comment">// Error</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这是因为 staff[0] 声明的类型是 Employee，</span></span><br><span class="line"><span class="comment">// 而 setBonus 不是 Employee 类的方法。</span></span><br></pre></td></tr></table></figure></li><li><p><strong>动态绑定（dynamic binding）</strong>：在运行时能够自动地选择调用哪个方法。</p></li><li><p>可以将一个子类的对象赋给超类变量，但不能将一个超类的引用赋给子类变量。</p></li><li><p>假设要调用 <code>x.f(args)</code>，隐式参数 <code>x</code> 声明为类 <code>C</code> 的一个对象。</p><ol><li>编译器査看对象的声明类型和方法名。编译器将会一一列举所有 <code>C</code> 类中名为 <code>f</code> 的方法和其超类中访问属性为 <code>public</code> 且名为 <code>f</code> 的方法（超类的私有方法不可访问）。</li><li>编译器将査看调用方法时提供的参数类型。</li><li>如果是private方法、static方法、final方法或者构造器，那么编译器将可以准确地知道应该调用哪个方法，我们将这种调用方式称 <code>为静态绑定(static binding)</code>。</li><li>当程序运行，并且采用动态绑定调用方法时，虚拟机一定调用与 <code>x</code> 所引用对象的实际类型最合适的那个类的方法。</li></ol></li><li><p>每次调用方法都要进行搜索，时间开销相当大。因此，虚拟机预先为每个类创建了一个方法表(method table)，其中列出了所有方法的签名和实际调用的方法。</p></li><li><p>动态绑定有一个非常重要的特性：无需对现存的代码进行修改，就可以对程序进行扩展。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p></li><li><p>不允许扩展的类被称为 <code>final</code> 类。</p></li><li><p><code>final</code> 类中的所有方法自动地成为 <code>final</code> 方法。</p></li><li><p>如果将一个类声明为 <code>final</code>， 只有其中的方法自动地成为 <code>final</code>， 而不包括域。</p></li></ul><hr><ul><li><p>进行类型转换的唯一原因是：在暂时忽视对象的实际类型之后，使用对象的全部功能。</p></li><li><p>在进行类型转换之前，先查看一下是否能够成功地转换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (staff[<span class="number">1</span>] <span class="keyword">instanceof</span> Manager)</span><br><span class="line">&#123;</span><br><span class="line">  boss = (Manager) staff[<span class="number">1</span>];</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>只能在继承层次内进行类型转换。</p></li><li><p>在将超类转换成子类之前，应该使用 <code>instanceof</code> 进行检查。</p></li><li><p>在一般情况下，应该尽量少用类型转换和 <code>instanceof</code> 运算符。</p></li></ul><hr><ul><li><p>包含一个或多个抽象方法的类本身必须被声明为抽象的。</p></li><li><p>抽象方法充当着占位的角色，它们的具体实现在子类中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  . . .</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">getDescription</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>抽象类可以包含具体数据和具体方法。</p><blockquote><p>许多程序员认为，在抽象类中不能包含具体方法。建议尽量将通用的域和方法（不管是否是抽象的）放在超类（不管是否是抽象类）中。</p></blockquote></li><li><p>类即使不含抽象方法，也可以将类声明为抽象类。</p></li><li><p>抽象类不能被实例化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Person(<span class="string">"Vinee Vu"</span>) <span class="comment">// 错误</span></span><br></pre></td></tr></table></figure></li><li><p>可以定义一个抽象类的对象变量，但是它只能引用非抽象子类的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Person p = <span class="keyword">new</span> Student(<span class="string">"Vinee Vu"</span>, <span class="string">"Economics"</span>);</span><br></pre></td></tr></table></figure></li><li><p>Java 用于控制可见性的 4 个访问修饰符：</p><ol><li>仅对本类可见： private。</li><li>对所有类可见： public。</li><li>对本包和所有子类可见： protected。</li><li>对本包可见： 不需要修饰符。</li></ol></li></ul><hr><ul><li>Object 类是 Java 中所有类的始祖，在 Java 中每个类都是由它扩展而来的。</li><li>可以使用 Object 类型的变量引用任何类型的对象。</li></ul><hr><p>编写一个完美的 equals 方法的建议：</p><ol><li>显式参数命名为 otherObject，稍后需要将它转换成另一个叫做 other 的变量。</li><li>检测 this 与 otherObject 是否引用同一个对象：</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> = otherObject) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br></pre></td></tr></table></figure><p>这条语句只是一个优化。实际上，这是一种经常采用的形式。因为计算这个等式要比一个一个地比较类中的域所付出的代价小得多。<br>3. 检测 otherObject 是否为 null ,如果为 null ，返回 false。这项检测是很必要的。</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (otherObject = <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>比较 this 与 otherObject 是否属于同一个类。如果 equals 的语义在每个子类中有所改变，就使用 getClass 检测：</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (getClass() != otherObject.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><p>如果所有的子类都拥有统一的语义，就使用 instanceof 检测:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!(otherObject <span class="keyword">instanceof</span> ClassName)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><ol start="5"><li>将 otherObject 转换为相应的类类型变量：</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ClassName other = (ClassName) otherObject</span><br></pre></td></tr></table></figure><ol start="6"><li>现在开始对所有需要比较的域进行比较了。使用 <code>==</code> 比较基本类型域，使用equals比较对象域。如果所有的域都匹配，就返回true；否则返回false。</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> field1 == other.field1</span><br><span class="line">  &amp;&amp; Objects.equals(field2, other.field2)</span><br><span class="line">  &amp;&amp; . . . ;</span><br></pre></td></tr></table></figure><p>如果在子类中重新定义equals, 就要在其中包含调用 super.equals(other)。</p><hr><ul><li>只要对象与一个字符串通过操作符 “+” 连接起来，Java 编译就会自动地调用 <code>toString</code> 方法，以便获得这个对象的字符串描述。</li></ul><hr><ul><li><p>范型数组列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br></pre></td></tr></table></figure></li><li><p>不必指出数组的大小。</p></li><li><p>使用 add 将任意多的元素添加到数组中。</p></li><li><p>使用 size() 替代 length 计算元素的数目。</p></li><li><p>使用 a.get(i) 替代 a[i] 访问元素。</p></li><li><p>一旦能够确认数组列表的大小不再发生变化，就可以调用 <code>trimToSize</code> 方法。这个方法将存储区域的大小调整为当前元素数量所需要的存储空间数目。垃圾回收器将回收多余的存储空间。</p></li><li><p>一旦整理了数组列表的大小，添加新元素就需要花时间再次移动存储块， 所以应该在确认不会添加任何元素时，再调用 <code>trimToSize</code>。</p></li></ul><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Size &#123; SMALL, MEDIUM, LARGE, EXTRA_LARGE &#125;;</span><br></pre></td></tr></table></figure><ul><li>在比较两个枚举类型的值时，永远不需要调用 <code>equals</code>, 而直接使用 <code>==</code> 就可以了。</li></ul><hr><ul><li><p>Object 类中的 <code>getClass()</code> 方法将会返回一个 <code>Class</code> 类型的实例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Employee e;</span><br><span class="line">...</span><br><span class="line">Class cl = e.getClass();</span><br></pre></td></tr></table></figure></li><li><p>可以调用静态方法 <code>forName</code> 获得类名对应的 <code>Class</code> 对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String className = <span class="string">"java.util.Random"</span>;</span><br><span class="line">Class cl = Class.forName(className);</span><br><span class="line"><span class="comment">// 如果类名保存在字符串中，并可在运行中改变，</span></span><br><span class="line"><span class="comment">// 就可以使用这个方法。</span></span><br></pre></td></tr></table></figure></li><li><p>如果 <code>T</code> 是任意的 Java 类型（或 void 关键字），<code>T.class</code> 将代表匹配的类对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Class cl1 = Random.class; <span class="comment">// if you import java.util.*;</span></span><br><span class="line">Class cl2 = <span class="keyword">int</span>.class;</span><br><span class="line">Class cl3 = Double[].class;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>继承的设计技巧<ol><li>将公共操作和域放在超类</li><li>不要使用受保护的域</li><li>使用继承实现 <code>is-a</code> 关系</li><li>除非所有继承的方法都有意义，否则不要使用继承</li><li>在覆盖方法时，不要改变预期的行为</li><li>使用多态，而非类型信息</li><li>不要过多地使用反射</li></ol></li></ul><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">其实没太懂。</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文档同步</title>
      <link href="/blog/2020/02/13/online-doc/"/>
      <url>/blog/2020/02/13/online-doc/</url>
      
        <content type="html"><![CDATA[<p>经常会有这样一种需求：我需要把一段文字从一个设备发送到另一个设备，虽然确实会有很多解决办法，比如登陆QQ、微信，然后传过去，但是这些都<code>需要繁琐的登陆步骤</code>，并且有些时候你需要发送的设备是一台<code>不可信的</code>、<code>你不愿意在上面暴露自己账号密码</code>的设备，所以想弄一个无需登陆的小Demo，花了四个小时，效果还不错。</p><a id="more"></a><h2 id="准备工作">准备工作</h2><h3 id="编辑器">编辑器</h3><p>网页访问应该是最方便快捷的方式了，所以这个小demo就依托 <code>web</code>。解决了框架的问题，下一个需要考虑的问题是选择什么样的前端编辑器。</p><p>最初的设想是采用一些开源的 <code>markdown</code> 编辑器，毕竟 <code>markdown</code> 是我最经常编写的文本样式了，也确实有一些很好看的编辑器：</p><ul><li><a href="https://github.com/lepture/editor" target="_blank" rel="noopener">https://github.com/lepture/editor</a></li><li><a href="https://github.com/sparksuite/simplemde-markdown-editor" target="_blank" rel="noopener">https://github.com/sparksuite/simplemde-markdown-editor</a></li></ul><p>但这背离了我的初衷，我要做的不是一个在线的编辑器，而仅仅是一个可以存放文本的编辑器，markdown的解析和预览需要很大的工作量，且样式不一定是我喜欢的。</p><p>最终我选择一款<a href="http://www.htmleaf.com/css3/ui-design/201609023948.html" target="_blank" rel="noopener">纯CSS3制作可编辑的微软Word样式文档</a>，他的<a href="https://github.com/delight-im/HTML-Sheets-of-Paper" target="_blank" rel="noopener">github地址</a>。</p><h3 id="数据存储">数据存储</h3><p>我的网站挂在GitHub上，只有前端没有服务器，如果仅仅只是为了一个小demo就迁移到服务器上，未免有些小题大做。<br>我的博客上其实就有基于后端的内容，用的是<a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud</a>的服务，免费版的api限制是 <code>3万次/天</code>，对于个人日常使用完全足够。故本demo的数据存储与同步也同样使用 <code>leancloud</code>，相关的文档见<a href="https://leancloud.cn/docs/leanstorage_guide-js.html" target="_blank" rel="noopener">数据存储开发指南 · JavaScript</a>。</p><h2 id="具体实现">具体实现</h2><p>这里只考虑js逻辑，其它详见代码。</p><h3 id="获取当前url参数">获取当前url参数</h3><p>在线文档当然不能只有一个可编辑的页面，所以我的设想是获取 <code>url</code> 上的额外参数，以此作为文档的<strong>唯一ID</strong>，这样就可以有无数个文档可以存放内容，比如 <code>/doc/?1</code> 和 <code>/doc/?12</code> 就是两个不同的文档。<br>而本身的域名可能发生改变，为了方便拓展， <code>url</code> 参数应该是去掉<code>协议（https://）</code>、<code>域名（xxxxx.com）</code>和<code>端口号（80）</code>后的结果。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前url</span></span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">window</span>.location.href.slice(<span class="built_in">window</span>.location.href.indexOf(<span class="string">'/doc/'</span>));</span><br></pre></td></tr></table></figure><h3 id="拉取远端数据">拉取远端数据</h3><p>页面第一次加载时应该拉取远端的数据，来恢复文档内容（如果远端存在备份内容）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">AV.init(&#123;</span><br><span class="line">  appId: <span class="string">"jIRe5LRqbWDB2dxmu7FH8c1S-gzGzoHsz"</span>,</span><br><span class="line">  appKey: <span class="string">"xxxxxxxxxxxxxxxxx"</span>,</span><br><span class="line">  serverURLs: <span class="string">"https://jire5lrq.lc-cn-n1-shared.com"</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> query = <span class="keyword">new</span> AV.Query(<span class="string">'DocSync'</span>);</span><br><span class="line">query.equalTo(<span class="string">'url'</span>, url);</span><br><span class="line">query.find().then(<span class="function"><span class="keyword">function</span> (<span class="params">docsync</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 拉取远端结果</span></span><br><span class="line">  <span class="keyword">if</span> (docsync.length == <span class="number">1</span>) &#123;</span><br><span class="line">    docEle.innerHTML = docsync[<span class="number">0</span>].attributes.content;</span><br><span class="line">    content = docsync[<span class="number">0</span>].attributes.content;</span><br><span class="line">    objectId = docsync[<span class="number">0</span>].id;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="更新远端数据">更新远端数据</h3><p>数据更新的策略是，判断当前页面在远端是否有字段保留，如果有就更新字段即可，否则需要新增一条记录保存当前 <code>url</code> 的内容。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (objectId == <span class="string">''</span>) &#123;</span><br><span class="line">    <span class="comment">// 声明 class</span></span><br><span class="line">    <span class="keyword">var</span> DocSync = AV.Object.extend(<span class="string">'DocSync'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建对象</span></span><br><span class="line">    <span class="keyword">var</span> docsync = <span class="keyword">new</span> DocSync();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 为属性赋值</span></span><br><span class="line">    docsync.set(<span class="string">'url'</span>, url);</span><br><span class="line">    docsync.set(<span class="string">'content'</span>, docEle.innerHTML);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将对象保存到云端</span></span><br><span class="line">    docsync.save().then(<span class="function"><span class="keyword">function</span> (<span class="params">docsync</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 成功保存之后，执行其他逻辑</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'保存成功。objectId：'</span> + docsync.id);</span><br><span class="line">      objectId = docsync.id;</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 异常处理</span></span><br><span class="line">      <span class="built_in">console</span>.log(error);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> docsync = AV.Object.createWithoutData(<span class="string">'DocSync'</span>, objectId);</span><br><span class="line">    docsync.set(<span class="string">'content'</span>, docEle.innerHTML);</span><br><span class="line">    docsync.save().then(<span class="function"><span class="keyword">function</span> (<span class="params">docsync</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'更新成功。'</span>);</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(error);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  content = docEle.innerHTML;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更新策略">更新策略</h3><p>我设置的更新的策略是 <code>10s</code> 自动保存一次。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (docEle.innerHTML != content &amp;&amp; docEle.innerHTML != <span class="string">''</span>) &#123;</span><br><span class="line">    update();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="number">1000</span> * <span class="number">10</span>);</span><br></pre></td></tr></table></figure><h2 id="Demo">Demo</h2><p>详见<a href="https://onns.xyz/doc/">https://onns.xyz/doc/</a>。</p><h2 id="TODO">TODO</h2><ul><li>因为是用 <code>leancloud</code> 服务，不清楚单个字段的大小限制，可能出现无法保存或无法完整保存的情况，需要编辑器加以限制。</li><li>一些诸如保存时间、字数大小等控制信息的显示。</li><li>编辑器本身支持很多功能，需要相关组件来丰富。</li><li>由于接口调用限制，数据的远端拉取并未定时执行而只会在网页加载时执行一次，可以有更多合理的策略。</li><li>更新策略也可以更智能，比如如果新增文字数大于<code>阈值</code>则马上更新。</li><li>手机端UI不友好。</li></ul><p>如果有建议欢迎留言～</p>]]></content>
      
      
      <categories>
          
          <category> idea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sync </tag>
            
            <tag> serverless </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（二）</title>
      <link href="/blog/2020/02/11/java-notes-2/"/>
      <url>/blog/2020/02/11/java-notes-2/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="对象与类">对象与类</h2><a id="more"></a><p>一个对象变量并没有实际包含一个对象，而仅仅引用一个对象。</p><ul><li>更改器方法（mutator method）：改变对象的状态。</li><li>访问器方法（accessor method）：只访问对象而不修改对象的方法。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MyCalendar.java</span></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCalendar</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LocalDate nowDate = LocalDate.now();</span><br><span class="line">        <span class="keyword">int</span> day = nowDate.getDayOfMonth();</span><br><span class="line">        System.out.println(<span class="string">"Sun Mon Tue Wed Thu Fri Sat"</span>);</span><br><span class="line">        <span class="keyword">int</span> week = nowDate.getDayOfWeek().getValue();</span><br><span class="line">        <span class="keyword">int</span> n = (<span class="number">7</span> - (day - week) % <span class="number">7</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            System.out.print(<span class="string">"    "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= nowDate.lengthOfMonth(); i++) &#123;</span><br><span class="line">            n++;</span><br><span class="line">            System.out.printf(<span class="string">"%3d"</span>, i);</span><br><span class="line">            <span class="keyword">if</span> (n % <span class="number">7</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == day) &#123;</span><br><span class="line">                    System.out.print(<span class="string">"*"</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">" "</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This program tests the Employee class.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.12 2015-05-08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Cay Horstmann</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeTest</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="comment">// fill the staff array with three Employee objects</span></span><br><span class="line">      Employee[] staff = <span class="keyword">new</span> Employee[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">      staff[<span class="number">0</span>] = <span class="keyword">new</span> Employee(<span class="string">"Carl Cracker"</span>, <span class="number">75000</span>, <span class="number">1987</span>, <span class="number">12</span>, <span class="number">15</span>);</span><br><span class="line">      staff[<span class="number">1</span>] = <span class="keyword">new</span> Employee(<span class="string">"Harry Hacker"</span>, <span class="number">50000</span>, <span class="number">1989</span>, <span class="number">10</span>, <span class="number">1</span>);</span><br><span class="line">      staff[<span class="number">2</span>] = <span class="keyword">new</span> Employee(<span class="string">"Tony Tester"</span>, <span class="number">40000</span>, <span class="number">1990</span>, <span class="number">3</span>, <span class="number">15</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// raise everyone's salary by 5%</span></span><br><span class="line">      <span class="keyword">for</span> (Employee e : staff)</span><br><span class="line">         e.raiseSalary(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// print out information about all Employee objects</span></span><br><span class="line">      <span class="keyword">for</span> (Employee e : staff)</span><br><span class="line">         System.out.println(<span class="string">"name="</span> + e.getName() + <span class="string">",salary="</span> + e.getSalary() + <span class="string">",hireDay="</span> + e.getHireDay());</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">double</span> salary;</span><br><span class="line">   <span class="keyword">private</span> LocalDate hireDay;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(String n, <span class="keyword">double</span> s, <span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line">      name = n;</span><br><span class="line">      salary = s;</span><br><span class="line">      hireDay = LocalDate.of(year, month, day);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSalary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> salary;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> LocalDate <span class="title">getHireDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hireDay;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">raiseSalary</span><span class="params">(<span class="keyword">double</span> byPercent)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">double</span> raise = salary * byPercent / <span class="number">100</span>;</span><br><span class="line">      salary += raise;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在一个源文件中，只能有一个公有类，但可以有任意数目的非公有类。</li><li>类通常包括类型属于某个类类型的实例域。</li><li>构造器总是伴随着 <code>new</code> 操作符的执行被调用，而不能对一个已经存在的对象调用构造器来达到重新设置实例域的目的。</li><li>构造器<ul><li>构造器与类同名</li><li>每个类可以有一个以上的构造器</li><li>构造器可以有 0 个、1 个或多个参数</li><li>构造器没有返回值</li><li>构造器总是伴随着 new 操作一起调用</li></ul></li><li>不要在构造器中定义与实例域重名的局部变量。</li></ul><hr><ul><li>如果将域定义为 <code>static</code>，每个类中只有一个这样的域。</li><li>静态方法是一种不能向对象实施操作的方法。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></li><li>静态方法可以访问自身类中的静态域。</li><li>使用静态方法的情况：<ol><li>方法不需要访问对象状态，其所需参数都是通过显式参数提供。</li><li>一个方法只需要访问类的静态域。</li></ol></li></ul><hr><ul><li>Java 程序设计语言总是采用 <code>按值调用</code>。也就是说， 方法得到的是所有参数值的一个<code>拷贝</code>，方法不能修改传递给它的任何参数变量的内容。</li><li>Java 的对象引用也是按值传递的。</li></ul><hr><ul><li><p>如果在编写一个类时没有编写构造器，那么系统就会提供一个无参数构造器。</p></li><li><p>如果类中提供了至少一个构造器，但是没有提供无参数的构造器，则在构造对象时如果没有提供参数就会被视为不合法。</p></li><li><p>如果构造器的第一个语句形如 this(…)，这个构造器将调用同一个类的另一个构造器。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(<span class="keyword">double</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// calls the Employee(String, double) constructor</span></span><br><span class="line">  <span class="keyword">this</span>(<span class="string">"Employee #"</span> + nextId, s);</span><br><span class="line">  <span class="comment">// 对公共的构造器代码部分只编写一次即可。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>初始化数据域的方法：</p><ol><li>在构造器中设置值</li><li>在声明中赋值</li><li>初始化块(initialization block)</li></ol></li><li><p>new操作时，首先运行初始化块，然后才运行构造器的主体部分。</p></li><li><p>调用构造器的具体处理步骤：</p><ol><li>所有数据域被初始化为默认值(0、false 或 null)。</li><li>按照在类声明中出现的次序，依次执行所有域初始化语句和初始化块。</li><li>如果构造器第一行调用了第二个构造器，则执行第二个构造器主体。</li><li>执行这个构造器的主体。</li></ol></li><li><p>如果对类的静态域进行初始化的代码比较复杂，那么可以使用静态的初始化块。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// static initialization block</span></span><br><span class="line"><span class="keyword">static</span></span><br><span class="line">&#123;</span><br><span class="line">  Random generator = <span class="keyword">new</span> Random();</span><br><span class="line">  <span class="comment">// set nextId to a random number between 0 and 9999</span></span><br><span class="line">  nextId = generator.nextInt(<span class="number">10000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><code>import</code> 语句应该位于源文件的顶部，但位于 package 语句的后面。</li><li>import 语句不仅可以导人类，还增加了导人静态方法和静态域的功能。</li><li>要想将一个类放人包中， 就必须将包的名字放在源文件的开头。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.horstmann.corejava;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>类设计技巧：<ol><li>一定要保证数据私有</li><li>一定要对数据初始化</li><li>不要在类中使用过多的基本类型</li><li>不是所有的域都需要独立的域访问器和域更改器</li><li>将职责过多的类进行分解</li><li>类名和方法名要能够体现它们的职责</li><li>优先使用不可变的类</li></ol></li></ul><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">我自己的理解是，因为静态方法可以在不new的前提下使用，所以不能对需要new之后的对象操作。</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（一）</title>
      <link href="/blog/2020/02/10/java-notes-1/"/>
      <url>/blog/2020/02/10/java-notes-1/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="Java-的基本程序设计结构">Java 的基本程序设计结构</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstSample</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"hello java"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Java 中定义类名的规则很宽松。名字必须以字母开头，后面可以跟字母和数字的任意组合，长度基本上没有限制，但是不能使用 Java 保留字作为类名。</li><li>标准的命名规范为：类名是以大写字母开头的名词。如果名字由多个单词组成，每个单词的第一个字母都应该大写。</li><li>源代码的文件名必须与公共类的名字相同，并用 <code>.java</code> 作为扩展名。</li></ul><hr><ul><li>长整型数值有一个后缀 <code>L</code> 或 <code>l</code>。<ul><li>4000000000L</li></ul></li><li>十六进制数值有一个前缀 <code>0x</code> 或 <code>0X</code>。<ul><li>0xCAFE</li></ul></li><li>八进制有一个前缀 <code>0</code>。<ul><li>010 是十进制的8</li></ul></li><li>加上前缀 <code>0b</code> 或 <code>0B</code> 就可以写二进制数。<ul><li>0b1001 是十进制的9</li></ul></li></ul><hr><ul><li><p>Unicode 转义序列在解析代码之前进行</p><ul><li>注释中的 <code>\u</code> 也会被转义</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String\u005B\u005D args)</span> \\ 合法</span></span><br><span class="line"><span class="function">\\ 等价于</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/onns/insight_python/blob/master/Unicode_and_Character_Sets.md" target="_blank" rel="noopener">码点</a></p></li><li><p>可以在任意位置声明变量</p></li><li><p><code>final</code> 声明常量</p><ul><li>关键字 <code>final</code> 表示这个变量只能被赋值一次。一旦被赋值之后，就不能够再更改了。习惯上，常量名使用全大写。</li></ul></li><li><p>如果运算符得到一个值，其类型与左侧操作数的类型不同，就会发生强制类型转换。</p><ul><li><code>x += 3.5;</code> 等价于 <code>x = (int)(x + 3.5);</code></li></ul></li><li><p><code>+=</code> 是右结合运算符</p><ul><li><code>a += b += c</code> 等价于 <code>a += (b += c)</code></li></ul></li><li><p>位运算符</p><ul><li><code>&amp;</code> (“and”)</li><li><code>|</code> (“or”)</li><li><code>^</code> (“xor”)</li><li><code>~</code> (“not”)</li><li><code>&gt;&gt;</code> 左移</li><li><code>&lt;&lt;</code> 右移</li><li><code>&gt;&gt;&gt;</code> 运算符会用 0 填充高位</li></ul></li><li><p>String 类对象为不可变字符串，不能修改。</p></li></ul><hr><ul><li>Java 提供了一种带标签的 break 语句， 用于跳出多重嵌套的循环语句。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">label:</span><br><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">break</span> label;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><code>Arrays.toString(a)</code> 打印数组中的所有值。</li><li><code>Arrays.deepToString(a)</code> 快速地打印一个二维数组的数据元素列表。</li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C测试系统设计</title>
      <link href="/blog/2020/02/06/ctest-design/"/>
      <url>/blog/2020/02/06/ctest-design/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>因为必须要给同学们的C程序看代码，但是挨个手工检查也太麻烦且耗时间了，所以还是弄个小小的测试系统吧。</p><a id="more"></a><h2 id="系统流程">系统流程</h2><p>大体的系统流程如<code>图1</code>所示，将学生们编写的C程序文件收集到服务器上后，编译并测试程序，将信息记录并最终展示给学生，方便他们反复提交和修改。</p><center><p><img src="//onns.xyz/blog/image/20200206-1.jpg" alt="系统流程图"></p><p>图1 系统流程图</p></center><h3 id="收集代码">收集代码</h3><p>但凡一种网页语言都有文件上传接口，所以只需要网页表单即可完成代码的收集工作，但我为了偷懒😂，选择了用腾讯微云的文件收集功能，具体可以自行了解。</p><p>在收集代码的时候，规定了文件的命名格式为 <code>学号(题号)</code> 的方式，所以可以得到代码的成员信息和题号信息而不必额外附加说明。</p><h3 id="编译">编译</h3><p>因为想用命令行的c语言工具，最方便的大概就是 <code>gcc</code> 了。<br>window下gcc安装比较麻烦，相关方法可以参照 <a href="http://www.mingw.org/" target="_blank" rel="noopener">MinGW | Minimalist GNU for Windows</a> 进行安装。<br>MacOS和Linux都直接命令行自带gcc，直接使用即可，但后两者在编译时会默认编译为 <code>.o</code> 结尾的文件，而windows是 <code>.exe</code> 结尾的文件，不过问题不大，指定一下即可。</p><p>不过需要注意的是在windows命令行下运行可执行文件的时候，不需要加 <code>./</code> ，所以在系统上需要加以区分。在命名中的一些诸如 <code>()</code> 之类的符号在MacOS下需要转义加 <code>\</code>，但是如果在windows下进行转义又会出错，也要加以区分。</p><h3 id="测试">测试</h3><p>测试是测试C语言程序有没有正确的必要步骤，只要和学生们约定好输入输出的格式，到时候只需要将程序执行结果与标准答案进行字符匹配即可。<br>这里需要注意一个问题是，MacOS下的换行一般以 <code>\n</code> 为主，而windows下则以 <code>\r\n</code> 为主，在匹配前需要将 <code>\r</code> 移除。</p><h3 id="展示">展示</h3><p>这个展示就因人而异了，我选择的是bootstrap的table样式表进行展示。</p><h2 id="具体实现">具体实现</h2><p>整个流程控制是用python完成的，一个 <code>pipe.py</code> 文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件命名格式：      学号(题目).cpp</span></span><br><span class="line"><span class="comment"># 例子：            23020181154229(1).cpp</span></span><br><span class="line"></span><br><span class="line">dir = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line">os_type = <span class="string">'1'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(platform.system() == <span class="string">'Windows'</span>):</span><br><span class="line">    os_type = <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">match</span><span class="params">(name)</span>:</span></span><br><span class="line">    res = re.search(<span class="string">r'^([0-9]+)\(([0-9]+)\)'</span>, name)</span><br><span class="line">    <span class="keyword">if</span>(res):</span><br><span class="line">        <span class="keyword">if</span>(name.endswith(<span class="string">".c"</span>) <span class="keyword">or</span> name.endswith(<span class="string">".cpp"</span>)):</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">untest</span><span class="params">(name)</span>:</span></span><br><span class="line">    res = re.search(<span class="string">r'^0-([0-9]&#123;14&#125;)-([0-9]+)\(([0-9]+)\)'</span>, name)</span><br><span class="line">    <span class="keyword">if</span>(res):</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span><span class="params">(dir)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> home, dirs, files <span class="keyword">in</span> os.walk(dir):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> match(filename):</span><br><span class="line"></span><br><span class="line">                os.rename(os.path.join(home, filename), os.path.join(</span><br><span class="line">                    home, time.strftime(<span class="string">"0-%Y%m%d%H%M%S-"</span>, time.localtime()) + filename))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(dir)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> home, dirs, files <span class="keyword">in</span> os.walk(dir):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> untest(filename):</span><br><span class="line">                newname = <span class="string">'1'</span> + filename[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">                os.rename(os.path.join(home, filename),</span><br><span class="line">                          os.path.join(home, newname))</span><br><span class="line">                <span class="keyword">return</span> newname</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build</span><span class="params">(cname, oname)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = subprocess.check_output(<span class="string">"gcc \"%s\" -o %s"</span> % (cname, oname),</span><br><span class="line">                                      stderr=subprocess.STDOUT,</span><br><span class="line">                                      shell=<span class="keyword">True</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(oname, idata, odata)</span>:</span></span><br><span class="line">    r, w = os.pipe()</span><br><span class="line">    os.write(w, bytes(idata, <span class="string">"utf-8"</span>))</span><br><span class="line">    os.close(w)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(os_type == <span class="string">'1'</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            res = subprocess.check_output(<span class="string">"./%s"</span> % (oname), stdin=r, timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">except</span> subprocess.TimeoutExpired <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">if</span>(os_type == <span class="string">'2'</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            res = subprocess.check_output(<span class="string">"%s"</span> % (oname), stdin=r, timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">except</span> subprocess.TimeoutExpired <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = res.decode(<span class="string">"utf-8"</span>).replace(<span class="string">'\r'</span>, <span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> result.strip().replace(<span class="string">" "</span>,<span class="string">""</span>) == odata.strip().replace(<span class="string">" "</span>,<span class="string">""</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    print(result)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(oname, question)</span>:</span></span><br><span class="line">    question_list = &#123;</span><br><span class="line">        <span class="string">'1'</span>: [[<span class="string">'24'</span>, <span class="string">'0'</span>], [<span class="string">'11'</span>, <span class="string">'1'</span>], [<span class="string">'0'</span>, <span class="string">'0'</span>], [<span class="string">'-2'</span>, <span class="string">'0'</span>], [<span class="string">'-21'</span>, <span class="string">'1'</span>]],</span><br><span class="line">        <span class="string">'2'</span>: [[<span class="string">'a'</span>, <span class="string">'a'</span>], [<span class="string">'A'</span>, <span class="string">'a'</span>], [<span class="string">'Z'</span>, <span class="string">'z'</span>], [<span class="string">'0'</span>, <span class="string">'0'</span>], [<span class="string">'Q'</span>, <span class="string">'q'</span>]],</span><br><span class="line">        <span class="string">'3'</span>: [[<span class="string">'12/14/16\n10/10/15'</span>, <span class="string">'10/10/15'</span>], [<span class="string">'13/12/16\n10/10/15'</span>, <span class="string">'-1'</span>]],</span><br><span class="line">        <span class="string">'4'</span>: [[<span class="string">'1 2 3 4'</span>, <span class="string">'4 1'</span>]],</span><br><span class="line">        <span class="string">'5'</span>: [[<span class="string">'3 4 5'</span>, <span class="string">'1\n1'</span>], [<span class="string">'1.5 1.5 1.5'</span>, <span class="string">'1\n0'</span>], [<span class="string">'0 0 0'</span>, <span class="string">'0\n0'</span>], [<span class="string">'-3 -4 -5'</span>, <span class="string">'0\n0'</span>]],</span><br><span class="line">        <span class="string">'6'</span>: [[<span class="string">'2019 1 1'</span>, <span class="string">'1'</span>], [<span class="string">'1900 3 1'</span>, <span class="string">'60'</span>], [<span class="string">'2000 3 1'</span>, <span class="string">'61'</span>]],</span><br><span class="line">        <span class="string">'7'</span>: [[<span class="string">'1 2 3 4 5 6 7 8 9 10'</span>, <span class="string">'1 1\n'</span>], [<span class="string">'89 56 23 14 789 54 1223 78 12 65'</span>, <span class="string">'12 9\n'</span>], [<span class="string">'3 2 1 1 5 6 7 8 9 10'</span>, <span class="string">'1 3\n'</span>]],</span><br><span class="line">        <span class="string">'8'</span>:[[<span class="string">'1 2 3 4 5 6 7 8 9 10'</span>, <span class="string">'55.00 5.50\n'</span>],[<span class="string">'1 1 1 1 1 1 1 1 1 1'</span>, <span class="string">'10.00 1.00\n'</span>],[<span class="string">'0.6798 0.5958 0.5754 0.4854 0.3895 0.2901 0.1942 0.1053 0.045 0.003'</span>,<span class="string">'3.40 0.34\n'</span>]],</span><br><span class="line">        <span class="string">'9'</span>:[[<span class="string">'1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n5 1 2 3 4'</span>,<span class="string">'15 15 15 15 15\n3.00 3.00 3.00 3.00 3.00\n3.00 3.00 3.00 3.00 3.00\n5 5 5 5 5\n1 1 1 1 1'</span>],[<span class="string">'24 14 8 0 46\n36 20 20 20 96\n34 20 20 2 76\n40 20 20 18 98\n36 20 20 20 96'</span>,<span class="string">'92 192 152 196 192\n18.40 38.40 30.40 39.20 38.40\n34.00 18.80 17.60 12.00 82.40\n40 20 20 20 98\n24 14 8 0 46'</span>]],</span><br><span class="line">        <span class="string">'10'</span>:[[<span class="string">'ASJFKLSJFLSJFLSJFIIQJKZVNIRUQ'</span>,<span class="string">'13\n'</span>],[<span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXY'</span>,<span class="string">'25\n'</span>],[<span class="string">'ONNSISSTUPID'</span>,<span class="string">'8\n'</span>]],</span><br><span class="line">        <span class="string">'11'</span>:[[<span class="string">'dzldzldzl\nd'</span>,<span class="string">'3\n'</span>],[<span class="string">'13757769913\n3'</span>,<span class="string">'2\n'</span>],[<span class="string">'2302018dzllp\nl'</span>,<span class="string">'2\n'</span>],[<span class="string">'QCHZK\nq'</span>,<span class="string">'0\n'</span>]],</span><br><span class="line">        <span class="string">'12'</span>:[[<span class="string">'ASJFKLSJFLSJFLSJFIIQJKZVNIRUQ'</span>,<span class="string">'ASJFKLSJFLSJFLSJFIIQJKZVNIRUQ\n'</span>],[<span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXY'</span>,<span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXY\n'</span>]]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">not</span> question <span class="keyword">in</span> question_list):</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">for</span> test_data <span class="keyword">in</span> question_list[question]:</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> run(oname, test_data[<span class="number">0</span>], test_data[<span class="number">1</span>])):</span><br><span class="line">            print(test_data[<span class="number">0</span>])</span><br><span class="line">            print(test_data[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(data)</span>:</span></span><br><span class="line">    f = open(os.path.join(dir, <span class="string">'result.json'</span>), <span class="string">'r'</span>)</span><br><span class="line">    old_data = json.loads(f.read()[<span class="number">9</span>:<span class="number">-1</span>])</span><br><span class="line">    f.close()</span><br><span class="line">    print(data)</span><br><span class="line">    old_data.append(data)</span><br><span class="line">    f = open(os.path.join(dir, <span class="string">'result.json'</span>), <span class="string">'w'</span>)</span><br><span class="line">    f.write(<span class="string">'callback('</span>+json.dumps(old_data) + <span class="string">')'</span>)</span><br><span class="line">    f.close</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    os.chdir(dir)</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">True</span>):</span><br><span class="line">        homework_dir = os.path.join(dir, <span class="string">'homework2'</span>)</span><br><span class="line">        edit(homework_dir)</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">True</span>):</span><br><span class="line">            cname = generate(homework_dir)</span><br><span class="line">            <span class="keyword">if</span>(cname == <span class="string">''</span>):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            res = re.search(<span class="string">r'^1-([0-9]&#123;14&#125;)-([0-9]+)\(([0-9]+)\)'</span>, cname)</span><br><span class="line">            <span class="keyword">if</span>(res):</span><br><span class="line">                date = res.group(<span class="number">1</span>)</span><br><span class="line">                xmuid = res.group(<span class="number">2</span>)</span><br><span class="line">                question = res.group(<span class="number">3</span>)</span><br><span class="line">            cname = os.path.join(homework_dir, cname)</span><br><span class="line">            status = <span class="string">'0'</span></span><br><span class="line">            <span class="keyword">if</span> build(cname, <span class="string">'raw.o'</span>):</span><br><span class="line">                <span class="keyword">if</span>(test(<span class="string">'raw.o'</span>, question)):</span><br><span class="line">                    status = <span class="string">'1'</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    status = <span class="string">'3'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                status = <span class="string">'2'</span></span><br><span class="line">            write(&#123;<span class="string">'date'</span>: date[:<span class="number">8</span>], <span class="string">'time'</span>: date[<span class="number">8</span>:<span class="number">10</span>] + <span class="string">':'</span> + date[<span class="number">10</span>:<span class="number">12</span>] + <span class="string">':'</span> + date[<span class="number">12</span>:<span class="number">14</span>],</span><br><span class="line">                   <span class="string">'xmuid'</span>: xmuid, <span class="string">'question'</span>: question, <span class="string">'status'</span>: status&#125;)</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
          <category> xmu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> c </tag>
            
            <tag> oj </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 book list</title>
      <link href="/blog/2020/01/01/2020-book-list/"/>
      <url>/blog/2020/01/01/2020-book-list/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面">写在前面</h3><a id="more"></a><h3 id="三月">三月</h3><ul><li><a href="https://book.douban.com/subject/3533221/" target="_blank" rel="noopener">《非暴力沟通》</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> book </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx多域名跨域</title>
      <link href="/blog/2019/12/21/nginx-multiple-domains/"/>
      <url>/blog/2019/12/21/nginx-multiple-domains/</url>
      
        <content type="html"><![CDATA[<p>因为需要可能会允许服务器跨域交互数据，所以要设置允许多域名跨域。</p><a id="more"></a><h2 id="通用方法">通用方法</h2><p>打开 nginx.conf，在 http 里加入如下语句：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Origin *;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Headers X-Requested-With;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Methods GET,POST,OPTIONS;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>即可。只是这样的方式安全性很差，但像下面的设置方式不被浏览器允许：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Origin domain1;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Origin domain2;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Headers X-Requested-With;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Methods GET,POST,OPTIONS;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>浏览器只允许一个 <code>Access-Control-Allow-Origin</code> 字段。</p><h2 id="解决方法">解决方法</h2><p>将 <code>add_header Access-Control-Allow-Origin</code> 语句放置在如下位置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Headers X-Requested-With;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Methods GET,POST,OPTIONS;</span><br><span class="line">    ...</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ \.php($|/)</span> &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="attribute">if</span> (<span class="variable">$http_origin</span> <span class="regexp">~* "^domain1$"</span> ) &#123;</span><br><span class="line">                <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="variable">$http_origin</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="attribute">if</span> (<span class="variable">$http_origin</span> <span class="regexp">~* "^domain2$"</span> ) &#123;</span><br><span class="line">                <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="variable">$http_origin</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完。</p><h2 id="参考文档">参考文档</h2><ul><li><a href="https://serverfault.com/questions/350330/nginx-add-header-adding-multiple-headers" target="_blank" rel="noopener">NGINX add_header, adding multiple headers</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> multiple domains </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言编程注意事项</title>
      <link href="/blog/2019/12/11/c-tips/"/>
      <url>/blog/2019/12/11/c-tips/</url>
      
        <content type="html"><![CDATA[<p>最近解答了好多疑问，对大家的期末考试十分堪忧啊</p><center><p><img src="//onns.xyz/blog/image/1_180417102937_1.jpg" alt></p></center><p>答应我，下面这些错误不要再犯了好吗。</p><a id="more"></a><h2 id="一些小的知识点">一些小的知识点</h2><ul><li>数组定义时必须指定固定常数的长度，不能使用变量。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 错误示例</span></span><br><span class="line"><span class="keyword">int</span> n=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确示例</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br></pre></td></tr></table></figure></li></ul><h2 id="变量在使用前，一定要初始化">变量在使用前，一定要初始化</h2><p><strong>变量在使用前，一定要初始化！</strong><br><strong>变量在使用前，一定要初始化！</strong><br><strong>变量在使用前，一定要初始化！</strong></p><p>举个 🌰：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">min = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (min &gt; a[i][j])</span><br><span class="line">    &#123;</span><br><span class="line">      min = a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是一个很简单的求 <code>a[i][*]</code> 中最小值的方法，但是 <code>min</code> 在一轮循环后 <code>未被初始化为0</code>，这样就会导致后面的所有 <code>min</code> 错误，正确的写法如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">  min = <span class="number">10000</span>;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (min &gt; a[i][j])</span><br><span class="line">    &#123;</span><br><span class="line">      min = a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一个很容易被人忽视的点，再举个例子，我想得到数组最小的值及其所在的位置：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> min,index;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">  min = a[i][<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (min &gt; a[i][j])</span><br><span class="line">    &#123;</span><br><span class="line">      min = a[i][j];</span><br><span class="line">      index = j + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种错误很隐蔽，因为只有当碰巧  <code>a[i][0]</code> 最小的时候才会出错，因为 <code>index</code> 没被初始化为 <code>0</code>。</p><p>这种同时带了多个值的情况，所有的值都要初始化，很容易漏掉，需要注意。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> min,index;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">  min = a[i][<span class="number">0</span>];</span><br><span class="line">  <span class="comment">//同时对index进行赋值</span></span><br><span class="line">  index = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (min &gt; a[i][j])</span><br><span class="line">    &#123;</span><br><span class="line">      min = a[i][j];</span><br><span class="line">      index = j + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="书写格式要规范">书写格式要规范</h2><h3 id="合理使用tab缩进">合理使用tab缩进</h3><p>虽然C语言是写给机器的语言，不论你写的多乱机器都能识别，但当你程序出现错误要查错的时候，良好的缩进习惯可以帮你快速地阅读代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;<span class="keyword">float</span> avr;</span><br><span class="line">avr=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">sum=sum+a[i][j]; </span><br><span class="line">avr=sum/<span class="number">5</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f "</span>,avr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">float</span> avr;</span><br><span class="line">  avr = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    sum = sum + a[i][j];</span><br><span class="line">  avr = sum / <span class="number">5</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%.2f "</span>, avr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="合理使用花括号">合理使用花括号{}</h3><p>在C语言里 <code>for</code> <code>while</code> 等循环可以接单个语句达到循环的作用，如下段代码所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">  sum = sum + a[i][j];</span><br></pre></td></tr></table></figure><p>假如我们需要在循环里做些别的事情，比如我突然要记录 <code>i</code> 的值，惯性思维的改法如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">  sum = sum + a[i][j];</span><br><span class="line">  index = i;</span><br></pre></td></tr></table></figure><p>乍一看没有任何问题，但实际上这个 <code>i</code> 的值固定为 <code>5</code>。<br>所以一定要合理使用 <code>{}</code>，不要因为这种错误平白浪费时间。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">  sum = sum + a[i][j];</span><br><span class="line">  index = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> xmu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C程序设计基础-第二次作业</title>
      <link href="/blog/2019/12/05/c-homework2/"/>
      <url>/blog/2019/12/05/c-homework2/</url>
      
        <content type="html"><![CDATA[<h2 id="作业要求">作业要求</h2><ul><li>文件命名格式:     <code>学号(题目).cpp</code></li><li>文件命名样例:     <code>23020181154229(7).cpp</code></li><li>文件上传地址:     <a href="https://inbox.weiyun.com/5usbRaL" target="_blank" rel="noopener">https://inbox.weiyun.com/5usbRaL</a></li><li>作业结果查看:     <a href="http://onns.xyz/s/ctest/">http://onns.xyz/s/ctest/</a></li><li>作业截止日期:     <code>2019-12-17 23:59:59</code></li></ul><h2 id="注意事项">注意事项</h2><ol><li>可以重复提交。</li><li>注意文件命名里的括号是英文的括号不是中文的。</li><li>题号按照文档中的题号<strong>7-12</strong>。</li><li>文件提交.c或.cpp文件，不要压缩，六道题分别发送。</li><li><strong>测试结果页面</strong>黄色代表未通过所有测试，红色代表编译未通过，绿色代表通过。</li><li>按照文档的要求输入输出，不要自己加提示语句，不然会按照错误算的。</li><li>测试结果已经加了时间，如果发现自己上传了上面还没显示，表面文件命名错误了，仔细核对一下命名格式。</li><li><strong>测试结果页面</strong>学号下的输入框可以输入自己的学号筛选，方便查看所有题目的通过情况。</li><li>判断日期非法不用考虑闰年，只需考虑1月天数不能大于31天，2月不能大于29天…月份不能大于12这种。</li><li>建议大家写完一道题之后就上传，这样就知道如何通过测试系统的测试，因为要按照文档的要求输入输出。</li><li>大家交完之后最后检查一下自己是不是12道都提交正确了，比如那种学号少打一位的同学，到时候可能要算你没提交了。</li></ol><a id="more"></a><h2 id="作业内容">作业内容</h2><h3 id="题目7">题目7</h3><p>输入一维整型数组a(长度为10)的各元素值，求数组中最小元素的值及其在数组中的位置。</p><ul><li>每行输入、输出的数字间用空格（“ ”）分隔。</li><li>如果最小的元素有多个，输出第一次出现的位置。</li></ul><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8 9 7 1 6 5 3 4 2 10</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 4</span><br></pre></td></tr></table></figure><h3 id="题目8">题目8</h3><p>输入一维实型数组a(长度为10)的各元素值，求数组中所有元素之和（保留两位小数）及其平均值（保留两位小数）。</p><ul><li>每行输入、输出的数字间用空格（“ ”）分隔。</li></ul><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5 6 7 8 9 10</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">55.00 5.50</span><br></pre></td></tr></table></figure><h3 id="题目9">题目9</h3><p>编写程序读取一个5X5的整数数组，然后显示出每行的和与每列的和。进一步地，假设输入每个学生5门测验的成绩，有5个学生。然后计算每个学生的总分和平均分，以及每门测验的平均分、最高分和最低分。</p><ul><li>输入分为五行五列，每行代表一门成绩，每列代表一名学生。</li><li>输出分为五行五列，第一行为每个学生的总分，第二行为每个学生的平均分（保留两位小数），第三行为每门测验的平均分（保留两位小数），第四行为每门测验的最高分，第五行为每门测验的最低分。</li><li>每行输入、输出的数字间用空格（“ ”）分隔。</li><li><del>每行和每行之间不要有多余的空格。（考试的时候为人工判卷，不会过分苛求这些细节，但是希望大家平时可以注意到这些细节，毕竟类比下来，算数字哪怕四舍五入差了一点点也会是错误的。）</del> 不要求大家这一点了，可以忽略。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一个错误的样例</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, b[i]);</span><br><span class="line"></span><br><span class="line">会输出:</span><br><span class="line"><span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span>[空格]</span><br><span class="line">结尾多输出一个空格</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个正确的样例</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, b[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, b[i]);</span><br><span class="line"></span><br><span class="line">会输出:</span><br><span class="line"><span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span></span><br><span class="line">理想结果</span><br></pre></td></tr></table></figure><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5</span><br><span class="line">2 3 4 5 1</span><br><span class="line">3 4 5 1 2</span><br><span class="line">4 5 1 2 3</span><br><span class="line">5 1 2 3 4</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">15 15 15 15 15</span><br><span class="line">3.00 3.00 3.00 3.00 3.00</span><br><span class="line">3.00 3.00 3.00 3.00 3.00</span><br><span class="line">5 5 5 5 5</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></table></figure><h3 id="题目10">题目10</h3><p>输入一个由大写字母组成的字符串（长度小于100），求字符串中包含了几个不同的字母。</p><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AABBBCD</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="题目11">题目11</h3><p>输入一字符串（长度小于100）和一个字符，统计出字符在字符串中出现的次数。</p><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AABBBCD</span><br><span class="line">A</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="题目12">题目12</h3><p>不要调用strcpy函数，把字符数组str2中的字符串（长度小于100）复制到字符数组str1中。</p><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABCDEFG</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABCDEFG</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> xmu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言中float的精度问题</title>
      <link href="/blog/2019/11/06/float-in-c/"/>
      <url>/blog/2019/11/06/float-in-c/</url>
      
        <content type="html"><![CDATA[<h2 id="问题">问题</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> a = <span class="number">123456789</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%f"</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码的输出结果为：<code>123456792.000000</code>，为什么？</p><a id="more"></a><h2 id="float存储方法">float存储方法</h2><p>详细内容可以参考<a href="https://blog.csdn.net/qq_35057840/article/details/52430651" target="_blank" rel="noopener">这篇博客</a>，float型的数据占用32位的存储空间，其中：</p><ul><li>1位符号位</li><li>8位指数位</li><li>23位尾数位</li></ul><p>float型数据的存储方法为科学计数法，即 <code>110</code> 可以写成 <code>+ 1.1 * 10^2</code> 的形式，即：</p><ul><li><code>+</code> 为符号位 <code>正</code></li><li><code>2</code> 为指数位 <code>2次幂</code></li><li><code>1</code> 为尾数位 <code>.1</code> 而不是 <code>1.1</code></li></ul><p>这里注意一下，因为科学计数法是 <code>一个大于1小于等于9</code> 的小数(相对于十进制)，二进制的科学计数法的小数的整数部分一定是 <code>1</code>，故省略整数部分，故实际上尾数的有效位数是 <code>24</code> 位。</p><h2 id="数字分析">数字分析</h2><p>使用<a href="https://tool.lu/hexconvert/" target="_blank" rel="noopener">进制转换工具</a>得到 <code>123456789</code> 的二进制为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111010110111100110100010101</span><br></pre></td></tr></table></figure><p>一共 <code>27</code> 位，前面说过float的有效位数为 <code>23+1</code> 位，第 <code>24</code> 位要根据 <code>就近原则</code><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> 确定是 <code>0</code> 还是 <code>1</code>，其余部位补 <code>0</code>，即：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111010110111100110100011000</span><br></pre></td></tr></table></figure><p>得到结果为 <code>123456792</code>。</p><h2 id="程序验证">程序验证</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">num是要展示的float数,bin是保存所有二进制位的数组</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getFloatBin</span><span class="params">(<span class="keyword">float</span> num, <span class="keyword">char</span> bin[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">1</span>;              <span class="comment">//用来按位与操作</span></span><br><span class="line">    <span class="keyword">int</span> *f = (<span class="keyword">int</span> *)(&amp;num); <span class="comment">//将float的解释成int，即float的地址转成int*</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//从最高位开始按位与，如果为1，则bin[i]=1，如果为0，则bin[i]=0</span></span><br><span class="line">        <span class="comment">//这里没有将bin存成字符，而是数字1 0</span></span><br><span class="line">        bin[i] = (*f) &amp; (t &lt;&lt; <span class="number">31</span> - i) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> test = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">32</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"测试float数为:%f\n"</span>, test);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"二进制表示为:"</span>);</span><br><span class="line">    getFloatBin(test, c);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, c[i]);</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">", "</span>);</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">8</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">", "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码摘自<a href="https://blog.csdn.net/wayway0554/article/details/84111889" target="_blank" rel="noopener">在C语言中将float(浮点数)的二进制表示打印出来</a>，结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">测试<span class="built_in">float</span>数为:123456792.000000</span><br><span class="line">二进制表示为:0, 10011001, 11010110111100110100011</span><br></pre></td></tr></table></figure><p>与理论结果比对一致。</p><h2 id="结语">结语</h2><p>感谢舍友和老辣鸡们的群策群力！最终初步解决了问题～</p><h2 id="参考文档">参考文档</h2><ul><li><a href="https://blog.csdn.net/leho666/article/details/89204964" target="_blank" rel="noopener">C语言中，float在内存中的储存方式</a></li><li><a href="https://blog.csdn.net/qq_35057840/article/details/52430651" target="_blank" rel="noopener">C语言浮点数存储方式</a></li><li><a href="https://blog.csdn.net/wayway0554/article/details/84111889" target="_blank" rel="noopener">在C语言中将float(浮点数)的二进制表示打印出来</a><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">”就近原则“无法找到相关文档说明，只能根据测试数据进行推测，准确性有待考究。</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> c </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云动态修改域名解析</title>
      <link href="/blog/2019/10/23/aliyun-ddns/"/>
      <url>/blog/2019/10/23/aliyun-ddns/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>宿舍放着一台换下来的旧手机 Mi5，平时除了双开好像就没用过，抱着闲置物品再利用的原则，在上面装了个 centos 系统，但由于宿舍的宽带是动态 ip 的，如果每次都要手动重新解析域名，那也太麻烦了。于是想设定定时任务自动解析，折腾一番，记录之。</p><a id="more"></a><h2 id="安装环境">安装环境</h2><h3 id="pip">pip</h3><p>因为是最小化安装所以 pip 都没装…<br>直接<a href="https://pip.pypa.io/en/stable/installing/" target="_blank" rel="noopener">官网</a>安装即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure><h3 id="gcc">gcc</h3><p>是的 gcc 也没有，要自己装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc -y</span><br></pre></td></tr></table></figure><h3 id="aliyun-sdk">aliyun-sdk</h3><p>阿里云已经把框架写好了，我们直接调用就行，省去了自己造轮子的麻烦。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install aliyun-python-sdk-alidns</span><br></pre></td></tr></table></figure><h2 id="代码">代码</h2><p>阿里云已经把框架写好了，我们直接调用就行，省去了自己造轮子的麻烦。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> aliyunsdkcore <span class="keyword">import</span> client</span><br><span class="line"><span class="keyword">from</span> aliyunsdkalidns.request.v20150109 <span class="keyword">import</span> DescribeDomainRecordsRequest</span><br><span class="line"><span class="keyword">from</span> aliyunsdkalidns.request.v20150109 <span class="keyword">import</span> DescribeDomainRecordInfoRequest</span><br><span class="line"><span class="keyword">from</span> aliyunsdkalidns.request.v20150109 <span class="keyword">import</span> UpdateDomainRecordRequest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 阿里云 Access Key ID</span></span><br><span class="line">access_key_id = <span class="string">""</span></span><br><span class="line"><span class="comment"># 阿里云 Access Key Secret</span></span><br><span class="line">access_key_secret = <span class="string">""</span></span><br><span class="line"><span class="comment"># 阿里云 一级域名</span></span><br><span class="line">rc_domain = <span class="string">'onns.xyz'</span></span><br><span class="line"><span class="comment"># 阿里云 二级域名前缀</span></span><br><span class="line">rc_subdomain = <span class="string">'xm'</span></span><br><span class="line"><span class="comment"># 返回内容格式</span></span><br><span class="line">rc_format = <span class="string">'json'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_records</span><span class="params">(dns_domain)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取域名的解析信息</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    clt = client.AcsClient(access_key_id, access_key_secret, <span class="string">'cn-hangzhou'</span>)</span><br><span class="line">    request = DescribeDomainRecordsRequest.DescribeDomainRecordsRequest()</span><br><span class="line">    request.set_DomainName(dns_domain)</span><br><span class="line">    request.set_accept_format(rc_format)</span><br><span class="line">    result = clt.do_action(request)</span><br><span class="line">    result = json.JSONDecoder().decode(result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_old_ip</span><span class="params">(record_id)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    根据域名解析记录ID查询上一次的IP记录</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    clt = client.AcsClient(access_key_id, access_key_secret, <span class="string">'cn-hangzhou'</span>)</span><br><span class="line">    request = DescribeDomainRecordInfoRequest.DescribeDomainRecordInfoRequest()</span><br><span class="line">    request.set_RecordId(record_id)</span><br><span class="line">    request.set_accept_format(rc_format)</span><br><span class="line">    result = clt.do_action(request)</span><br><span class="line">    result = json.JSONDecoder().decode(result)</span><br><span class="line">    result = result[<span class="string">'Value'</span>]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_dns</span><span class="params">(dns_rr, dns_type, dns_value, dns_record_id, dns_ttl, dns_format)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    更新阿里云域名解析记录信息</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    clt = client.AcsClient(access_key_id, access_key_secret, <span class="string">'cn-hangzhou'</span>)</span><br><span class="line">    request = UpdateDomainRecordRequest.UpdateDomainRecordRequest()</span><br><span class="line">    request.set_RR(dns_rr)</span><br><span class="line">    request.set_Type(dns_type)</span><br><span class="line">    request.set_Value(dns_value)</span><br><span class="line">    request.set_RecordId(dns_record_id)</span><br><span class="line">    request.set_TTL(dns_ttl)</span><br><span class="line">    request.set_accept_format(dns_format)</span><br><span class="line">    result = clt.do_action(request)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_my_publick_ip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取当前主机的外网IP</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        u = urllib2.urlopen(<span class="string">'http://members.3322.org/dyndns/getip'</span>)</span><br><span class="line">        <span class="keyword">return</span> u.read().strip(<span class="string">'\n'</span>)</span><br><span class="line">    <span class="keyword">except</span> HTTPError <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'getMyIp:'</span>, e)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_file</span><span class="params">(new_ip)</span>:</span></span><br><span class="line">    time_now = datetime.now().strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">    write_log = open(<span class="string">'aliyun_ddns.txt'</span>, <span class="string">'a'</span>)</span><br><span class="line">    write_log.write(time_now + <span class="string">' '</span> + str(new_ip) + <span class="string">'\n'</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 之前的解析记录</span></span><br><span class="line">    old_ip = <span class="string">""</span></span><br><span class="line">    record_id = <span class="string">""</span></span><br><span class="line">    dns_records = check_records(rc_domain)</span><br><span class="line">    <span class="keyword">for</span> record <span class="keyword">in</span> dns_records[<span class="string">"DomainRecords"</span>][<span class="string">"Record"</span>]:</span><br><span class="line">        <span class="keyword">if</span> record[<span class="string">"Type"</span>] == <span class="string">'A'</span> <span class="keyword">and</span> record[<span class="string">"RR"</span>] == rc_subdomain:</span><br><span class="line">            record_id = record[<span class="string">"RecordId"</span>]</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"%s.%s recordID is %s"</span> % (rc_subdomain, rc_domain, record_id)</span><br><span class="line">            <span class="keyword">if</span> record_id != <span class="string">""</span>:</span><br><span class="line">                old_ip = get_old_ip(record_id)</span><br><span class="line"></span><br><span class="line">    old_ip = get_old_ip(record_id)</span><br><span class="line">    <span class="comment"># 获取主机当前的IP</span></span><br><span class="line">    now_ip = get_my_publick_ip()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"now host ip is %s, dns ip is %s"</span> % (now_ip, old_ip)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> old_ip == now_ip:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"The specified value of parameter Value is the same as old"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rc_rr = rc_subdomain        <span class="comment"># 解析记录</span></span><br><span class="line">        rc_type = <span class="string">'a'</span>               <span class="comment"># 记录类型, DDNS填写A记录</span></span><br><span class="line">        rc_value = now_ip           <span class="comment"># 新的解析记录值</span></span><br><span class="line">        rc_record_id = record_id    <span class="comment"># 记录ID</span></span><br><span class="line">        rc_ttl = <span class="string">'600'</span>              <span class="comment"># 解析记录有效生存时间TTL,单位:秒</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> update_dns(rc_rr, rc_type, rc_value, rc_record_id, rc_ttl, rc_format)</span><br><span class="line"></span><br><span class="line">        write_to_file(now_ip)</span><br></pre></td></tr></table></figure><p>代码拷贝自：<a href="https://www.vincents.cn/2017/03/27/aliyun-ddns/" target="_blank" rel="noopener">阿里云 DNS 动态解析</a>，略作修改。<br>这里只需要改前几行（15-22 行）的值即可，阿里云的<code>accesskey</code>从<a href="https://usercenter.console.aliyun.com/#/manage/ak" target="_blank" rel="noopener">这里</a>获取。</p><h2 id="执行">执行</h2><p>可以手动先执行一下命令看下结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python ddns.py</span><br><span class="line"></span><br><span class="line">xm.onns.xyz recordID is XXXXXXXXXXXXXXX</span><br><span class="line">now host ip is XXXXXXXXXXXXXXX, dns ip is XXXXXXXXXXXXXXX</span><br><span class="line">&#123;<span class="string">"RecordId"</span>:<span class="string">"XXXXXXXXXXXXXXX"</span>,<span class="string">"RequestId"</span>:<span class="string">"XXXXXXXXXXXXXXX"</span>&#125;</span><br></pre></td></tr></table></figure><p>接着设置 crontab 定时任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加如下一条记录，为了避免错误，写绝对地址。</span></span><br><span class="line">*/10 * * * * /usr/bin/python /home/android/ddns.py /dev/null 1&gt;/dev/null</span><br></pre></td></tr></table></figure><p>很尴尬的是，不仅仅是最小化安装，连一些 service 的服务都没有写入，所以要手动打开…<code>crontab</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/sbin/crond -s</span><br></pre></td></tr></table></figure><p>然后就可以愉快的使（wan）用（shua）了。</p><h2 id="参考文档">参考文档</h2><ul><li><a href="https://www.vincents.cn/2017/03/27/aliyun-ddns/" target="_blank" rel="noopener">阿里云 DNS 动态解析</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ddns </tag>
            
            <tag> aliyun </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS下超好用的软件</title>
      <link href="/blog/2019/09/08/software-for-mac/"/>
      <url>/blog/2019/09/08/software-for-mac/</url>
      
        <content type="html"><![CDATA[<h2 id="日常">日常</h2><ul><li><a href="https://justgetflux.com/" target="_blank" rel="noopener">f.lux</a><br>一个自动调节屏幕显示的工具，可以根据日升日落时间调节护眼模式。</li></ul><h2 id="效率">效率</h2><ul><li>OmniGraffle</li></ul><h2 id="娱乐">娱乐</h2><ul><li>VLC</li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Teamviewer商用解决方案</title>
      <link href="/blog/2019/08/07/solution-for-teamviewer-commercial-use/"/>
      <url>/blog/2019/08/07/solution-for-teamviewer-commercial-use/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>测试了很多远程连接软件，发现还是teamviewer好用，但是莫名其妙被检测成商业用户，不能使用，记录解决方案。</p><a id="more"></a><h2 id="申诉">申诉</h2><p>Teamviewer官方提供了申诉渠道，通过 <a href="https://teamviewer.com/en/support/personal-use-verification/" target="_blank" rel="noopener">TeamViewer Personal Use Verification</a>，提供日志信息即可申诉，会通过邮件回复申诉结果，能不能恢复全凭运气。</p><p>成功例子：</p><blockquote><p>Dear User,</p><p>Thank you for your email and query regarding TeamViewer.</p><p>We have gone ahead and reset your device back to private use.</p><p>For the changes to take effect, please restart your TeamViewer application via “Connection -&gt; Exit TeamViewer”.</p><p>Please keep in mind:</p><ul><li>TeamViewer is only free for private, non-commercial use.</li><li>If the device is used in an office or commercial setting, you will be blocked again and will need to buy a license to continue.</li><li>The partners you connect with also need to be using either a private or a licensed version of the software.</li></ul></blockquote><p>失败例子：</p><blockquote><p>Dear TeamViewer User,</p><p>Thank you for your request regarding being unblocked from using the free version of TeamViewer. After reviewing the information provided to us, we were unable to confirm that the submitted ID is being used privately.</p><p>Requiring commercial users to purchase a license is also part of our effort to maintain the free version, and to therefore make help accessible to everyone. The free version is for people who are using it to help family and friends.</p></blockquote><p>上面两封都是我收到的邮件，╮(╯▽╰)╭</p><h2 id="Mac下解决方案">Mac下解决方案</h2><p>参考 <a href="https://www.590103.idv.tw/blog/%E8%A7%A3%E6%B1%BAmac%E7%89%88teamviewer%E5%80%8B%E4%BA%BA%E7%89%885%E5%88%86%E9%90%98%E6%96%B7%E7%B7%9A%E5%95%8F%E9%A1%8C#.XUqNcpMzZQK" target="_blank" rel="noopener">解決MAC版Teamviewer個人版5分鐘斷線問題</a>，下载运行即可，具体步骤如下：</p><ol><li>记住当前ID，关闭Teamviewer。</li><li>下载 <a href="https://gist.github.com/zhenhappy/3c808a198715978a38acf0ba44044ea6" target="_blank" rel="noopener">TeamViewer-14-id-changer-for-mac.py</a> 或 <a href="https://gist.github.com/zhovner/b1d72f3465c46e7b58a4ea42d625c3e8" target="_blank" rel="noopener">TeamViewer-id-changer.py</a>，第二个不适用于Teamviewer14，推荐第一个。</li><li>打开命令后，输入<code>sudo python TeamViewer-14-id-changer-for-mac.py</code>，点击回车。</li><li>重启电脑，发现ID改变，问题解决。</li></ol><h2 id="Windows下解决方案">Windows下解决方案</h2><p>参考 <a href="https://www.itread01.com/content/1546764964.html" target="_blank" rel="noopener">teamviewer被檢測為商業用途解決方法</a>。</p><h3 id="卸载">卸载</h3>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> teamviewer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sign recognition lab report</title>
      <link href="/blog/2019/01/11/sign-recognition-lab-report/"/>
      <url>/blog/2019/01/11/sign-recognition-lab-report/</url>
      
        <content type="html"><![CDATA[<h2 id="实验报告">实验报告</h2><a id="more"></a><div class="row">    <embed src="//onns.xyz/blog/files/sign-recognition-lab-report.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer vision </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019 movie list</title>
      <link href="/blog/2019/01/01/2019-movie-list/"/>
      <url>/blog/2019/01/01/2019-movie-list/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面">写在前面</h3><a id="more"></a><h3 id="一月">一月</h3>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>local feature lab report</title>
      <link href="/blog/2018/12/18/local-feature-lab-report/"/>
      <url>/blog/2018/12/18/local-feature-lab-report/</url>
      
        <content type="html"><![CDATA[<h2 id="问题分析">问题分析</h2><h3 id="问题描述">问题描述</h3><p>该项目的目标是完成一个找到在不同的视角下拍摄的同一物体或场景中的相似之处的算法。我们主要实现的是一个简易版的SIFT算法。主要需要完成的是以下三个方面的内容：</p><ul><li><p>实现一个Harris角点检测算法</p></li><li><p>实现一个类似SIFT算法的局部特征描述算法</p></li><li><p>实现一个基于<code>比率测试</code>或<code>最近邻距离比测试</code>的局部特征匹配算法</p></li></ul><h3 id="数据集分析">数据集分析</h3><p>以<code>NotreDame</code>数据为例，包含了两张同一物体的不同角度的图像，如<code>图1</code>所示。</p><center><p><img src="//onns.xyz/blog/image/921919841_a30df938f2_o.jpg" alt="数据图像"></p><p>图1 数据图像</p></center><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data</span><br><span class="line">├── NotreDame</span><br><span class="line">|   ├── 921919841_a30df938f2_o_to_4191453057_c86028ce1f_o.mat</span><br><span class="line">|   ├── 921919841_a30df938f2_o.jpg</span><br><span class="line">|   └── 4191453057_c86028ce1f_o.jpg</span><br><span class="line">├── ...</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="实验过程">实验过程</h2><h3 id="编程语言介绍">编程语言介绍</h3><p>本实验所选择的编程语言为<code>Matlab</code>, 编程软件为<code>Matlab 2018b</code>.</p><h3 id="Harris角点检测">Harris角点检测</h3><p>角点是一幅图像上最明显与重要的特征，角点检测的原理是利用角点在各个方向上的梯度值变化明显这一特性。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p><p>选取的描述窗宽度为<code>16像素</code>，首先对图像进行高斯滤波，这一步是为了消除某些噪点对于接下来进行的检测的影响。<br>接着求在xx、yy和xy方向的梯度并进行高斯滤波。<br>最后得到Harris角点的响应值R。计算公式如<code>公示1</code>所示:</p><p>$$<br>R = det(M) - \alpha*trace(M)<br>\tag{1}<br>$$</p><p>其中$\alpha$为系数值，通常取值范围为0.04 ~ 0.06之间.<br>最后将得到的再进行过滤，保留那些重要的兴趣点。</p><p>运行结果如<code>图2</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181218-1.jpg" alt="Harris角点检测结果"></p><p>图2 Harris角点检测结果</p></center><h3 id="局部特征描述">局部特征描述</h3><p>局部特征描述我们运用一种类似SIFT算法的描述方法，我们设置的描述窗口的大小为<code>16*16</code>，接着将窗口划分成16个<code>4*4</code>的小窗口，在这些小窗口中找寻每个像素的主要梯度，然后将其归到0-360度按每45度一划分的8个方向之中。<br>然后对这些特征向量进行归一化处理，以消除光照等变化的影响。</p><h3 id="局部特征匹配">局部特征匹配</h3><p>在得到特征向量之后，只需要通过计算向量的距离，就能够对特征点进行匹配。<br>具体的方法是算一个向量和来自另一个图的所有特征点的特征向量的欧式距离，然后取最近的一个特征向量进行匹配。<br>匹配结果如<code>图3</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181218-2.jpg" alt="局部特征匹配结果"></p><p>图3 局部特征匹配结果</p></center><h2 id="实验结果">实验结果</h2><p>成功实现了简单的图片相似点的寻找与匹配。在<code>Notre Dam</code>图像上获得了87%的准确率。</p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;"><a href="https://blog.csdn.net/jia20003/article/details/16908661" target="_blank" rel="noopener">图像处理之角点检测算法</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer vision </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Computational Intelligence Homework No.3</title>
      <link href="/blog/2018/11/23/2018-computational-intelligence-homework-no.3/"/>
      <url>/blog/2018/11/23/2018-computational-intelligence-homework-no.3/</url>
      
        <content type="html"><![CDATA[<h1>用 GA 算法求解旅行商问题</h1><h2 id="问题描述">问题描述</h2><p>旅行商问题(Travelling Salesman Problem, 简记 TSP, 亦称货郎担问题): 设有 34 个城市及其对应的经纬度坐标, 则问题是要找出遍访每个城市恰好一次的一条回路并使其路径长度为最短.</p><a id="more"></a><h2 id="算法设计">算法设计</h2><p>遗传算法是模拟达尔文生物进化论的自然选择和遗传学机理的生物进化过程的计算模型，是一种通过模拟自然进化过程搜索最优解的方法。遗传算法是从代表问题可能潜在的解集的一个种群开始的，而一个种群则由经过基因编码的一定数目的个体组成。每个个体实际上是染色体带有特征的实体。染色体作为遗传物质的主要载体，即多个基因的集合，其内部表现(即基因型)是某种基因组合，它决定了个体的形状的外部表现，如黑头发的特征是由染色体中控制这一特征的某种基因组合决定的。因此，在一开始需要实现从表现型到基因型的映射即编码工作。由于仿照基因编码的工作很复杂，我们往往进行简化，如二进制编码，初代种群产生之后，按照适者生存和优胜劣汰的原理，逐代演化产生出越来越好的近似解，在每一代，根据问题域中个体的适应度大小选择个体，并借助于自然遗传学的遗传算子进行组合交叉和变异，产生出代表新的解集的种群。这个过程将导致种群像自然进化一样的后生代种群比前代更加适应于环境，末代种群中的最优个体经过解码，可以作为问题近似最优解。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p><h3 id="个体适应性">个体适应性</h3><p>遗传算法中的适应性在旅行商问题中对应的是走过所有的点的距离之和，距离越小则所代表的适应性越强。</p><h3 id="DNA-编码">DNA 编码</h3><p>编码是应用遗传算法时要解决的首要问题，也是设计遗传算法时的一个关键步骤。编码方法影响到交叉算子、变异算子等遗传算子的运算方法，大很大程度上决定了遗传进化的效率。在旅行商问题中的 DNA 编码方式是<code>二进制编码</code>方式，具体是将坐标分别放入两条 DNA 中，形成<code>x</code>和<code>y</code>两条 DNA，如下所示:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x:</span><br><span class="line">[<span class="number">121.47</span> <span class="number">115.85</span> <span class="number">117.25</span> <span class="number">108.93</span> <span class="number">106.55</span> <span class="number">112.55</span> <span class="number">114.52</span> <span class="number">121.52</span> <span class="number">108.37</span>  <span class="number">91.13</span></span><br><span class="line">  <span class="number">87.62</span> <span class="number">106.63</span> <span class="number">111.73</span> <span class="number">101.78</span> <span class="number">119.3</span>  <span class="number">114.3</span>  <span class="number">125.32</span> <span class="number">116.4</span>  <span class="number">117.2</span>  <span class="number">116.98</span></span><br><span class="line"> <span class="number">118.78</span> <span class="number">113.62</span> <span class="number">114.17</span> <span class="number">113.27</span> <span class="number">108.37</span> <span class="number">123.43</span> <span class="number">120.15</span> <span class="number">113.55</span> <span class="number">102.72</span> <span class="number">104.07</span></span><br><span class="line"> <span class="number">112.93</span> <span class="number">103.82</span> <span class="number">106.28</span> <span class="number">126.53</span>]</span><br><span class="line">y:</span><br><span class="line">[<span class="number">31.23</span> <span class="number">28.68</span> <span class="number">31.83</span> <span class="number">34.27</span> <span class="number">29.57</span> <span class="number">37.87</span> <span class="number">38.05</span> <span class="number">25.03</span> <span class="number">22.82</span> <span class="number">29.65</span> <span class="number">43.82</span> <span class="number">26.65</span></span><br><span class="line"> <span class="number">40.83</span> <span class="number">36.62</span> <span class="number">26.08</span> <span class="number">30.6</span>  <span class="number">43.9</span>  <span class="number">39.9</span>  <span class="number">39.12</span> <span class="number">36.67</span> <span class="number">32.07</span> <span class="number">34.75</span> <span class="number">22.28</span> <span class="number">23.13</span></span><br><span class="line"> <span class="number">22.82</span> <span class="number">41.8</span>  <span class="number">30.28</span> <span class="number">22.19</span> <span class="number">25.05</span> <span class="number">30.67</span> <span class="number">28.23</span> <span class="number">36.07</span> <span class="number">38.47</span> <span class="number">45.8</span>]</span><br></pre></td></tr></table></figure><h3 id="适者生存-selection">适者生存 (selection)</h3><p>通过个体适应性来挑选，适应性越高(即距离越小)就越可能被选到。</p><h3 id="交叉配对-crossover">交叉配对 (crossover)</h3><p>在旅行商问题中，交叉配对不能通过简单的从父母的 DNA 中取一半来完成，这样会产生重复点。<br>替代办法是将父代的 DNA 中选取的点得到后按顺序放置到新 DNA 的前半部，然后再从母代的 DNA 中选取剩下的点，放到新 DNA 的后半部。</p><h3 id="变异-mutation">变异 (mutation)</h3><p>在旅行商问题中，变异只需要随机交换两个点的位置即可。</p><h2 id="程序流程">程序流程</h2><p>程序流程如<code>图1</code>所示</p><center><div id="flowchart-0" class="flow-chart"></div><p>图 1 程序流程图</p></center><h2 id="核心伪代码">核心伪代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 迭代N_GENERATIONS次</span></span><br><span class="line"><span class="keyword">for</span> generation <span class="keyword">in</span> range(N_GENERATIONS):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将城市坐标转换为DNA</span></span><br><span class="line">    lx, ly = translateDNA(pop, CITIES)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算个体适应性</span></span><br><span class="line">    fitness, total_distance = get_fitness(lx, ly)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 适者生存</span></span><br><span class="line">    pop = select(fitness)</span><br><span class="line">    pop_copy = pop.copy()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对于种群中的每一个父母代</span></span><br><span class="line">    <span class="keyword">for</span> parent <span class="keyword">in</span> pop:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 杂交</span></span><br><span class="line">        child = crossover(parent, pop_copy)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 变异</span></span><br><span class="line">        child = mutate(child)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 加入到新种群中</span></span><br><span class="line">        parent[:] = child</span><br></pre></td></tr></table></figure><h2 id="代码运行及测试">代码运行及测试</h2><p>选取的参数如<code>表1</code>所示.</p><center>参数表</center><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">参数值</th></tr></thead><tbody><tr><td style="text-align:center">城市数量</td><td style="text-align:center">34</td></tr><tr><td style="text-align:center">城市坐标</td><td style="text-align:center"><a href="#city_list">附录:城市坐标</a></td></tr><tr><td style="text-align:center">交叉概率</td><td style="text-align:center">0.1</td></tr><tr><td style="text-align:center">变异概率</td><td style="text-align:center">0.02</td></tr><tr><td style="text-align:center">种群规模</td><td style="text-align:center">1000</td></tr><tr><td style="text-align:center">迭代次数</td><td style="text-align:center">500</td></tr></tbody></table><p>代码运行结果如<code>图2</code>所示.</p><center><p><img src="//onns.xyz/blog/image/20181124-1.png" alt="运行结果图"></p><p>图 2 运行结果图</p></center><h2 id="结论">结论</h2><p>34 个城市的最终结果为<code>16434.4730</code>公里。<br>总得来说遗传算法解决旅行商问题是由连续问题归纳到组合问题的求解，使得精度受到很大的影响，最终结果有时也容易陷入到局部早熟而导致结果不理想，不过遗传算法还是具有较强的全局搜索能力，在计算精度要求较高时，对计算时间的花费较少。</p><h2 id="参考链接">参考链接</h2><ul><li><a href="https://morvanzhou.github.io/tutorials/machine-learning/evolutionary-algorithm/2-01-genetic-algorithm/" target="_blank" rel="noopener">遗传算法</a></li></ul><p style="page-break-before: always"></p><h2 id="附录">附录</h2><h3 id="城市坐标">城市坐标</h3><center id="city_list">城市坐标表</center><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">省份</th><th style="text-align:center">经度</th><th style="text-align:center">纬度</th></tr></thead><tbody><tr><td style="text-align:center">01</td><td style="text-align:center">北京</td><td style="text-align:center">116.4</td><td style="text-align:center">39.9</td></tr><tr><td style="text-align:center">02</td><td style="text-align:center">天津</td><td style="text-align:center">117.2</td><td style="text-align:center">39.12</td></tr><tr><td style="text-align:center">03</td><td style="text-align:center">河北</td><td style="text-align:center">114.52</td><td style="text-align:center">38.05</td></tr><tr><td style="text-align:center">04</td><td style="text-align:center">山西</td><td style="text-align:center">112.55</td><td style="text-align:center">37.87</td></tr><tr><td style="text-align:center">05</td><td style="text-align:center">内蒙古</td><td style="text-align:center">111.73</td><td style="text-align:center">40.83</td></tr><tr><td style="text-align:center">06</td><td style="text-align:center">辽宁</td><td style="text-align:center">123.43</td><td style="text-align:center">41.8</td></tr><tr><td style="text-align:center">07</td><td style="text-align:center">吉林</td><td style="text-align:center">125.32</td><td style="text-align:center">43.9</td></tr><tr><td style="text-align:center">08</td><td style="text-align:center">黑龙江</td><td style="text-align:center">126.53</td><td style="text-align:center">45.8</td></tr><tr><td style="text-align:center">09</td><td style="text-align:center">上海</td><td style="text-align:center">121.47</td><td style="text-align:center">31.23</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">江苏</td><td style="text-align:center">118.78</td><td style="text-align:center">32.07</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">浙江</td><td style="text-align:center">120.15</td><td style="text-align:center">30.28</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">安徽</td><td style="text-align:center">117.25</td><td style="text-align:center">31.83</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">福建</td><td style="text-align:center">119.3</td><td style="text-align:center">26.08</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">江西</td><td style="text-align:center">115.85</td><td style="text-align:center">28.68</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">山东</td><td style="text-align:center">116.98</td><td style="text-align:center">36.67</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">河南</td><td style="text-align:center">113.62</td><td style="text-align:center">34.75</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">湖北</td><td style="text-align:center">114.3</td><td style="text-align:center">30.6</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">湖南</td><td style="text-align:center">112.93</td><td style="text-align:center">28.23</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">广东</td><td style="text-align:center">113.27</td><td style="text-align:center">23.13</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">广西</td><td style="text-align:center">108.37</td><td style="text-align:center">22.82</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">海南</td><td style="text-align:center">108.37</td><td style="text-align:center">22.82</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">重庆</td><td style="text-align:center">106.55</td><td style="text-align:center">29.57</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">四川</td><td style="text-align:center">104.07</td><td style="text-align:center">30.67</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">贵州</td><td style="text-align:center">106.63</td><td style="text-align:center">26.65</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">云南</td><td style="text-align:center">102.72</td><td style="text-align:center">25.05</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">西藏</td><td style="text-align:center">91.13</td><td style="text-align:center">29.65</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">陕西</td><td style="text-align:center">108.93</td><td style="text-align:center">34.27</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">甘肃</td><td style="text-align:center">103.82</td><td style="text-align:center">36.07</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">青海</td><td style="text-align:center">101.78</td><td style="text-align:center">36.62</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">宁夏</td><td style="text-align:center">106.28</td><td style="text-align:center">38.47</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">新疆</td><td style="text-align:center">87.62</td><td style="text-align:center">43.82</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center">台北</td><td style="text-align:center">121.52</td><td style="text-align:center">25.03</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center">香港</td><td style="text-align:center">114.17</td><td style="text-align:center">22.28</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center">澳门</td><td style="text-align:center">113.55</td><td style="text-align:center">22.19</td></tr></tbody></table><h3 id="遗传算法代码">遗传算法代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------model import----------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> radians, cos, sin, asin, sqrt</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end model import----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------global variables----------</span></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">@param:</span></span><br><span class="line"><span class="string">    CITIES          the longitude and the latitude of cities</span></span><br><span class="line"><span class="string">    N_CITIES        the number of cities</span></span><br><span class="line"><span class="string">    CROSS_RATE      the rate of cross</span></span><br><span class="line"><span class="string">    MUTATE_RATE     the rate of mutate</span></span><br><span class="line"><span class="string">    POP_SIZE        the size of population</span></span><br><span class="line"><span class="string">    N_GENERATIONS   the number of generations</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">CITIES = np.array([[<span class="number">116.4</span>, <span class="number">39.9</span>],</span><br><span class="line">                   [<span class="number">117.2</span>, <span class="number">39.12</span>],</span><br><span class="line">                   [<span class="number">114.52</span>, <span class="number">38.05</span>],</span><br><span class="line">                   [<span class="number">112.55</span>, <span class="number">37.87</span>],</span><br><span class="line">                   [<span class="number">111.73</span>, <span class="number">40.83</span>],</span><br><span class="line">                   [<span class="number">123.43</span>, <span class="number">41.8</span>],</span><br><span class="line">                   [<span class="number">125.32</span>, <span class="number">43.9</span>],</span><br><span class="line">                   [<span class="number">126.53</span>, <span class="number">45.8</span>],</span><br><span class="line">                   [<span class="number">121.47</span>, <span class="number">31.23</span>],</span><br><span class="line">                   [<span class="number">118.78</span>, <span class="number">32.07</span>],</span><br><span class="line">                   [<span class="number">120.15</span>, <span class="number">30.28</span>],</span><br><span class="line">                   [<span class="number">117.25</span>, <span class="number">31.83</span>],</span><br><span class="line">                   [<span class="number">119.3</span>, <span class="number">26.08</span>],</span><br><span class="line">                   [<span class="number">115.85</span>, <span class="number">28.68</span>],</span><br><span class="line">                   [<span class="number">116.98</span>, <span class="number">36.67</span>],</span><br><span class="line">                   [<span class="number">113.62</span>, <span class="number">34.75</span>],</span><br><span class="line">                   [<span class="number">114.3</span>, <span class="number">30.6</span>],</span><br><span class="line">                   [<span class="number">112.93</span>, <span class="number">28.23</span>],</span><br><span class="line">                   [<span class="number">113.27</span>, <span class="number">23.13</span>],</span><br><span class="line">                   [<span class="number">108.37</span>, <span class="number">22.82</span>],</span><br><span class="line">                   [<span class="number">108.37</span>, <span class="number">22.82</span>],</span><br><span class="line">                   [<span class="number">106.55</span>, <span class="number">29.57</span>],</span><br><span class="line">                   [<span class="number">104.07</span>, <span class="number">30.67</span>],</span><br><span class="line">                   [<span class="number">106.63</span>, <span class="number">26.65</span>],</span><br><span class="line">                   [<span class="number">102.72</span>, <span class="number">25.05</span>],</span><br><span class="line">                   [<span class="number">91.13</span>, <span class="number">29.65</span>],</span><br><span class="line">                   [<span class="number">108.93</span>, <span class="number">34.27</span>],</span><br><span class="line">                   [<span class="number">103.82</span>, <span class="number">36.07</span>],</span><br><span class="line">                   [<span class="number">101.78</span>, <span class="number">36.62</span>],</span><br><span class="line">                   [<span class="number">106.28</span>, <span class="number">38.47</span>],</span><br><span class="line">                   [<span class="number">87.62</span>, <span class="number">43.82</span>],</span><br><span class="line">                   [<span class="number">121.52</span>, <span class="number">25.03</span>],</span><br><span class="line">                   [<span class="number">114.17</span>, <span class="number">22.28</span>],</span><br><span class="line">                   [<span class="number">113.55</span>, <span class="number">22.19</span>]])</span><br><span class="line">N_CITIES = CITIES.shape[<span class="number">0</span>]</span><br><span class="line">CROSS_RATE = <span class="number">0.1</span></span><br><span class="line">MUTATE_RATE = <span class="number">0.02</span></span><br><span class="line">POP_SIZE = <span class="number">1000</span></span><br><span class="line">N_GENERATIONS = <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end global variables----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------function definition----------</span></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">    Calculate the great circle distance between two points</span></span><br><span class="line"><span class="string">    on the earth (specified in decimal degrees)</span></span><br><span class="line"><span class="string">    @param:</span></span><br><span class="line"><span class="string">        lon1    Longitude of the first point</span></span><br><span class="line"><span class="string">        lat1    Latitude of the first point</span></span><br><span class="line"><span class="string">        lon2    Longitude of the second point</span></span><br><span class="line"><span class="string">        lat2    Latitude of the second point</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">haversine</span><span class="params">(lon1, lat1, lon2, lat2)</span>:</span></span><br><span class="line">    lon1, lat1, lon2, lat2 = map(radians, [lon1, lat1, lon2, lat2])</span><br><span class="line">    dlon = lon2 - lon1</span><br><span class="line">    dlat = lat2 - lat1</span><br><span class="line">    a = sin(dlat/<span class="number">2</span>)**<span class="number">2</span> + cos(lat1) * cos(lat2) * sin(dlon/<span class="number">2</span>)**<span class="number">2</span></span><br><span class="line">    c = <span class="number">2</span> * asin(sqrt(a))</span><br><span class="line">    r = <span class="number">6378.137</span></span><br><span class="line">    <span class="keyword">return</span> c * r</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end function definition----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------class definition----------</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GA</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, DNA_size, cross_rate, mutation_rate, pop_size, )</span>:</span></span><br><span class="line">        self.DNA_size = DNA_size</span><br><span class="line">        self.cross_rate = cross_rate</span><br><span class="line">        self.mutate_rate = mutation_rate</span><br><span class="line">        self.pop_size = pop_size</span><br><span class="line"></span><br><span class="line">        self.pop = np.vstack([np.random.permutation(DNA_size)</span><br><span class="line">                              <span class="keyword">for</span> _ <span class="keyword">in</span> range(pop_size)])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">translateDNA</span><span class="params">(self, DNA, city_position)</span>:</span>     <span class="comment"># get cities' coord in order</span></span><br><span class="line">        line_x = np.empty_like(DNA, dtype=np.float64)</span><br><span class="line">        line_y = np.empty_like(DNA, dtype=np.float64)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i, d <span class="keyword">in</span> enumerate(DNA):</span><br><span class="line"></span><br><span class="line">            city_coord = city_position[d]</span><br><span class="line">            line_x[i, :] = city_coord[:, <span class="number">0</span>]</span><br><span class="line">            line_y[i, :] = city_coord[:, <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">return</span> line_x, line_y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_fitness</span><span class="params">(self, line_x, line_y)</span>:</span></span><br><span class="line">        total_distance = np.zeros((line_x.shape[<span class="number">0</span>],), dtype=np.float64)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(line_x.shape[<span class="number">0</span>]):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(line_x.shape[<span class="number">1</span>]<span class="number">-1</span>):</span><br><span class="line">                total_distance[i] += haversine(line_x[i][j],</span><br><span class="line">                    line_y[i][j], line_x[i][j+<span class="number">1</span>], line_y[i][j+<span class="number">1</span>])</span><br><span class="line">            total_distance[i] += haversine(line_x[i][<span class="number">0</span>], line_y[i][<span class="number">0</span>],</span><br><span class="line">                line_x[i][line_x.shape[<span class="number">1</span>]<span class="number">-1</span>], line_y[i][line_x.shape[<span class="number">1</span>]<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line">        fitness = np.exp(self.DNA_size * <span class="number">20000</span> / total_distance)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fitness, total_distance</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">select</span><span class="params">(self, fitness)</span>:</span></span><br><span class="line">        idx = np.random.choice(np.arange(</span><br><span class="line">            self.pop_size), size=self.pop_size, replace=<span class="keyword">True</span>, p=fitness / fitness.sum())</span><br><span class="line">        <span class="keyword">return</span> self.pop[idx]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">crossover</span><span class="params">(self, parent, pop)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> np.random.rand() &lt; self.cross_rate:</span><br><span class="line">            <span class="comment"># select another individual from pop</span></span><br><span class="line">            i_ = np.random.randint(<span class="number">0</span>, self.pop_size, size=<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># choose crossover points</span></span><br><span class="line">            cross_points = np.random.randint(</span><br><span class="line">                <span class="number">0</span>, <span class="number">2</span>, self.DNA_size).astype(np.bool)</span><br><span class="line">            <span class="comment"># find the city number</span></span><br><span class="line">            keep_city = parent[~cross_points]</span><br><span class="line">            swap_city = pop[i_, np.in1d(</span><br><span class="line">                pop[i_].ravel(), keep_city, invert=<span class="keyword">True</span>)]</span><br><span class="line">            parent[:] = np.concatenate((keep_city, swap_city))</span><br><span class="line">        <span class="keyword">return</span> parent</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mutate</span><span class="params">(self, child)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> point <span class="keyword">in</span> range(self.DNA_size):</span><br><span class="line">            <span class="keyword">if</span> np.random.rand() &lt; self.mutate_rate:</span><br><span class="line">                swap_point = np.random.randint(<span class="number">0</span>, self.DNA_size)</span><br><span class="line">                swapA, swapB = child[point], child[swap_point]</span><br><span class="line">                child[point], child[swap_point] = swapB, swapA</span><br><span class="line">        <span class="keyword">return</span> child</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">evolve</span><span class="params">(self, fitness)</span>:</span></span><br><span class="line">        pop = self.select(fitness)</span><br><span class="line">        pop_copy = pop.copy()</span><br><span class="line">        <span class="comment"># for every parent</span></span><br><span class="line">        <span class="keyword">for</span> parent <span class="keyword">in</span> pop:</span><br><span class="line">            child = self.crossover(parent, pop_copy)</span><br><span class="line">            child = self.mutate(child)</span><br><span class="line">            parent[:] = child</span><br><span class="line">        self.pop = pop</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end class definition----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------main function----------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    ga = GA(DNA_size=N_CITIES, cross_rate=CROSS_RATE,</span><br><span class="line">            mutation_rate=MUTATE_RATE, pop_size=POP_SIZE)</span><br><span class="line"></span><br><span class="line">    path_list = []</span><br><span class="line">    <span class="keyword">for</span> generation <span class="keyword">in</span> range(N_GENERATIONS):</span><br><span class="line">        lx, ly = ga.translateDNA(ga.pop, CITIES)</span><br><span class="line">        fitness, total_distance = ga.get_fitness(lx, ly)</span><br><span class="line">        ga.evolve(fitness)</span><br><span class="line">        best_idx = np.argmax(fitness)</span><br><span class="line">        print(<span class="string">'Gen:'</span>, generation, <span class="string">'| total distance: %.4f'</span> %</span><br><span class="line">              total_distance[best_idx],)</span><br><span class="line"></span><br><span class="line">        path_x = np.array(list(lx[best_idx]) + [lx[best_idx][<span class="number">0</span>]])</span><br><span class="line">        path_y = np.array(list(ly[best_idx]) + [ly[best_idx][<span class="number">0</span>]])</span><br><span class="line">        path = np.stack((path_x, path_y))</span><br><span class="line">        path = path.transpose(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">        path_list.append(path.tolist())</span><br><span class="line"></span><br><span class="line">    f = open(<span class="string">'data.json'</span>, <span class="string">'w'</span>)</span><br><span class="line">    f.write(json.dumps(path_list))</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end main function----------</span></span><br></pre></td></tr></table></figure><h3 id="相关链接">相关链接</h3><ul><li><a href="https://github.com/onns/GaTSP" target="_blank" rel="noopener">GitHub 代码地址</a></li><li><a href="https://onns.xyz/2018/11/24/gatsp/">可视化演示地址</a></li></ul><script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 随机产生初始种群op1=>operation: 计算种群中每个个体的适应性op2=>operation: 按适应度进行选择个体op3=>operation: 繁殖op4=>operation: 将新个体复制到新种群op5=>operation: 按适应度进行选择两个个体op6=>operation: 杂交op7=>operation: 将两个新个体加到新种群op8=>operation: 按适应度进行选择个体op9=>operation: 变异op10=>operation: 将变异后的新个体加到新种群op11=>operation: 循环次数加一cond1=>condition: 终止判据是否满足?cond2=>condition: 是否循环指定次数?para1=>parallel: 随机选择遗传算子io1=>inputoutput: 输出结果e1=>end: 算法结束st->cond1cond1(no, bottom)->op1->cond2cond1(yes)->io1->e1cond2(no, bottom)->para1cond2(yes)->cond1para1(path1, left)->op2para1(path2, bottom)->op5para1(path3, right)->op8op2->op3->op4->op11op5->op6->op7->op11op8->op9->op10->op11op11->cond2</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;"><a href="https://baike.baidu.com/item/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/838140" target="_blank" rel="noopener">遗传算法_百度百科</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computational intelligence </tag>
            
            <tag> TSP </tag>
            
            <tag> GA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hybrid images lab report</title>
      <link href="/blog/2018/11/11/hybrid-images-lab-report/"/>
      <url>/blog/2018/11/11/hybrid-images-lab-report/</url>
      
        <content type="html"><![CDATA[<h2 id="问题分析">问题分析</h2><h3 id="问题描述">问题描述</h3><p>该实验的目标是编写一个图像过滤功能的代码，并使用它来创建混合图像。混合图像是静态图像，其视觉效果随观察距离的变化而变化。基本思想是人的感知对于<code>高频率</code>更加敏感，但是在远处只能看到信号的<code>低频(平滑)</code>部分。通过将一个图像的高频部分与另一个图像的低频部分混合，可以获得混合图像，从而在不同距离处产生不同的视觉效果。实验数据集在<code>proj1.rar</code>中。</p><h3 id="数据集分析">数据集分析</h3><p>实验数据集如下所示，由十张不同的<code>bmp</code>图像构成。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">data</span><br><span class="line">├── bicycle.bmp</span><br><span class="line">├── bird.bmp</span><br><span class="line">├── cat.bmp</span><br><span class="line">├── dog.bmp</span><br><span class="line">├── einstein.bmp</span><br><span class="line">├── fish.bmp</span><br><span class="line">├── marilyn.bmp</span><br><span class="line">├── motorcycle.bmp</span><br><span class="line">├── plane.bmp</span><br><span class="line">└── submarine.bmp</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="实验方法">实验方法</h2><h3 id="实验流程">实验流程</h3><p>本实验的流程如<code>图1</code>所示。</p><center><div id="flowchart-0" class="flow-chart"></div>图1 实验流程图</center><h3 id="滤波器-sup-id-fnref-1-a-href-fn-1-rel-footnote-1-a-sup">滤波器<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></h3><p>高通滤波器可以通过低通滤波器取反得到，故不再区分高/低通滤波器。<br>下面对比结果的输入图像如<code>图2</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181117-1.jpg" alt="滤波器输入图像"><br>图2 输入图像</p></center><h4 id="理想的低通滤波器">理想的低通滤波器</h4><p>$$<br>H(u,v)=<br>\begin{cases}<br>1,&amp;{D(u,v) \leq D_0} \<br>0,&amp;{D(u,v) &gt; D_0}<br>\end{cases}<br>\tag{1}<br>$$</p><p>其中，$D_0$表示通带的半径。$D(u,v)$的计算方式也就是两点间的距离，计算公式如<code>公式2.2</code>所示。</p><span>$$D(u,v)=\sqrt{\left( u-\frac{P}{2} \right)^{2} + \left( v-\frac{Q}{2} \right)^{2}}\tag{2}$$</span><!-- Has MathJax --><p>低通滤波器所得到的结果如下所示。低通滤波器滤除了高频成分，所以使得图像模糊。由于理想低通滤波器的过度特性过于急峻，所以会产生了振铃现象。</p><center><p><img src="//onns.xyz/blog/image/20181117-2.jpg" alt="理想的低通滤波器"><br><img src="//onns.xyz/blog/image/20181117-3.jpg" alt="理想的低通滤波器"><br>图3 理想的低通滤波器</p></center><h4 id="巴特沃斯低通滤波器">巴特沃斯低通滤波器</h4><p>$$<br>H(u,v)=\frac{1}{1+\left(D(u,v) / {D_0} \right)^{2n}}<br>\tag{3}<br>$$</p><p>$D_0$表示通带的半径，$n$表示的是巴特沃斯滤波器的次数。随着次数的增加，振铃现象会越来越明显。</p><center><p><img src="//onns.xyz/blog/image/20181117-4.jpg" alt="理想的低通滤波器"><br><img src="//onns.xyz/blog/image/20181117-5.jpg" alt="理想的低通滤波器"><br>图4 巴特沃斯低通滤波器</p></center><h4 id="高斯低通滤波器">高斯低通滤波器</h4><p>$$<br>H(u,v)=e^<br>{\frac{-D^2(u,v)}<br>{2{D_0}^2}}<br>\tag{4}<br>$$</p><p>$D_0$表示通带的半径，高斯滤波器的过度特性非常平坦，不会产生振铃现象的。</p><center><p><img src="//onns.xyz/blog/image/20181117-6.jpg" alt="理想的低通滤波器"><br><img src="//onns.xyz/blog/image/20181117-7.jpg" alt="理想的低通滤波器"><br>图5 高斯低通滤波器</p></center><h3 id="结论">结论</h3><p>综合以上分析, 我们最终选择了<code>高斯低通滤波器</code>.</p><h2 id="实验过程">实验过程</h2><h3 id="编程语言介绍">编程语言介绍</h3><p>本实验所选择的编程语言为<code>Matlab</code>, 编程软件为<code>Matlab 2018b</code>.</p><h3 id="图像预处理">图像预处理</h3><p><code>10张</code>bmp图像可以分成<code>5对</code>图像进行实验，如<code>图6</code>所示，大小都是<code>225*265</code>，故不需要进行缩放。若选取的图像大小不一，需要先对图像进行大小调整，用<code>Matlab</code>的<code>imresize</code>函数。</p><center><p><img src="//onns.xyz/blog/image/20181117-einstein.bmp" alt="原图以及HOG特征图"><img src="//onns.xyz/blog/image/20181117-marilyn.bmp" alt="原图以及HOG特征图"><br>图6 样例图像</p></center><h3 id="程序编写">程序编写</h3><h4 id="空域图像滤波">空域图像滤波</h4><p>将模板在图像中逐像素移动，将卷积核的每个元素分别和图像矩阵对应位置元素相乘并将结果累加，累加和作为模板中心对应像素点的卷积结果。通俗的讲，卷积就是对整幅图像进行加权平均的过程，每一个像素点的值，都由其本身和邻域内的其他像素值经过加权平均后得到。在像素的处理上，是先将结果暂存在于一个副本，最后统一拷贝，故不会出现处理顺序不同而结果不同的情况。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p><p>滤波结果如<code>图7</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181117-8.jpg" alt="高通滤波结果图"><img src="//onns.xyz/blog/image/20181117-9.jpg" alt="低通滤波结果图"><br>图7 空域图像滤波结果图</p></center><h4 id="频域图像滤波">频域图像滤波</h4><p>先对图像进行傅里叶变换，转换至频率域，在频域使用滤波函数进行滤波，最后将结果反变换至空间域。</p><p>滤波结果如<code>图8</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181117-11.jpg" alt="高通滤波结果图"><img src="//onns.xyz/blog/image/20181117-12.jpg" alt="低通滤波结果图"><br>图8 频域图像滤波结果图</p></center><h4 id="图像融合">图像融合</h4><p>在Matlab中将两个滤波后的图像<code>相加</code>即可得到融合图像。</p><p>结果如<code>图9</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181117-10.jpg" alt="空域图像滤波融合图"><img src="//onns.xyz/blog/image/20181117-13.jpg" alt="频域图像滤波融合图"><br>图9 图像融合结果图</p></center><h2 id="实验结果">实验结果</h2><center><p><img src="//onns.xyz/blog/image/20181117-14.png" alt="程序可视化界面图"><br>图10 程序可视化界面图</p></center><h3 id="实验结果分析">实验结果分析</h3><p>给定频率域滤波器，可对其进行傅里叶逆变换得到对应的空域滤波器；滤波在频域更为直观，但空域适合使用更小的滤波模板以提高滤波速度。因为相同尺寸下，频域滤波器效率高于空域滤波器，故空域滤波需要一个更小尺寸的模板近似得到需要的滤波结果。<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st1=>start: 开始e1=>end: 结束io1=>inputoutput: 输入图像1io2=>inputoutput: 输入图像2io3=>inputoutput: 输出混合图像op1=>operation: 通过低通滤波器得到低频部分op2=>operation: 通过高通滤波器得到高频部分op3=>operation: 将两部分相加得到混合图像st1->io1->op1->io2->op2->op3->io3->e1</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;"><a href="https://blog.csdn.net/zhoufan900428/article/details/17194289" target="_blank" rel="noopener">基础与低通滤波器</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;"><a href="https://blog.csdn.net/u010839382/article/details/41908541" target="_blank" rel="noopener">空域高斯滤波与频域高斯滤波</a></span><a href="#fnref:2" rev="footnote"> ↩</a></li></ol></div></div></p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer vision </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Computational Intelligence Homework No.2</title>
      <link href="/blog/2018/10/31/2018-computational-intelligence-homework-no.2/"/>
      <url>/blog/2018/10/31/2018-computational-intelligence-homework-no.2/</url>
      
        <content type="html"><![CDATA[<h1>用SA算法求解旅行商问题</h1><h2 id="问题描述">问题描述</h2><p>旅行商问题（Travelling Salesman Problem, 简记TSP, 亦称货郎担问题): 设有n个城市和距离矩阵D=[d<sub>ij</sub>], 其中d<sub>ij</sub>表示城市i到城市j的距离, i, j=1, 2 … n, 则问题是要找出遍访每个城市恰好一次的一条回路并使其路径长度为最短.</p><a id="more"></a><h2 id="算法设计">算法设计</h2><p>采用模拟退火算法计算旅行商问题, 模拟退火算法(Simulated Annealing Algorithm, 简称SA算法), 源于对固体退火过程的模拟, 采用Metropolis接受准则, 并用一组称为冷却表的参数控制算法进程, 使算法在多项式时间里给出一个近似最优解.</p><h3 id="Metropolis算法">Metropolis算法</h3><p>模拟退火算法用Metropolis算法产生组合优化问题解的序列. 并由Metropolis准则对应的转移概率<code>P</code>.</p><span>$$P(i=&gt;j)=\begin{cases}1,&amp;{当f(j) \leq f(i)} \\e^{\frac{f(i)&minus;f(j)}{t}},&amp;{否则}\end{cases}\tag{1}$$</span><!-- Has MathJax --><h3 id="冷却进度表">冷却进度表</h3><p>冷却表(cooling schedule)是一组控制算法进程的参数, 用以逼近模拟退火算法的渐进收敛性态, 使算法在有限时间内执行迭代过程后返回一个近似最优解.<br>冷却表是影响模拟退火算法实验性能的重要因素, 其合理选取是算法应用的关键.<br>一个冷却表应当规定下述参数:</p><ul><li>控制参数t的初值t<sub>0</sub></li><li>控制参数t的衰减函数</li><li>控制参数t的终值t<sub>f</sub>(停止准则)</li><li>Mapkob链长L<sub>k</sub></li></ul><h4 id="初值t-sub-0-sub">初值t<sub>0</sub></h4><p>控制参数初值t<sub>0</sub>要足够大, 才能使算法进程在合理时间里搜索尽可能大的解空间范围.<br>本实验选取t<sub>0</sub>为<code>100</code>.</p><h4 id="衰减函数">衰减函数</h4><p>在控制参数的衰减函数应使t<sub>k</sub>的衰减以小为宜.</p><span>$$\alpha(t)=0.9*t\tag{2}$$</span><!-- Has MathJax --><p>本实验选取的衰减函数如<code>公式2</code>所示.</p><h4 id="t的终值t-sub-f-sub-停止准则">t的终值t<sub>f</sub>(停止准则)</h4><p>控制参数终值t<sub>f</sub>通常由停止准则决定. 合理的停止准则既要确保算法收敛于某一近似解, 又要使最终解具有一定的质量.<br>本实验选取的停止准则为<code>连续两个Mapkob链路径无变化</code>则程序终止.</p><h4 id="Mapkob链长L-sub-k-sub">Mapkob链长L<sub>k</sub></h4><p>Mapkob链长L<sub>k</sub>在控制参数t的衰减函数已选定的前提下, L<sub>k</sub>应选得在控制参数的每一取值上都能恢复准平衡.<br>本实验选取的Mapkob链长为<code>定长20000</code>.</p><h3 id="新解的产生">新解的产生</h3><p>采用2变换法. 任选序号<code>u</code>和<code>v</code>(u &lt; v), 将 <code>u</code>和<code>v</code>及其之间的顺序逆转.</p><span>$$\pi_{1}...\pi_{u-1}\color{red}{\pi_{u}\pi_{u+1}...\pi_{v-1}\pi_{v}}\pi_{v+1}...\pi_{n} \\\downarrow{} \\\pi_{1}...\pi_{u-1}\color{red}{\pi_{v}\pi_{v-1}...\pi_{u-1}\pi_{u}}\pi_{v+1}...\pi_{n}\tag{3}$$</span><!-- Has MathJax --><h2 id="程序流程">程序流程</h2><p>程序流程如<code>图1</code>所示</p><center><div id="flowchart-0" class="flow-chart"></div>图1 程序流程图</center><h2 id="核心伪代码">核心伪代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化路径</span></span><br><span class="line">x1 = random.sample(range(citynum), citynum)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算按此路径运动所花费的代价</span></span><br><span class="line">f1 = calculate(x1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化起始温度</span></span><br><span class="line">T = T_max</span><br><span class="line"></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当起始温度低于预设的最低温度时停止循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    flag = flag + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Mapkob链长, 即迭代次数</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(iter):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 通过2变换法生成新路径</span></span><br><span class="line">        x2 = generate(x1)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算新解所花费的代价</span></span><br><span class="line">        f2 = calculate(x2)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 计算两个解的代价差</span></span><br><span class="line">        df = f2 - f1</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 用Metropolis算法判断是否接受新解</span></span><br><span class="line">        <span class="keyword">if</span> accept(df, T):</span><br><span class="line">            x1 = x2</span><br><span class="line">            f1 = calculate(x1)</span><br><span class="line">            flag = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 模拟温度衰减</span></span><br><span class="line">    T *= rate</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 连续两次Mapkob链路径无变化则停止循环</span></span><br><span class="line">    <span class="keyword">if</span> flag &gt;= <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到最终路径结果</span></span><br><span class="line">x = x1</span><br></pre></td></tr></table></figure><h2 id="代码运行及测试">代码运行及测试</h2><p>代码的运行结果如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">time: 14.867s</span><br><span class="line">result: 0 -&gt; 3 -&gt; 2 -&gt; 1</span><br><span class="line">cost: 108</span><br><span class="line"></span><br><span class="line">time: 16.764s</span><br><span class="line">result: 5 -&gt; 6 -&gt; 7 -&gt; 1 -&gt; 2 -&gt; 9 -&gt; 0 -&gt; 8 -&gt; 4 -&gt; 3</span><br><span class="line">cost: 229</span><br><span class="line"></span><br><span class="line">time: 24.910s</span><br><span class="line">result: 12 -&gt; 15 -&gt; 8 -&gt; 0 -&gt; 18 -&gt; 3 -&gt; 21 -&gt; 16 -&gt; 27 -&gt; 20</span><br><span class="line"> -&gt; 29 -&gt; 14 -&gt; 10 -&gt; 6 -&gt; 28 -&gt; 25 -&gt; 17 -&gt; 5 -&gt; 4 -&gt; 11</span><br><span class="line"> -&gt; 24 -&gt; 1 -&gt; 26 -&gt; 9 -&gt; 23 -&gt; 7 -&gt; 19 -&gt; 13 -&gt; 2 -&gt; 22</span><br><span class="line">cost: 576</span><br></pre></td></tr></table></figure><p>由于数据计算结果过慢, 在代码中额外增加了终止条件: <code>当温度低于0.01时程序停止</code>.<br>由于前两个测试数据城市数量较少, 已经得到最优解, 后续改进实验仅以<code>30</code>个城市的结果作为对比.<br>考虑到初始值为随机选取的, 且最终的路径为一个<code>头尾相接</code>的&quot;环&quot;, 修改新解的产生方法</p><span>$$\color{red}{\pi_{1}...\pi_{u-1}}\pi_{u}\pi_{u+1}...\pi_{v-1}\pi_{v}\color{red}{\pi_{v+1}...\pi_{n}} \\\downarrow{} \\\color{red}{\pi_{1}...\pi_{v+1}}\pi_{u}\pi_{u+1}...\pi_{v-1}\pi_{v}\color{red}{\pi_{u-1}...\pi_{n}}\tag{4}$$</span><!-- Has MathJax --><p>代码的运行结果如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">time: 22.672s</span><br><span class="line">result: 9 -&gt; 17 -&gt; 5 -&gt; 18 -&gt; 16 -&gt; 27 -&gt; 20 -&gt; 21 -&gt; 4 -&gt; 1</span><br><span class="line"> -&gt; 12 -&gt; 15 -&gt; 8 -&gt; 3 -&gt; 13 -&gt; 25 -&gt; 2 -&gt; 29 -&gt; 14 -&gt; 10</span><br><span class="line"> -&gt; 6 -&gt; 28 -&gt; 22 -&gt; 11 -&gt; 24 -&gt; 7 -&gt; 19 -&gt; 23 -&gt; 26 -&gt; 0</span><br><span class="line">cost: 565</span><br></pre></td></tr></table></figure><p>增大变换的自由度, 只交换<code>u</code>和<code>v</code>的两个序号</p><span>$$\pi_{1}...\pi_{u-1}\color{red}{\pi_{u}}\pi_{u+1}...\pi_{v-1}\color{red}{\pi_{v}}\pi_{v+1}...\pi_{n} \\\downarrow{} \\\pi_{1}...\pi_{u-1}\color{red}{\pi_{v}}\pi_{u+1}...\pi_{v-1}\color{red}{\pi_{u}}\pi_{v+1}...\pi_{n}\tag{5}$$</span><!-- Has MathJax --><p>代码的运行结果如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">time: 11.749s</span><br><span class="line">result: 0 -&gt; 2 -&gt; 22 -&gt; 11 -&gt; 7 -&gt; 28 -&gt; 6 -&gt; 19 -&gt; 23 -&gt; 26</span><br><span class="line"> -&gt; 9 -&gt; 21 -&gt; 12 -&gt; 13 -&gt; 16 -&gt; 27 -&gt; 20 -&gt; 15 -&gt; 8 -&gt; 24</span><br><span class="line"> -&gt; 4 -&gt; 1 -&gt; 5 -&gt; 25 -&gt; 17 -&gt; 18 -&gt; 3 -&gt; 29 -&gt; 14 -&gt; 10</span><br><span class="line">cost: 475</span><br></pre></td></tr></table></figure><p>观察代码运行状态, 都是温度达到<code>最小值以下</code>后退出的程序, 可能未达到<code>当前参数下</code>的最佳结果, 故将循环终止条件改为<code>只有连续两个Mapkob链路径无变化</code>.<br>代码的运行结果如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">time: 7.6435s</span><br><span class="line">result: 8 -&gt; 2 -&gt; 21 -&gt; 6 -&gt; 28 -&gt; 29 -&gt; 14 -&gt; 10 -&gt; 17 -&gt; 23</span><br><span class="line"> -&gt; 26 -&gt; 9 -&gt; 12 -&gt; 15 -&gt; 19 -&gt; 25 -&gt; 1 -&gt; 5 -&gt; 13 -&gt; 16</span><br><span class="line"> -&gt; 27 -&gt; 20 -&gt; 18 -&gt; 22 -&gt; 11 -&gt; 0 -&gt; 24 -&gt; 4 -&gt; 7 -&gt; 3</span><br><span class="line">cost: 467</span><br></pre></td></tr></table></figure><p>所以结果如<code>表1</code>所示:</p><center>表1 代码运行结果</center><table><thead><tr><th style="text-align:center">代码版本</th><th style="text-align:center">时间</th><th style="text-align:center">花费</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">24.910s</td><td style="text-align:center">576</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">22.672s</td><td style="text-align:center">565</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">11.749s</td><td style="text-align:center">475</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><font color="#ff0000">7.6435s</font></td><td style="text-align:center"><font color="#ff0000">467</font></td></tr></tbody></table><h2 id="结论">结论</h2><p>算法在多项式时间里给出一个近似最优解.</p><h2 id="附录">附录</h2><h3 id="城市矩阵生成代码">城市矩阵生成代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_city</span><span class="params">(num, min=<span class="number">10</span>, max=<span class="number">100</span>)</span>:</span></span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">temp_data = []</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(num):</span><br><span class="line"><span class="keyword">if</span>(i == j):</span><br><span class="line">temp_data.append(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">temp_data.append(random.randint(min, max))</span><br><span class="line">data.append(temp_data)</span><br><span class="line"><span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">print(generate_city(<span class="number">4</span>))</span><br><span class="line">print(generate_city(<span class="number">10</span>))</span><br><span class="line">print(generate_city(<span class="number">30</span>))</span><br></pre></td></tr></table></figure><h3 id="模拟退火算法代码">模拟退火算法代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SA</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, citymap, T_max=<span class="number">100</span>, T_min=<span class="number">0.01</span>, iter=<span class="number">20000</span>, rate=<span class="number">0.90</span>)</span>:</span></span><br><span class="line">        self.citymap = citymap</span><br><span class="line">        self.citynum = len(citymap)</span><br><span class="line">        self.T_max = T_max</span><br><span class="line">        self.T_min = T_min</span><br><span class="line">        self.iter = iter</span><br><span class="line">        self.rate = rate</span><br><span class="line"></span><br><span class="line">        self.i = random.sample(range(self.citynum), self.citynum)</span><br><span class="line"></span><br><span class="line">        start_time = time.time()</span><br><span class="line">        self.solve()</span><br><span class="line">        end_time = time.time()</span><br><span class="line"></span><br><span class="line">        print(<span class="string">'time: '</span> + str(end_time - start_time)[:<span class="number">6</span>] + <span class="string">'s'</span>)</span><br><span class="line">        print(<span class="string">'result: '</span> + <span class="string">' -&gt; '</span>.join(str(i) <span class="keyword">for</span> i <span class="keyword">in</span> self.x))</span><br><span class="line">        print(<span class="string">'cost: '</span> + str(self.calculate(self.x)))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">calculate</span><span class="params">(self, city_list)</span>:</span></span><br><span class="line">        cost = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.citynum - <span class="number">1</span>):</span><br><span class="line">            cost = cost + self.citymap[city_list[i]][city_list[i + <span class="number">1</span>]]</span><br><span class="line">        cost = cost + self.citymap[city_list[i + <span class="number">1</span>]][city_list[<span class="number">0</span>]]</span><br><span class="line">        <span class="keyword">return</span> cost</span><br><span class="line"></span><br><span class="line">    <span class="comment"># def generate(self, city_list):</span></span><br><span class="line">    <span class="comment">#     u, v = random.sample(range(self.citynum + 1), 2)</span></span><br><span class="line">    <span class="comment">#     if u &gt; v:</span></span><br><span class="line">    <span class="comment">#         temp_list = city_list[u:] + city_list[:v]</span></span><br><span class="line">    <span class="comment">#         temp_list.reverse()</span></span><br><span class="line">    <span class="comment">#         return temp_list[self.citynum-u:] + city_list[v:u] + temp_list[:self.citynum-u]</span></span><br><span class="line">    <span class="comment">#     else:</span></span><br><span class="line">    <span class="comment">#         temp_list = city_list[u:v]</span></span><br><span class="line">    <span class="comment">#         temp_list.reverse()</span></span><br><span class="line">    <span class="comment">#         return city_list[:u] + temp_list + city_list[v:]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># def generate(self, city_list):</span></span><br><span class="line">    <span class="comment">#     u, v = random.sample(range(self.citynum + 1), 2)</span></span><br><span class="line">    <span class="comment">#     if u &gt; v:</span></span><br><span class="line">    <span class="comment">#         u, v = v, u</span></span><br><span class="line">    <span class="comment">#     temp_list = city_list[u:v]</span></span><br><span class="line">    <span class="comment">#     temp_list.reverse()</span></span><br><span class="line">    <span class="comment">#     return city_list[:u] + temp_list + city_list[v:]</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(self, city_list)</span>:</span></span><br><span class="line">        u, v = random.sample(range(self.citynum), <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> u &gt; v:</span><br><span class="line">            u, v = v, u</span><br><span class="line">        <span class="keyword">return</span> city_list[:u] + city_list[v:v+<span class="number">1</span>] + city_list[u+<span class="number">1</span>:v] + city_list[u:u+<span class="number">1</span>] + city_list[v+<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">accept</span><span class="params">(self, df, T)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> df &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> np.exp(-df / T) &gt;= random.random():</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">solve</span><span class="params">(self)</span>:</span></span><br><span class="line">        x1 = self.i</span><br><span class="line">        f1 = self.calculate(x1)</span><br><span class="line">        T = self.T_max</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            flag = flag + <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(self.iter):</span><br><span class="line">                x2 = self.generate(x1)</span><br><span class="line">                f2 = self.calculate(x2)</span><br><span class="line">                df = f2 - f1</span><br><span class="line">                <span class="keyword">if</span> self.accept(df, T):</span><br><span class="line">                    x1 = x2</span><br><span class="line">                    f1 = self.calculate(x1)</span><br><span class="line">                    flag = <span class="number">0</span></span><br><span class="line">            T *= self.rate</span><br><span class="line">            <span class="keyword">if</span> flag &gt;= <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        self.x = x1</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    SA([[<span class="number">0</span>, <span class="number">48</span>, <span class="number">46</span>, <span class="number">48</span>], [<span class="number">1</span>, <span class="number">0</span>, <span class="number">63</span>, <span class="number">4</span>], [<span class="number">39</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">59</span>], [<span class="number">67</span>, <span class="number">28</span>, <span class="number">56</span>, <span class="number">0</span>]])</span><br><span class="line">    SA([[<span class="number">0</span>, <span class="number">76</span>, <span class="number">62</span>, <span class="number">85</span>, <span class="number">81</span>, <span class="number">99</span>, <span class="number">78</span>, <span class="number">99</span>, <span class="number">37</span>, <span class="number">87</span>],</span><br><span class="line">        [<span class="number">31</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">61</span>, <span class="number">56</span>, <span class="number">89</span>, <span class="number">84</span>, <span class="number">99</span>, <span class="number">48</span>, <span class="number">44</span>],</span><br><span class="line">        [<span class="number">12</span>, <span class="number">54</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">53</span>, <span class="number">86</span>, <span class="number">73</span>, <span class="number">90</span>, <span class="number">37</span>, <span class="number">22</span>],</span><br><span class="line">        [<span class="number">77</span>, <span class="number">12</span>, <span class="number">23</span>, <span class="number">0</span>, <span class="number">64</span>, <span class="number">13</span>, <span class="number">61</span>, <span class="number">29</span>, <span class="number">94</span>, <span class="number">54</span>],</span><br><span class="line">        [<span class="number">17</span>, <span class="number">90</span>, <span class="number">81</span>, <span class="number">27</span>, <span class="number">0</span>, <span class="number">61</span>, <span class="number">94</span>, <span class="number">36</span>, <span class="number">79</span>, <span class="number">64</span>],</span><br><span class="line">        [<span class="number">47</span>, <span class="number">27</span>, <span class="number">66</span>, <span class="number">82</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">91</span>, <span class="number">55</span>],</span><br><span class="line">        [<span class="number">98</span>, <span class="number">18</span>, <span class="number">93</span>, <span class="number">72</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">48</span>, <span class="number">47</span>, <span class="number">94</span>],</span><br><span class="line">        [<span class="number">88</span>, <span class="number">13</span>, <span class="number">97</span>, <span class="number">78</span>, <span class="number">80</span>, <span class="number">54</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">96</span>],</span><br><span class="line">        [<span class="number">32</span>, <span class="number">87</span>, <span class="number">75</span>, <span class="number">27</span>, <span class="number">10</span>, <span class="number">94</span>, <span class="number">36</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="number">14</span>],</span><br><span class="line">        [<span class="number">18</span>, <span class="number">97</span>, <span class="number">75</span>, <span class="number">91</span>, <span class="number">57</span>, <span class="number">78</span>, <span class="number">76</span>, <span class="number">70</span>, <span class="number">13</span>, <span class="number">0</span>]])</span><br><span class="line">    SA([[<span class="number">0</span>, <span class="number">84</span>, <span class="number">19</span>, <span class="number">73</span>, <span class="number">83</span>, <span class="number">56</span>, <span class="number">55</span>, <span class="number">78</span>, <span class="number">68</span>, <span class="number">10</span>, <span class="number">33</span>, <span class="number">61</span>, <span class="number">23</span>, <span class="number">41</span>, <span class="number">17</span>,</span><br><span class="line">         <span class="number">81</span>, <span class="number">12</span>, <span class="number">22</span>, <span class="number">24</span>, <span class="number">60</span>, <span class="number">85</span>, <span class="number">53</span>, <span class="number">82</span>, <span class="number">97</span>, <span class="number">13</span>, <span class="number">44</span>, <span class="number">54</span>, <span class="number">96</span>, <span class="number">54</span>, <span class="number">18</span>],</span><br><span class="line">        [<span class="number">56</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">76</span>, <span class="number">60</span>, <span class="number">11</span>, <span class="number">38</span>, <span class="number">35</span>, <span class="number">98</span>, <span class="number">76</span>, <span class="number">25</span>, <span class="number">67</span>, <span class="number">29</span>, <span class="number">51</span>, <span class="number">53</span>,</span><br><span class="line">         <span class="number">29</span>, <span class="number">94</span>, <span class="number">70</span>, <span class="number">76</span>, <span class="number">74</span>, <span class="number">83</span>, <span class="number">29</span>, <span class="number">54</span>, <span class="number">64</span>, <span class="number">75</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">53</span>, <span class="number">23</span>, <span class="number">62</span>],</span><br><span class="line">        [<span class="number">43</span>, <span class="number">89</span>, <span class="number">0</span>, <span class="number">95</span>, <span class="number">100</span>, <span class="number">93</span>, <span class="number">38</span>, <span class="number">95</span>, <span class="number">77</span>, <span class="number">34</span>, <span class="number">33</span>, <span class="number">70</span>, <span class="number">90</span>, <span class="number">75</span>, <span class="number">66</span>,</span><br><span class="line">         <span class="number">75</span>, <span class="number">26</span>, <span class="number">81</span>, <span class="number">90</span>, <span class="number">19</span>, <span class="number">91</span>, <span class="number">27</span>, <span class="number">10</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">37</span>, <span class="number">18</span>, <span class="number">95</span>, <span class="number">13</span>, <span class="number">27</span>],</span><br><span class="line">        [<span class="number">31</span>, <span class="number">26</span>, <span class="number">63</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">71</span>, <span class="number">64</span>, <span class="number">70</span>, <span class="number">10</span>, <span class="number">54</span>, <span class="number">70</span>, <span class="number">47</span>, <span class="number">78</span>, <span class="number">12</span>, <span class="number">18</span>,</span><br><span class="line">         <span class="number">89</span>, <span class="number">69</span>, <span class="number">90</span>, <span class="number">59</span>, <span class="number">37</span>, <span class="number">24</span>, <span class="number">11</span>, <span class="number">90</span>, <span class="number">87</span>, <span class="number">71</span>, <span class="number">48</span>, <span class="number">38</span>, <span class="number">76</span>, <span class="number">84</span>, <span class="number">13</span>],</span><br><span class="line">        [<span class="number">24</span>, <span class="number">16</span>, <span class="number">72</span>, <span class="number">64</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">64</span>, <span class="number">11</span>, <span class="number">82</span>, <span class="number">52</span>, <span class="number">87</span>, <span class="number">14</span>, <span class="number">43</span>, <span class="number">75</span>, <span class="number">32</span>,</span><br><span class="line">         <span class="number">79</span>, <span class="number">66</span>, <span class="number">54</span>, <span class="number">66</span>, <span class="number">50</span>, <span class="number">55</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">85</span>, <span class="number">31</span>, <span class="number">58</span>, <span class="number">37</span>, <span class="number">60</span>, <span class="number">33</span>, <span class="number">83</span>],</span><br><span class="line">        [<span class="number">11</span>, <span class="number">15</span>, <span class="number">56</span>, <span class="number">46</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">50</span>, <span class="number">86</span>, <span class="number">55</span>, <span class="number">76</span>, <span class="number">17</span>, <span class="number">59</span>, <span class="number">58</span>, <span class="number">15</span>, <span class="number">37</span>,</span><br><span class="line">         <span class="number">12</span>, <span class="number">22</span>, <span class="number">39</span>, <span class="number">33</span>, <span class="number">97</span>, <span class="number">65</span>, <span class="number">88</span>, <span class="number">57</span>, <span class="number">56</span>, <span class="number">64</span>, <span class="number">29</span>, <span class="number">69</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">94</span>],</span><br><span class="line">        [<span class="number">63</span>, <span class="number">71</span>, <span class="number">50</span>, <span class="number">34</span>, <span class="number">97</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">75</span>, <span class="number">58</span>, <span class="number">68</span>, <span class="number">21</span>, <span class="number">57</span>, <span class="number">74</span>, <span class="number">75</span>,</span><br><span class="line">         <span class="number">84</span>, <span class="number">20</span>, <span class="number">90</span>, <span class="number">77</span>, <span class="number">18</span>, <span class="number">99</span>, <span class="number">59</span>, <span class="number">19</span>, <span class="number">22</span>, <span class="number">40</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">81</span>, <span class="number">11</span>, <span class="number">34</span>],</span><br><span class="line">        [<span class="number">89</span>, <span class="number">79</span>, <span class="number">22</span>, <span class="number">15</span>, <span class="number">78</span>, <span class="number">55</span>, <span class="number">83</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">74</span>, <span class="number">22</span>, <span class="number">69</span>, <span class="number">53</span>, <span class="number">25</span>, <span class="number">57</span>,</span><br><span class="line">         <span class="number">100</span>, <span class="number">88</span>, <span class="number">53</span>, <span class="number">68</span>, <span class="number">18</span>, <span class="number">99</span>, <span class="number">71</span>, <span class="number">81</span>, <span class="number">56</span>, <span class="number">72</span>, <span class="number">82</span>, <span class="number">100</span>, <span class="number">21</span>, <span class="number">14</span>, <span class="number">55</span>],</span><br><span class="line">        [<span class="number">19</span>, <span class="number">88</span>, <span class="number">13</span>, <span class="number">28</span>, <span class="number">61</span>, <span class="number">79</span>, <span class="number">73</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">85</span>, <span class="number">61</span>, <span class="number">36</span>, <span class="number">39</span>, <span class="number">62</span>,</span><br><span class="line">         <span class="number">44</span>, <span class="number">69</span>, <span class="number">63</span>, <span class="number">25</span>, <span class="number">55</span>, <span class="number">51</span>, <span class="number">100</span>, <span class="number">77</span>, <span class="number">36</span>, <span class="number">11</span>, <span class="number">78</span>, <span class="number">37</span>, <span class="number">76</span>, <span class="number">88</span>, <span class="number">66</span>],</span><br><span class="line">        [<span class="number">15</span>, <span class="number">99</span>, <span class="number">36</span>, <span class="number">61</span>, <span class="number">79</span>, <span class="number">85</span>, <span class="number">57</span>, <span class="number">26</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">22</span>, <span class="number">54</span>, <span class="number">13</span>, <span class="number">78</span>, <span class="number">95</span>,</span><br><span class="line">         <span class="number">99</span>, <span class="number">94</span>, <span class="number">11</span>, <span class="number">60</span>, <span class="number">12</span>, <span class="number">43</span>, <span class="number">20</span>, <span class="number">60</span>, <span class="number">28</span>, <span class="number">24</span>, <span class="number">95</span>, <span class="number">94</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">77</span>],</span><br><span class="line">        [<span class="number">34</span>, <span class="number">73</span>, <span class="number">96</span>, <span class="number">100</span>, <span class="number">81</span>, <span class="number">93</span>, <span class="number">21</span>, <span class="number">63</span>, <span class="number">34</span>, <span class="number">19</span>, <span class="number">0</span>, <span class="number">63</span>, <span class="number">47</span>, <span class="number">95</span>, <span class="number">36</span>,</span><br><span class="line">         <span class="number">20</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">99</span>, <span class="number">58</span>, <span class="number">30</span>, <span class="number">98</span>, <span class="number">29</span>, <span class="number">75</span>, <span class="number">85</span>, <span class="number">58</span>, <span class="number">99</span>, <span class="number">39</span>, <span class="number">25</span>, <span class="number">79</span>],</span><br><span class="line">        [<span class="number">16</span>, <span class="number">90</span>, <span class="number">15</span>, <span class="number">85</span>, <span class="number">79</span>, <span class="number">53</span>, <span class="number">44</span>, <span class="number">13</span>, <span class="number">83</span>, <span class="number">86</span>, <span class="number">27</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">41</span>, <span class="number">42</span>,</span><br><span class="line">         <span class="number">13</span>, <span class="number">50</span>, <span class="number">45</span>, <span class="number">97</span>, <span class="number">36</span>, <span class="number">96</span>, <span class="number">87</span>, <span class="number">59</span>, <span class="number">57</span>, <span class="number">42</span>, <span class="number">36</span>, <span class="number">85</span>, <span class="number">17</span>, <span class="number">55</span>, <span class="number">98</span>],</span><br><span class="line">        [<span class="number">99</span>, <span class="number">85</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">44</span>, <span class="number">34</span>, <span class="number">39</span>, <span class="number">88</span>, <span class="number">35</span>, <span class="number">13</span>, <span class="number">26</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">19</span>,</span><br><span class="line">         <span class="number">10</span>, <span class="number">22</span>, <span class="number">28</span>, <span class="number">21</span>, <span class="number">52</span>, <span class="number">54</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">78</span>, <span class="number">53</span>, <span class="number">66</span>, <span class="number">87</span>, <span class="number">17</span>, <span class="number">54</span>, <span class="number">87</span>],</span><br><span class="line">        [<span class="number">80</span>, <span class="number">66</span>, <span class="number">29</span>, <span class="number">77</span>, <span class="number">41</span>, <span class="number">92</span>, <span class="number">61</span>, <span class="number">25</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">92</span>, <span class="number">0</span>, <span class="number">30</span>,</span><br><span class="line">         <span class="number">37</span>, <span class="number">10</span>, <span class="number">81</span>, <span class="number">59</span>, <span class="number">24</span>, <span class="number">75</span>, <span class="number">74</span>, <span class="number">34</span>, <span class="number">65</span>, <span class="number">82</span>, <span class="number">53</span>, <span class="number">100</span>, <span class="number">82</span>, <span class="number">69</span>, <span class="number">92</span>],</span><br><span class="line">        [<span class="number">87</span>, <span class="number">73</span>, <span class="number">97</span>, <span class="number">59</span>, <span class="number">72</span>, <span class="number">77</span>, <span class="number">34</span>, <span class="number">86</span>, <span class="number">57</span>, <span class="number">90</span>, <span class="number">10</span>, <span class="number">74</span>, <span class="number">38</span>, <span class="number">18</span>, <span class="number">0</span>,</span><br><span class="line">         <span class="number">90</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">17</span>, <span class="number">71</span>, <span class="number">63</span>, <span class="number">95</span>, <span class="number">83</span>, <span class="number">88</span>, <span class="number">45</span>, <span class="number">32</span>, <span class="number">40</span>, <span class="number">51</span>, <span class="number">70</span>, <span class="number">71</span>],</span><br><span class="line">        [<span class="number">78</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">92</span>, <span class="number">50</span>, <span class="number">81</span>, <span class="number">91</span>, <span class="number">59</span>, <span class="number">11</span>, <span class="number">48</span>, <span class="number">52</span>, <span class="number">58</span>, <span class="number">30</span>, <span class="number">79</span>, <span class="number">48</span>,</span><br><span class="line">         <span class="number">0</span>, <span class="number">26</span>, <span class="number">28</span>, <span class="number">52</span>, <span class="number">17</span>, <span class="number">24</span>, <span class="number">11</span>, <span class="number">63</span>, <span class="number">55</span>, <span class="number">46</span>, <span class="number">76</span>, <span class="number">59</span>, <span class="number">32</span>, <span class="number">43</span>, <span class="number">96</span>],</span><br><span class="line">        [<span class="number">77</span>, <span class="number">64</span>, <span class="number">11</span>, <span class="number">77</span>, <span class="number">89</span>, <span class="number">64</span>, <span class="number">23</span>, <span class="number">31</span>, <span class="number">81</span>, <span class="number">43</span>, <span class="number">55</span>, <span class="number">30</span>, <span class="number">38</span>, <span class="number">92</span>, <span class="number">63</span>,</span><br><span class="line">         <span class="number">67</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">31</span>, <span class="number">40</span>, <span class="number">59</span>, <span class="number">39</span>, <span class="number">41</span>, <span class="number">35</span>, <span class="number">72</span>, <span class="number">19</span>, <span class="number">37</span>, <span class="number">12</span>, <span class="number">76</span>, <span class="number">65</span>],</span><br><span class="line">        [<span class="number">33</span>, <span class="number">80</span>, <span class="number">18</span>, <span class="number">86</span>, <span class="number">35</span>, <span class="number">18</span>, <span class="number">81</span>, <span class="number">22</span>, <span class="number">32</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">43</span>, <span class="number">60</span>, <span class="number">73</span>, <span class="number">88</span>,</span><br><span class="line">         <span class="number">49</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">46</span>, <span class="number">84</span>, <span class="number">72</span>, <span class="number">25</span>, <span class="number">15</span>, <span class="number">88</span>, <span class="number">22</span>, <span class="number">69</span>, <span class="number">60</span>, <span class="number">97</span>, <span class="number">97</span>],</span><br><span class="line">        [<span class="number">57</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">33</span>, <span class="number">74</span>, <span class="number">36</span>, <span class="number">24</span>, <span class="number">49</span>, <span class="number">32</span>, <span class="number">11</span>, <span class="number">48</span>, <span class="number">38</span>, <span class="number">56</span>, <span class="number">20</span>, <span class="number">60</span>,</span><br><span class="line">         <span class="number">24</span>, <span class="number">16</span>, <span class="number">69</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">27</span>, <span class="number">98</span>, <span class="number">33</span>, <span class="number">26</span>, <span class="number">73</span>, <span class="number">37</span>, <span class="number">40</span>, <span class="number">83</span>, <span class="number">29</span>, <span class="number">89</span>],</span><br><span class="line">        [<span class="number">83</span>, <span class="number">79</span>, <span class="number">23</span>, <span class="number">58</span>, <span class="number">33</span>, <span class="number">65</span>, <span class="number">76</span>, <span class="number">97</span>, <span class="number">65</span>, <span class="number">17</span>, <span class="number">93</span>, <span class="number">87</span>, <span class="number">66</span>, <span class="number">25</span>, <span class="number">95</span>,</span><br><span class="line">         <span class="number">28</span>, <span class="number">90</span>, <span class="number">78</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">64</span>, <span class="number">90</span>, <span class="number">41</span>, <span class="number">12</span>, <span class="number">74</span>, <span class="number">30</span>, <span class="number">100</span>, <span class="number">86</span>, <span class="number">73</span>, <span class="number">49</span>],</span><br><span class="line">        [<span class="number">57</span>, <span class="number">66</span>, <span class="number">50</span>, <span class="number">82</span>, <span class="number">42</span>, <span class="number">56</span>, <span class="number">54</span>, <span class="number">61</span>, <span class="number">55</span>, <span class="number">65</span>, <span class="number">23</span>, <span class="number">98</span>, <span class="number">78</span>, <span class="number">54</span>, <span class="number">44</span>,</span><br><span class="line">         <span class="number">17</span>, <span class="number">60</span>, <span class="number">89</span>, <span class="number">17</span>, <span class="number">44</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">100</span>, <span class="number">44</span>, <span class="number">58</span>, <span class="number">11</span>, <span class="number">55</span>, <span class="number">25</span>],</span><br><span class="line">        [<span class="number">88</span>, <span class="number">18</span>, <span class="number">94</span>, <span class="number">98</span>, <span class="number">32</span>, <span class="number">55</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">52</span>, <span class="number">80</span>, <span class="number">30</span>, <span class="number">15</span>, <span class="number">89</span>, <span class="number">60</span>,</span><br><span class="line">         <span class="number">72</span>, <span class="number">20</span>, <span class="number">59</span>, <span class="number">77</span>, <span class="number">31</span>, <span class="number">83</span>, <span class="number">0</span>, <span class="number">83</span>, <span class="number">51</span>, <span class="number">90</span>, <span class="number">48</span>, <span class="number">63</span>, <span class="number">48</span>, <span class="number">42</span>, <span class="number">36</span>],</span><br><span class="line">        [<span class="number">98</span>, <span class="number">51</span>, <span class="number">76</span>, <span class="number">52</span>, <span class="number">42</span>, <span class="number">80</span>, <span class="number">57</span>, <span class="number">36</span>, <span class="number">98</span>, <span class="number">64</span>, <span class="number">28</span>, <span class="number">25</span>, <span class="number">18</span>, <span class="number">62</span>, <span class="number">22</span>,</span><br><span class="line">         <span class="number">59</span>, <span class="number">13</span>, <span class="number">95</span>, <span class="number">65</span>, <span class="number">69</span>, <span class="number">91</span>, <span class="number">28</span>, <span class="number">0</span>, <span class="number">88</span>, <span class="number">64</span>, <span class="number">38</span>, <span class="number">97</span>, <span class="number">66</span>, <span class="number">14</span>, <span class="number">96</span>],</span><br><span class="line">        [<span class="number">32</span>, <span class="number">20</span>, <span class="number">71</span>, <span class="number">94</span>, <span class="number">45</span>, <span class="number">93</span>, <span class="number">98</span>, <span class="number">10</span>, <span class="number">99</span>, <span class="number">78</span>, <span class="number">31</span>, <span class="number">35</span>, <span class="number">56</span>, <span class="number">18</span>, <span class="number">91</span>,</span><br><span class="line">         <span class="number">79</span>, <span class="number">23</span>, <span class="number">16</span>, <span class="number">55</span>, <span class="number">71</span>, <span class="number">53</span>, <span class="number">59</span>, <span class="number">75</span>, <span class="number">0</span>, <span class="number">58</span>, <span class="number">66</span>, <span class="number">11</span>, <span class="number">100</span>, <span class="number">81</span>, <span class="number">53</span>],</span><br><span class="line">        [<span class="number">68</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">62</span>, <span class="number">23</span>, <span class="number">74</span>, <span class="number">55</span>, <span class="number">11</span>, <span class="number">83</span>, <span class="number">64</span>, <span class="number">73</span>, <span class="number">57</span>, <span class="number">73</span>, <span class="number">45</span>, <span class="number">28</span>,</span><br><span class="line">         <span class="number">81</span>, <span class="number">40</span>, <span class="number">93</span>, <span class="number">78</span>, <span class="number">29</span>, <span class="number">97</span>, <span class="number">97</span>, <span class="number">36</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">70</span>, <span class="number">77</span>, <span class="number">65</span>, <span class="number">75</span>, <span class="number">31</span>],</span><br><span class="line">        [<span class="number">45</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">84</span>, <span class="number">72</span>, <span class="number">22</span>, <span class="number">47</span>, <span class="number">93</span>, <span class="number">46</span>, <span class="number">37</span>, <span class="number">85</span>, <span class="number">89</span>, <span class="number">32</span>, <span class="number">92</span>, <span class="number">59</span>,</span><br><span class="line">         <span class="number">93</span>, <span class="number">62</span>, <span class="number">12</span>, <span class="number">80</span>, <span class="number">21</span>, <span class="number">91</span>, <span class="number">80</span>, <span class="number">49</span>, <span class="number">35</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">68</span>, <span class="number">54</span>, <span class="number">17</span>, <span class="number">45</span>],</span><br><span class="line">        [<span class="number">21</span>, <span class="number">49</span>, <span class="number">13</span>, <span class="number">58</span>, <span class="number">100</span>, <span class="number">98</span>, <span class="number">56</span>, <span class="number">12</span>, <span class="number">74</span>, <span class="number">13</span>, <span class="number">87</span>, <span class="number">36</span>, <span class="number">48</span>, <span class="number">59</span>, <span class="number">55</span>,</span><br><span class="line">         <span class="number">71</span>, <span class="number">21</span>, <span class="number">70</span>, <span class="number">45</span>, <span class="number">38</span>, <span class="number">63</span>, <span class="number">91</span>, <span class="number">99</span>, <span class="number">100</span>, <span class="number">41</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">91</span>, <span class="number">13</span>, <span class="number">48</span>],</span><br><span class="line">        [<span class="number">69</span>, <span class="number">59</span>, <span class="number">58</span>, <span class="number">28</span>, <span class="number">25</span>, <span class="number">98</span>, <span class="number">54</span>, <span class="number">39</span>, <span class="number">75</span>, <span class="number">33</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">35</span>, <span class="number">43</span>, <span class="number">15</span>,</span><br><span class="line">         <span class="number">34</span>, <span class="number">90</span>, <span class="number">58</span>, <span class="number">62</span>, <span class="number">34</span>, <span class="number">11</span>, <span class="number">23</span>, <span class="number">41</span>, <span class="number">50</span>, <span class="number">81</span>, <span class="number">75</span>, <span class="number">83</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">54</span>],</span><br><span class="line">        [<span class="number">36</span>, <span class="number">44</span>, <span class="number">92</span>, <span class="number">14</span>, <span class="number">41</span>, <span class="number">100</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">89</span>, <span class="number">43</span>, <span class="number">30</span>, <span class="number">27</span>, <span class="number">65</span>, <span class="number">80</span>, <span class="number">65</span>,</span><br><span class="line">         <span class="number">81</span>, <span class="number">35</span>, <span class="number">90</span>, <span class="number">17</span>, <span class="number">75</span>, <span class="number">26</span>, <span class="number">89</span>, <span class="number">13</span>, <span class="number">63</span>, <span class="number">16</span>, <span class="number">35</span>, <span class="number">22</span>, <span class="number">86</span>, <span class="number">0</span>, <span class="number">19</span>],</span><br><span class="line">        [<span class="number">85</span>, <span class="number">23</span>, <span class="number">52</span>, <span class="number">95</span>, <span class="number">40</span>, <span class="number">77</span>, <span class="number">71</span>, <span class="number">81</span>, <span class="number">45</span>, <span class="number">66</span>, <span class="number">47</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">69</span>, <span class="number">11</span>,</span><br><span class="line">         <span class="number">22</span>, <span class="number">22</span>, <span class="number">86</span>, <span class="number">90</span>, <span class="number">35</span>, <span class="number">33</span>, <span class="number">12</span>, <span class="number">36</span>, <span class="number">51</span>, <span class="number">86</span>, <span class="number">43</span>, <span class="number">59</span>, <span class="number">65</span>, <span class="number">64</span>, <span class="number">0</span>]])</span><br></pre></td></tr></table></figure><script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 输入城市距离矩阵e1=>end: 算法结束, 得到结果op1=>operation: 随机初始化行走路径op2=>operation: 通过2变换法生成新路径op3=>operation: 接受新解op4=>operation: 改变温度参数cond1=>condition: 用Metropolis算法判断是否接受新解?cond2=>condition: 是否连续两次Mapkob链路径无变化?st->op1->op2->cond1cond1(yes)->op3cond1(no)->op4op3->op4->cond2cond2(yes)->e1cond2(no)->op1</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computational intelligence </tag>
            
            <tag> TSP </tag>
            
            <tag> SA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>face recognition lab report</title>
      <link href="/blog/2018/10/16/face-recognition-lab-report/"/>
      <url>/blog/2018/10/16/face-recognition-lab-report/</url>
      
        <content type="html"><![CDATA[<h2 id="问题分析">问题分析</h2><h3 id="问题描述">问题描述</h3><p>在给定的Yale人脸数据集上进行人脸识别. 输入一张待测试的人脸图片, 判断其属于数据库中哪个人的脸.</p><h3 id="数据集分析">数据集分析</h3><p>Yale人脸数据集中包含有165张<code>bmp</code>格式的黑白人脸图像, 图像大小为<code>100*100</code>像素, 这些图像分别属于15个人, 每人11张图像.</p><a id="more"></a><h2 id="现有方法">现有方法</h2><h3 id="传统方法">传统方法</h3><p>传统的方法是先对图像进行处理后, 对图像的特征进行提取, 然后用分类器对图像进行分类, 最后识别出图像的方法.</p><h4 id="特征提取">特征提取</h4><ul><li>弹性模版<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></li></ul><blockquote><p>为人脸建立属性拓扑图来表示人脸各器官之间的拓扑结构, 实际上是基于几何特征和对灰度分布信息进行小波纹理分析相结合的方法.</p></blockquote><p>该方法对初始参数要求高, 实现较复杂</p><ul><li>特征脸(PCA)<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></li></ul><blockquote><p>将图像由高维投影到低维形成特征矢量, 所有子空间的正交基被称为特征脸.</p></blockquote><p>该方法速度快, 但鲁棒性较差, 受表情、光强和视角的变化影响较大.</p><ul><li>尺度不变特征变换(SIFT)<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></li></ul><blockquote><p>在每个特征点周围的领域内, 在选定的尺度上测量图像的局部梯度, 计算梯度直方图生成具有独特性的向量.</p></blockquote><p>具有尺度不变性的优点, 并且抗遮挡. 缺点是计算量较大, 如果不借助硬件加速或专门的图像处理器很难实现.</p><ul><li>方向梯度直方图(HOG)<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></li></ul><blockquote><p>将图像分割成cell, 然后采集cell中各像素点梯度方向的直方图, 把直方图组合起来就可以构成图像特征.</p></blockquote><p>该方法对图像的颜色信息和光学变化具有不变性, 但对噪声比较敏感.</p><ul><li>局部二值模式(LBP)<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup></li></ul><blockquote><p>将某中心像素的灰度值和其相邻的8个像素作比较, 生成LBP码用来反映纹理信息.</p></blockquote><p>它具有旋转和灰度不变性的优点, 对方向信息比较敏感, 一般用于处理8位或16位的图片.</p><h4 id="分类器">分类器</h4><ul><li>最邻近分类器<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup></li></ul><blockquote><p>定义一个距离度量, 以测试样本最近的k个样本的主要类别作为测试样本的类别.</p></blockquote><ul><li>线性判别式分析(LDA)<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup></li></ul><blockquote><p>假设数据为均值不同、方差相同的高斯分布, 找出最优决策面.</p></blockquote><ul><li>逻辑回归(Logistic Regression)<sup id="fnref:8"><a href="#fn:8" rel="footnote">8</a></sup></li></ul><blockquote><p>假设后验概率为Logistics 分布, 根据贝叶斯理论计算某一类的概率.</p></blockquote><ul><li>支持向量机(SVM)<sup id="fnref:9"><a href="#fn:9" rel="footnote">9</a></sup></li></ul><blockquote><p>最小化类间的最大间隔得到最优决策面. 对数据分布的要求低, 适用性更广.</p></blockquote><h3 id="神经网络方法">神经网络方法</h3><p>神经网络方法需要大量的数据, 不符合本实验的条件.</p><h3 id="结论">结论</h3><p>综合以上分析, 我们最终选择了<code>HOG+SVM</code>的方法.</p><h2 id="实验过程">实验过程</h2><h3 id="编程语言介绍">编程语言介绍</h3><p>本实验所选择的编程语言为<code>Matlab</code>, 编程软件为<code>Matlab 2018b</code>.</p><h3 id="数据集预处理">数据集预处理</h3><p>对每个人选取1张作为测试样本, 其余10张作为训练样本. 因此最终的训练集包含150张图像, 测试集为15张.</p><h3 id="程序编写">程序编写</h3><h4 id="SVM构造15个二分类器">SVM构造15个二分类器</h4><p>构造15个分类器, 每一个分类器用10张作为正样本, 其余140张作为该分类器的负样本, 然后进行训练. 最终得到15个分类器, 用于分别识别是否为15个人的图像.</p><h4 id="HOG-SVM构造15个二分类器">HOG+SVM构造15个二分类器</h4><p>和之前的方法相同, 在图像被加入分类器中进行训练之前, 先将图像的大小转换为<code>256*256</code>, 然后提取出HOG特征, 重复上述实验.<br><code>extractHOGFeatures</code><sup id="fnref:10"><a href="#fn:10" rel="footnote">10</a></sup>是Matlab预先实现好的方法, 选取<code>cell</code>为<code>8*8</code>, <code>block</code>为<code>2*2</code>.<br>图一为<code>s1.bmp</code>和它的HOG特征图:</p><center><p><img src="https://onns.xyz/blog/image/20181017-1.jpg" alt="原图以及HOG特征图"></p><p>图1 原图以及HOG特征图</p></center><h4 id="HOG-SVM构造多分类器">HOG+SVM构造多分类器</h4><p>在训练图像开始之前, 将HOG特征图和特征图对应的标签(即对应的人脸的标号1-15)传入<code>fitcecoc</code><sup id="fnref:11"><a href="#fn:11" rel="footnote">11</a></sup>函数即可训练得到一个多标签的SVM, 对于给定的测试样例, 可以给出样例所对应的标签.</p><h2 id="实验结果">实验结果</h2><h3 id="实验过程说明">实验过程说明</h3><p>由于前一个实验方法并不能到达理想的100%准确率, 所以改变了不同的方法重新实现, 最终有三种不同的实验方法.<br>下述实验结果如无特殊说明, 都是按照<code>训练集10:测试集1</code>进行的实验, 实验结果为<code>1次</code>实验的结果.</p><h3 id="不同实验方法结果对比">不同实验方法结果对比</h3><center>表1 实验结果</center><table><thead><tr><th style="text-align:left">实验方法</th><th style="text-align:center">准确率</th><th style="text-align:center">程序运行时间</th></tr></thead><tbody><tr><td style="text-align:left">SVM</td><td style="text-align:center">93.333%</td><td style="text-align:center">27.485s</td></tr><tr><td style="text-align:left">SVM+HOG binary</td><td style="text-align:center">93.333%</td><td style="text-align:center"><font color="#ff0000">4.928s</font></td></tr><tr><td style="text-align:left">SVM+HOG</td><td style="text-align:center"><font color="#ff0000">100%</font></td><td style="text-align:center">11.556s</td></tr></tbody></table><p>实验结果如表1所示, 在准确率上, <code>SVM+HOG多分类</code>的方法在准确率上初步达到了<code>100%</code>, 但仍需要后续的多次实验证明; 在程序运行时间上, <code>SVM+HOG二分类</code>的方法耗时最少, 与第一种方法相对比, 提取的特征图较原图像相比, 更容易得到特征, 更容易训练, 与第三种方法相对比, 二分类器只需要判断<code>是或不是</code>的问题, 较<code>是哪个</code>这个问题来说相对简单, 故消耗时间最少.</p><h3 id="SVM-HOG多分类">SVM+HOG多分类</h3><p>一次实验的结果具有随机性, 故取<code>10次</code>实验的<code>平均值</code>并改变训练集与测试集的比例, 得到的结果如表2所示.</p><center>表2 10次随机实验结果平均值</center><table><thead><tr><th style="text-align:center">训练集:测试集</th><th style="text-align:center">准确率</th><th style="text-align:center">程序运行时间</th></tr></thead><tbody><tr><td style="text-align:center">10:1</td><td style="text-align:center">100.00%</td><td style="text-align:center">7.7176s</td></tr><tr><td style="text-align:center">9:2</td><td style="text-align:center">99.50%</td><td style="text-align:center">8.1220s</td></tr><tr><td style="text-align:center">8:3</td><td style="text-align:center">99.78%</td><td style="text-align:center">8.4686s</td></tr><tr><td style="text-align:center">7:4</td><td style="text-align:center">99.50%</td><td style="text-align:center">9.2287s</td></tr><tr><td style="text-align:center">6:5</td><td style="text-align:center">95.73%</td><td style="text-align:center">9.7408s</td></tr></tbody></table><h3 id="实验结果分析">实验结果分析</h3><p><code>SVM分类</code>方法训练的分类器未能识别的图像都是单侧光照下的图像, 故后续改进时增加了对<code>光照不敏感</code>的HOG特性来进行训练; <code>HOG+SVM二分类</code>方法存在着<code>样本不对称</code>的问题, 也未能达到理想的实验效果; <code>SVM+HOG多分类器</code>方法在<code>对光照不敏感</code>的同时, 也不存在<code>样本不对称</code>的问题, 最终达到了预期的实验结果, 即<code>100%</code>的准确率.</p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;"><a href="http://www.arocmag.com/getarticle/?aid=8d1cc55eca76ad42" target="_blank" rel="noopener">人脸识别研究综述</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;"><a href="https://blog.csdn.net/liulina603/article/details/7925170" target="_blank" rel="noopener">人脸识别主要算法原理</a></span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;"><a href="https://www.zhihu.com/question/45833619" target="_blank" rel="noopener">Scale-Invariant Feature Taransform</a></span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline-block; vertical-align: top;"><a href="https://www.zhihu.com/question/45833619" target="_blank" rel="noopener">Histogram of Oriented Gradient</a></span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline-block; vertical-align: top;"><a href="https://www.zhihu.com/question/45833619" target="_blank" rel="noopener">Local Binary Pattern</a></span><a href="#fnref:5" rev="footnote"> ↩</a></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">6.</span><span style="display: inline-block; vertical-align: top;"><a href="https://blog.csdn.net/u013146742/article/details/52356560" target="_blank" rel="noopener">最邻近分类器</a></span><a href="#fnref:6" rev="footnote"> ↩</a></li><li id="fn:7"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">7.</span><span style="display: inline-block; vertical-align: top;"><a href="https://blog.csdn.net/u013146742/article/details/52356560" target="_blank" rel="noopener">Linear Discriminant Analysis</a></span><a href="#fnref:7" rev="footnote"> ↩</a></li><li id="fn:8"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">8.</span><span style="display: inline-block; vertical-align: top;"><a href="https://blog.csdn.net/liulina603/article/details/78676723" target="_blank" rel="noopener">Logistic Regression</a></span><a href="#fnref:8" rev="footnote"> ↩</a></li><li id="fn:9"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">9.</span><span style="display: inline-block; vertical-align: top;"><a href="https://blog.csdn.net/liugan528/article/details/79448379" target="_blank" rel="noopener">Support Vector Machine</a></span><a href="#fnref:9" rev="footnote"> ↩</a></li><li id="fn:10"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">10.</span><span style="display: inline-block; vertical-align: top;"><a href="http://ww2.mathworks.cn/help/vision/ref/extracthogfeatures.html" target="_blank" rel="noopener">Extract histogram of oriented gradients (HOG) features</a></span><a href="#fnref:10" rev="footnote"> ↩</a></li><li id="fn:11"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">11.</span><span style="display: inline-block; vertical-align: top;"><a href="https://www.mathworks.com/help/stats/fitcecoc.html" target="_blank" rel="noopener">Fit multiclass models for support vector machines or other classifierscollapse</a></span><a href="#fnref:11" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer vision </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bim预览</title>
      <link href="/blog/2018/10/04/bim-preview/"/>
      <url>/blog/2018/10/04/bim-preview/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><a id="more"></a><center><p><canvas id="viewer" width="640" height="360"></canvas></p></center><script src="//docs.xbim.net/XbimWebUI/scripts/xbim-viewer.debug.bundle.js"></script><script type="text/javascript">    var canvas = document.getElementById('viewer');    var viewer = new xViewer('viewer');    viewer.load('//onns.xyz/attachment/m6.wexbim');    viewer.start();</script>]]></content>
      
      
      <categories>
          
          <category> bim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bim </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo插件整理</title>
      <link href="/blog/2018/10/03/hexo-plugin-list/"/>
      <url>/blog/2018/10/03/hexo-plugin-list/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><p>hexo有很多很好用的插件, 可以优化写博客的体验, 尤其是对于一些数学公示或图表的渲染.</p><a id="more"></a><h2 id="公式">公式</h2><p>网上的关于数学公式渲染的解决方案基本都是换了hexo的默认markdown解析工具, 我不是很想这样修改, 还是想采用插件的方法.<br><a href="https://github.com/hexojs/hexo-math" target="_blank" rel="noopener">hexo-math</a>是一个渲染数学公式的插件, 虽然从github上的评论来看, 在很多情况下都存在不能渲染的问题, 不过按照下面的配置, 应该可以成功实现数学公式的渲染, 先看一下效果.</p><h3 id="效果">效果</h3><span>$$\begin{aligned}\dot{x} &amp; = \sigma(y-x) \\\dot{y} &amp; = \rho x - y - xz \\\dot{z} &amp; = -\beta z + xy\end{aligned}$$</span><!-- Has MathJax --><h3 id="配置">配置</h3><p>首先通过npm安装<code>hexo-math</code>, 不知道为什么要连续执行两次才能执行成功.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-math --save</span><br><span class="line">npm install hexo-math --save</span><br></pre></td></tr></table></figure><p>修改网站根目录的<code>_config.yml</code>, 添加如下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">math:</span><br><span class="line">  engine: &apos;mathjax&apos; # or &apos;katex&apos;</span><br><span class="line">  mathjax:</span><br><span class="line">    src: &quot;//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;</span><br><span class="line">    config:</span><br><span class="line">      # MathJax config</span><br></pre></td></tr></table></figure><h3 id="用法">用法</h3><p>由于正常markdown的<code>$$...$$</code>等写法会和hexo的解析方法产生冲突, 改成如下的写法即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% math %&#125;</span><br><span class="line">\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class="line">n &amp; \text&#123;Left&#125; &amp; \text&#123;Center&#125; &amp; \text&#123;Right&#125; \\</span><br><span class="line">\hline</span><br><span class="line">1 &amp; 0.24 &amp; 1 &amp; 125 \\</span><br><span class="line">2 &amp; -1 &amp; 189 &amp; -8 \\</span><br><span class="line">3 &amp; -20 &amp; 2000 &amp; 1+10i</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">&#123;% endmath %&#125;</span><br></pre></td></tr></table></figure><p>显示结果如下:</p><span>$$\begin{array}{c|lcr}n &amp; \text{Left} &amp; \text{Center} &amp; \text{Right} \\\hline1 &amp; 0.24 &amp; 1 &amp; 125 \\2 &amp; -1 &amp; 189 &amp; -8 \\3 &amp; -20 &amp; 2000 &amp; 1+10i\end{array}$$</span><!-- Has MathJax -->]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常用命令整理</title>
      <link href="/blog/2018/10/03/linux-command-list/"/>
      <url>/blog/2018/10/03/linux-command-list/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><a id="more"></a><h2 id="bash">bash</h2><ul><li>Centos7防火墙开启或关闭某个端口:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport &lt;port&gt; -j ACCEPT</span><br><span class="line">iptables -I INPUT -p tcp --dport &lt;port&gt; -j REJECT</span><br></pre></td></tr></table></figure><h2 id="git">git</h2><ul><li>git回退到某一个版本, 即删除commit记录:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;commit_id&gt;</span><br><span class="line">git push -f -u origin &lt;branch&gt;</span><br></pre></td></tr></table></figure><ul><li>git新建一个新的空分支:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout --orphan &lt;branch&gt;</span><br><span class="line">git rm -rf .</span><br></pre></td></tr></table></figure><h2 id="python">python</h2><ul><li>去掉字符串两边的空格:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.strip()</span><br></pre></td></tr></table></figure><ul><li>大小写转换:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 小写字母转换成大写字母</span></span><br><span class="line">string.upper()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 大写字母转换成小写字母</span></span><br><span class="line">string.lower()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开头字母大写</span></span><br><span class="line">string.capitalize()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有首字母大写</span></span><br><span class="line">string.title()</span><br></pre></td></tr></table></figure><h2 id="selenium">selenium</h2>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Computational Intelligence Homework No.1</title>
      <link href="/blog/2018/09/29/2018-computational-intelligence-homework-no.1/"/>
      <url>/blog/2018/09/29/2018-computational-intelligence-homework-no.1/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p>小孩分油问题：两个小孩去打油，一人带了一个一斤的空瓶，另一个带了一个七两、一个三两的空瓶。原计划各打一斤油，可是由于所带的钱不够，只好两人合打了一斤油，在回家的路上，两人想平分这一斤油，可是又没有其它工具。试仅用三个瓶子(一斤、七两、三两)精确地分出两个半斤油来。</p><a id="more"></a><h2 id="算法设计">算法设计</h2><h3 id="选择合适的数据结构表示问题状态">选择合适的数据结构表示问题状态</h3><p>用向量<code>(T, S, Q)</code>表示状态, <code>E</code>表示10斤瓶中的油量, <code>S</code>表示7斤瓶中的油量, <code>Q</code>表示3斤瓶中的油量.</p><p>问题的起始状态: <font color="#FF0000">(10, 0, 0)</font></p><p>问题的目标状态: <font color="#FF0000">(5, 5, 0)</font></p><h3 id="确定智能算子，用以变化状态的规则">确定智能算子，用以变化状态的规则</h3><center id="rulelist">规则表</center><table><thead><tr><th style="text-align:left">规则号</th><th style="text-align:left">规则</th><th style="text-align:left">解释</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">(T, S, Q) and S&lt;7 and T+S≥7 → (T+S-7, 7, Q)</td><td style="text-align:left">用10斤瓶油装满7斤瓶</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">(T, S, Q) and Q&lt;3 and T+Q≥3 → (T+Q-3, S, 3)</td><td style="text-align:left">用10斤瓶油装满3斤瓶</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">(T, S, Q) and T&lt;10 and T+S≥10 → (10, T+S-10, Q)</td><td style="text-align:left">用7斤瓶油装满10斤瓶</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">(T, S, Q) and Q&lt;3 and S+Q≥3 → (T, S+Q-3, 3)</td><td style="text-align:left">用7斤瓶油装满3斤瓶</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">(T, S, Q) and T&lt;10 and T+Q≥10 → (10, S, T+Q-10)</td><td style="text-align:left">用3斤瓶油装满10斤瓶</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">(T, S, Q) and S&lt;7 and S+Q≥7 → (T, 7, S+Q-7)</td><td style="text-align:left">用3斤瓶油装满7斤瓶</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">(T, S, Q) and T&gt;0 and T+S≤7 → (0, T+S, Q)</td><td style="text-align:left">10斤瓶油全部倒入7斤瓶</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">(T, S, Q) and T&gt;0 and T+Q≤3 → (0, S, T+Q)</td><td style="text-align:left">10斤瓶油全部倒入3斤瓶</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">(T, S, Q) and S&gt;0 and T+S≤10 → (T+S, 0, Q)</td><td style="text-align:left">7斤瓶油全部倒入10斤瓶</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">(T, S, Q) and S&gt;0 and S+Q≤3 → (T, 0, S+Q)</td><td style="text-align:left">7斤瓶油全部倒入3斤瓶</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">(T, S, Q) and Q&gt;0 and T+Q≤10 → (T+Q, S, 0)</td><td style="text-align:left">3斤瓶油全部倒入10斤瓶</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">(T, S, Q) and Q&gt;0 and S+Q≤7 → (T, S+Q, 0)</td><td style="text-align:left">3斤瓶油全部倒入7斤瓶</td></tr></tbody></table><h3 id="确定搜索方法">确定搜索方法</h3><p>最基本的搜索方法为<code>深度优先搜索</code>和<code>广度优先搜索</code>, 考虑到本题目存在着无限深度的情况, 故选用<code>广度优先搜索</code>方法来实现.</p><h2 id="程序流程">程序流程</h2><p>大体的程序流程如图1所示</p><center><div id="flowchart-0" class="flow-chart"></div>图1 程序流程图</center><h2 id="核心伪代码">核心伪代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="comment">//取出当前队列的头部节点</span></span><br><span class="line">  currNode = list.shift();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//队列为空, 搜索失败</span></span><br><span class="line">  <span class="keyword">if</span>(currNode == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//判断是否为目标状态</span></span><br><span class="line">  <span class="keyword">if</span>(checkNode(currNode)) &#123;</span><br><span class="line">    printPath(currNode);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//将所有可能的下一步状态加入队列尾部</span></span><br><span class="line">  pour(currNode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码运行及测试">代码运行及测试</h2><p>代码运行结果如图2所示, 由于并未对状态进行优化, 首次出现的目标状态在<code>第十层</code>, 有<code>190221 </code>个重复状态, 严重影响了运算速度.</p><center><p><img src="https://onns.xyz/blog/image/20180930-1.png" alt="代码运行结果图"></p><p>图2 代码运行结果图</p></center><p>改进方法是在对目标状态进行搜索的过程中, 对于那些在之前存在过的状态进行剔除, 只保留新状态, 改进后的代码运行结果如图3所示.</p><center><p><img src="https://onns.xyz/blog/image/20180930-2.png" alt="改进后代码运行结果图"></p><p>图3 改进后代码运行结果图</p></center><h2 id="结论">结论</h2><p>从<font color="#FF0000">(10, 0, 0)</font>到<font color="#FF0000">(5, 5, 0)</font>的分油方法为:</p><ul><li>用10斤瓶油装满7斤瓶 (10, 0, 0) -&gt; (3, 7, 0)</li><li>用7斤瓶油装满3斤瓶 (3, 7, 0) -&gt; (3, 4, 3)</li><li>3斤瓶油全部倒入10斤瓶 (3, 4, 3) -&gt; (6, 4, 0)</li><li>用7斤瓶油装满3斤瓶 (6, 4, 0) -&gt; (6, 1, 3)</li><li>3斤瓶油全部倒入10斤瓶 (6, 1, 3) -&gt; (9, 1, 0)</li><li>7斤瓶油全部倒入3斤瓶 (9, 1, 0) -&gt; (9, 0, 1)</li><li>用10斤瓶油装满7斤瓶 (9, 0, 1) -&gt; (2, 7, 1)</li><li>用7斤瓶油装满3斤瓶 (2, 7, 1) -&gt; (2, 5, 3)</li><li>3斤瓶油全部倒入10斤瓶 (2, 5, 3) -&gt; (5, 5, 0)</li></ul><p>如图4所示红色箭头即为分油方法.</p><center><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">digraph G &#123;</span><br><span class="line">  &quot;(10,0,0)&quot; -&gt; &quot;(3,7,0)&quot;[color=red,label=&quot;1&quot;]</span><br><span class="line">  &quot;(10,0,0)&quot; -&gt; &quot;(7,0,3)&quot;[label=&quot;2&quot;]</span><br><span class="line">  &quot;(3,7,0)&quot; -&gt; &quot;(0,7,3)&quot;[label=&quot;2&quot;]</span><br><span class="line">  &quot;(3,7,0)&quot; -&gt; &quot;(3,4,3)&quot;[color=red,label=&quot;4&quot;]</span><br><span class="line">  &quot;(7,0,3)&quot; -&gt; &quot;(7,3,0)&quot;[label=&quot;12&quot;]</span><br><span class="line">  &quot;(3,4,3)&quot; -&gt; &quot;(6,4,0)&quot;[color=red,label=&quot;11&quot;]</span><br><span class="line">  &quot;(7,3,0)&quot; -&gt; &quot;(4,3,3)&quot;[label=&quot;2&quot;]</span><br><span class="line">  &quot;(6,4,0)&quot; -&gt; &quot;(6,1,3)&quot;[color=red,label=&quot;4&quot;]</span><br><span class="line">  &quot;(4,3,3)&quot; -&gt; &quot;(4,6,0)&quot;[label=&quot;12&quot;]</span><br><span class="line">  &quot;(6,1,3)&quot; -&gt; &quot;(9,1,0)&quot;[color=red,label=&quot;11&quot;]</span><br><span class="line">  &quot;(4,6,0)&quot; -&gt; &quot;(1,6,3)&quot;[label=&quot;2&quot;]</span><br><span class="line">  &quot;(9,1,0)&quot; -&gt; &quot;(9,0,1)&quot;[color=red,label=&quot;10&quot;]</span><br><span class="line">  &quot;(1,6,3)&quot; -&gt; &quot;(1,7,2)&quot;[label=&quot;6&quot;]</span><br><span class="line">  &quot;(9,0,1)&quot; -&gt; &quot;(2,7,1)&quot;[color=red,label=&quot;1&quot;]</span><br><span class="line">  &quot;(1,7,2)&quot; -&gt; &quot;(8,0,2)&quot;[label=&quot;9&quot;]</span><br><span class="line">  &quot;(2,7,1)&quot; -&gt; &quot;(2,5,3)&quot;[color=red,label=&quot;4&quot;]</span><br><span class="line">  &quot;(8,0,2)&quot; -&gt; &quot;(8,2,0)&quot;[label=&quot;12&quot;]</span><br><span class="line">  &quot;(2,5,3)&quot; -&gt; &quot;(5,5,0)&quot;[color=red,label=&quot;11&quot;]</span><br><span class="line">  &quot;(8,2,0)&quot; -&gt; &quot;(5,2,3)&quot;[label=&quot;2&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>图4 分油方法示意图</p></center><p><a href="#rulelist">注:箭头上方数字即为规则号</a></p><script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 确定初始状态(10, 0, 0), 加入队列e1=>end: 未找到目标状态e2=>end: 达到目标状态(5, 5, 0)op1=>operation: 取出队列头部中的第一个状态cond1=>condition: 此状态是否为空?cond2=>condition: 是否为目标状态?op2=>operation: 将所有可能下一步状态加入队列尾部st->op1->cond1cond1(yes)->e1cond1(no)->cond2cond2(yes)->e2cond2(no)->op2op2->op1</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computational intelligence </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql拼接字符串搜索</title>
      <link href="/blog/2018/04/03/mysql-string-search/"/>
      <url>/blog/2018/04/03/mysql-string-search/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p>在mysql的表中某一个键值是由<code>,</code>分隔的多个<code>id</code>组成的字符串, 例如: <code>1,2,3,4,5,6,7,8</code>.<br>现在需要搜索所有拥有<code>id</code>为<code>3</code>的行, 例如: <code>1,2,3,4</code>, <code>1,2,3</code>, <code>3,4,5,6</code>.</p><a id="more"></a><h3 id="方法一">方法一</h3><p>这是我自己想到的最笨的方法, 就是将数据都取出之后再查找, 效率肯定很低.<br>不推荐.</p><h3 id="方法二">方法二</h3><p>用模糊搜索, 但是假如匹配<code>id</code>为<code>3</code>的字段, 也同时会匹配<code>id</code>为<code>31</code>或<code>13</code>的字段.<br>解决方案是将字符串头尾添加<code>,</code>, 这样匹配<code>,3,</code>即可.只是不够优雅.<br>不推荐.</p><h3 id="方法三">方法三</h3><p>mysql提供了内置的函数<code>FIND_IN_SET(str,strlist)</code>,<br>只需<code>find_in_set('3', user_id_list)</code>即可.<br>推荐.</p><p>谢谢群里的大神.</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>乌班图下使用shadowsocksr客户端</title>
      <link href="/blog/2018/04/02/ubuntu-client-setup/"/>
      <url>/blog/2018/04/02/ubuntu-client-setup/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>新配置的电脑需要下载Google的插件和Google的搜索功能, 所以要配置代理. 记录一下.</p><a id="more"></a><h3 id="安装git">安装git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git -y</span><br></pre></td></tr></table></figure><h3 id="获取shadowsocksr">获取shadowsocksr</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b manyuser https://github.com/shadowsocksr-backup/shadowsocksr.git</span><br><span class="line"><span class="built_in">cd</span> shadowsocksr/shadowsocks</span><br></pre></td></tr></table></figure><h3 id="创建配置文件">创建配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="attr">"server_ipv6"</span>: <span class="string">"::"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">8000</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"password"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"udp_timeout"</span>: <span class="number">60</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"auth_aes128_md5"</span>,</span><br><span class="line">    <span class="attr">"protocol_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"obfs"</span>:<span class="string">"http_simple"</span>,</span><br><span class="line">    <span class="attr">"obfs_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"workers"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行">运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python local.py -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure><h3 id="说明">说明</h3><p>此时代理已经运行在了127.0.0.1:1080, 将需要代理的网址代理到此端口即可.</p><h2 id="附录">附录</h2><h3 id="Chrome插件推荐">Chrome插件推荐</h3><h4 id="SwitchyOmega"><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=en" target="_blank" rel="noopener">SwitchyOmega</a></h4><p>chrome中通过SwitchyOmega可以将访问的网址代理到前面的shadowsocksr客户端访问.<br>代理设置:<br>协议 <code>SOCKS5</code><br>服务器 <code>127.0.0.1</code><br>端口 <code>1080</code></p><p>也可以根据地址选择自动切换代理.<br>代理设置:<br>路由列表格式 <code>AutoProxy</code><br>路由列表地址 <code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code></p><p>应用即可.</p><h4 id="Google-Input-Tools"><a href="https://chrome.google.com/webstore/detail/google-input-tools/mclkkofklkfljcocdinagocijmpgbhab?hl=en" target="_blank" rel="noopener">Google Input Tools</a></h4><p>chrome中可以使用的输入法, 支持多种语言和个人词库.</p><h2 id="参考链接">参考链接</h2><ul><li><a href="https://github.com/shadowsocksr-backup/shadowsocks-rss/wiki" target="_blank" rel="noopener">Python client setup (Mult language)</a></li><li><a href="https://www.switchyomega.com/settings.html" target="_blank" rel="noopener">配置 - SwitchyOmega - 轻松快捷地管理和切换多个代理设置</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> shadowsocksr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器文档</title>
      <link href="/blog/2018/01/30/server-document/"/>
      <url>/blog/2018/01/30/server-document/</url>
      
        <content type="html"><![CDATA[<h2 id="环境依赖">环境依赖</h2><ul><li>Centos/7.x.x</li><li>nginx/1.12.2</li><li>PHP/7.1.x、php-fpm/7.1.x</li><li>mysql/5.7.x</li><li>unoconv/0.8.x</li></ul><a id="more"></a><h2 id="系统启动流程">系统启动流程</h2><ol><li>打开nginx服务器 <code>nginx</code></li><li>开启php服务 <code>service php-fpm start</code></li><li>开启mysql服务 <code>service mysqld start</code></li><li>关闭selinux防火墙 <code>setenforce 0</code></li><li>开启iptables对相应端口的屏蔽 <code>iptables -I INPUT -p tcp --dport </code><font color="#ff0000"><code>10080</code></font><code> -j ACCEPT</code></li><li>开启unoconv监听器并后台运行 <code>nohup unoconv --listener &amp;</code></li></ol><h2 id="相关配置文件">相关配置文件</h2><ol><li>nginx配置文件目录 <code>/etc/nginx/nginx.conf</code></li><li>php配置文件目录 <code>/etc/php.ini</code></li><li>系统文件目录 <code>/usr/share/nginx/longjing/</code></li><li>上传文件目录 <code>/usr/share/nginx/longjing/upload/</code></li><li>导出表文件目录 <code>/usr/share/nginx/longjing/application/index/file/</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> longking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 movie list</title>
      <link href="/blog/2018/01/01/2018-movie-list/"/>
      <url>/blog/2018/01/01/2018-movie-list/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面">写在前面</h3><a id="more"></a><h3 id="一月">一月</h3><ul><li>2017-01-03 <a href="https://movie.douban.com/subject/26580232/" target="_blank" rel="noopener">《看不见的客人》</a></li><li>2017-01-11 <a href="https://movie.douban.com/subject/22266126/" target="_blank" rel="noopener">《王牌保镖》</a></li><li>2017-01-12 <a href="https://movie.douban.com/subject/1578714/" target="_blank" rel="noopener">《神奇女侠》</a></li><li>2017-01-15 <a href="https://movie.douban.com/subject/10512661/" target="_blank" rel="noopener">《银翼杀手2049》</a></li><li>2017-01-17 <a href="https://movie.douban.com/subject/1292720/" target="_blank" rel="noopener">《阿甘正传》</a></li><li>2017-01-30 <a href="https://movie.douban.com/subject/3205624/" target="_blank" rel="noopener">《社交网络》</a></li></ul><h3 id="二月">二月</h3><ul><li>2017-02-02 <a href="https://movie.douban.com/subject/1851857/" target="_blank" rel="noopener">《蝙蝠侠：黑暗骑士》</a></li><li>2017-02-20 <a href="https://movie.douban.com/subject/26861685/" target="_blank" rel="noopener">《红海行动》</a></li><li>2017-02-21 <a href="https://movie.douban.com/subject/3442220/" target="_blank" rel="noopener">《海豚湾》</a></li><li>2017-02-22 <a href="https://movie.douban.com/subject/1309046/" target="_blank" rel="noopener">《V字仇杀队》</a></li><li>2017-02-24 <a href="https://movie.douban.com/subject/26698897/" target="_blank" rel="noopener">《唐人街探案2》</a></li><li>2017-02-26 <a href="https://movie.douban.com/subject/26311973/" target="_blank" rel="noopener">《唐人街探案》</a></li><li>2017-02-27 <a href="https://movie.douban.com/subject/26942674/" target="_blank" rel="noopener">《神秘巨星》</a></li></ul><h3 id="三月">三月</h3><ul><li>2017-03-01 <a href="https://movie.douban.com/subject/2158490/" target="_blank" rel="noopener">《正义联盟》</a></li><li>2017-03-06 <a href="https://movie.douban.com/subject/26662193/" target="_blank" rel="noopener">《前任3：再见前任》</a></li><li>2017-03-09 <a href="https://movie.douban.com/subject/6390825/" target="_blank" rel="noopener">《黑豹》</a></li><li>2017-03-09 <a href="https://movie.douban.com/subject/26611804/" target="_blank" rel="noopener">《三块广告牌》</a></li><li>2017-03-12 <a href="https://movie.douban.com/subject/21324900/" target="_blank" rel="noopener">《降临》</a></li><li>2017-03-13 <a href="https://movie.douban.com/subject/1900841/" target="_blank" rel="noopener">《窃听风暴》</a></li><li>2017-03-16 <a href="https://movie.douban.com/subject/26752852/" target="_blank" rel="noopener">《水形物语》</a></li><li>2017-03-18 <a href="https://movie.douban.com/subject/1760622/" target="_blank" rel="noopener">《香水》</a></li><li>2017-03-20 <a href="https://movie.douban.com/subject/1472510/" target="_blank" rel="noopener">《与女人们的对话》</a><blockquote><p>如果那个心脏病医生, 觉得你又老又衰, 而且很丑一点都不可爱了, 我愿意陪你走完最后的人生.</p></blockquote></li><li>2017-03-21 <a href="https://movie.douban.com/subject/1296821/" target="_blank" rel="noopener">《总有骄阳》</a></li><li>2017-03-23 <a href="https://movie.douban.com/subject/27042405/" target="_blank" rel="noopener">《大坏狐狸的故事》</a></li><li>2017-03-26 <a href="https://movie.douban.com/subject/26764928/" target="_blank" rel="noopener">《脸庞，村庄》</a></li><li>2017-03-27 <a href="https://movie.douban.com/subject/3530403/" target="_blank" rel="noopener">《云图》</a></li><li>2017-03-29 <a href="https://movie.douban.com/subject/4920389/" target="_blank" rel="noopener">《头号玩家》</a></li></ul><h3 id="四月">四月</h3><ul><li>2017-04-04 <a href="https://movie.douban.com/subject/3364223/" target="_blank" rel="noopener">《了不起的盖茨比》</a></li><li>2017-04-06 <a href="https://movie.douban.com/subject/26353372/" target="_blank" rel="noopener">《夜行动物》</a></li><li>2017-04-14 <a href="https://movie.douban.com/subject/26393561/" target="_blank" rel="noopener">《小萝莉的猴神大叔》</a></li></ul><h3 id="五月">五月</h3><ul><li>2017-05-31 <a href="https://movie.douban.com/subject/6874741/" target="_blank" rel="noopener">《无问西东》</a></li></ul><h3 id="六月">六月</h3><ul><li>2017-06-01 <a href="https://movie.douban.com/subject/27069070/" target="_blank" rel="noopener">《哆啦A梦：大雄的金银岛》</a></li><li>2017-06-29 <a href="https://movie.douban.com/subject/26925317/" target="_blank" rel="noopener">《动物世界》</a></li></ul><h3 id="七月">七月</h3><ul><li>2017-07-13 <a href="https://movie.douban.com/subject/1292780/" target="_blank" rel="noopener">《时光倒流七十年》</a></li><li>2017-07-17 <a href="https://movie.douban.com/subject/3742360/" target="_blank" rel="noopener">《让子弹飞》</a></li><li>2017-07-21 <a href="https://movie.douban.com/subject/1292656/" target="_blank" rel="noopener">《心灵捕手》</a></li></ul><h3 id="八月">八月</h3><ul><li>2017-08-09 <a href="https://movie.douban.com/subject/1291841/" target="_blank" rel="noopener">《教父》</a></li><li>2017-08-10 <a href="https://movie.douban.com/subject/1299131/" target="_blank" rel="noopener">《教父2》</a></li><li>2017-08-13 <a href="https://movie.douban.com/subject/1291571/" target="_blank" rel="noopener">《指环王1：魔戒再现》</a></li><li>2017-08-18 <a href="https://movie.douban.com/subject/1291572/" target="_blank" rel="noopener">《指环王2：双塔奇兵》</a></li><li>2017-08-19 <a href="https://movie.douban.com/subject/1291552/" target="_blank" rel="noopener">《指环王3：王者无敌》</a></li><li>2017-08-21 <a href="https://movie.douban.com/subject/1291999/" target="_blank" rel="noopener">《重庆森林》</a></li><li>2017-08-23 <a href="https://movie.douban.com/subject/1295124/" target="_blank" rel="noopener">《辛德勒的名单》</a></li><li>2017-08-24 <a href="https://movie.douban.com/subject/1291549/" target="_blank" rel="noopener">《放牛班的春天》</a></li><li>2017-08-27 <a href="https://movie.douban.com/subject/1292063/" target="_blank" rel="noopener">《美丽人生》</a></li><li>2017-08-28 <a href="https://movie.douban.com/subject/1889243/" target="_blank" rel="noopener">《星际穿越》</a></li><li>2017-08-29 <a href="https://movie.douban.com/subject/1293182/" target="_blank" rel="noopener">《十二怒汉》</a></li><li>2017-08-31 <a href="https://movie.douban.com/subject/25839662/" target="_blank" rel="noopener">《45周年》</a></li></ul><h3 id="九月">九月</h3><ul><li>2017-09-01 <a href="https://movie.douban.com/subject/26336252/" target="_blank" rel="noopener">《碟中谍6：全面瓦解》</a></li><li>2017-09-04 <a href="https://movie.douban.com/subject/10727641/" target="_blank" rel="noopener">《碟中谍5：神秘国度》</a></li><li>2017-09-04 <a href="https://movie.douban.com/subject/3068206/" target="_blank" rel="noopener">《碟中谍4》</a></li><li>2017-09-04 <a href="https://movie.douban.com/subject/26416603/" target="_blank" rel="noopener">《萨利机长》</a></li><li>2017-09-06 <a href="https://movie.douban.com/subject/25814705/" target="_blank" rel="noopener">《小森林 夏秋篇》</a></li><li>2017-09-06 <a href="https://movie.douban.com/subject/25814707/" target="_blank" rel="noopener">《小森林 冬春篇》</a></li><li>2017-09-07 <a href="https://movie.douban.com/subject/26874505/" target="_blank" rel="noopener">《人生果实》</a></li><li>2017-09-12 <a href="https://movie.douban.com/subject/1937401/" target="_blank" rel="noopener">《K歌情人》</a></li><li>2017-09-21 <a href="https://movie.douban.com/subject/27605698/" target="_blank" rel="noopener">《西虹市首富》</a></li><li>2017-09-22 <a href="https://movie.douban.com/subject/26806099/" target="_blank" rel="noopener">《爱猫之城》</a></li><li>2017-09-24 <a href="https://movie.douban.com/subject/1294639/" target="_blank" rel="noopener">《勇敢的心》</a></li><li>2017-09-28 <a href="https://movie.douban.com/subject/27133303/" target="_blank" rel="noopener">《超时空同居》</a></li></ul><h3 id="十月">十月</h3><h3 id="待看">待看</h3><ul><li>《绿里奇迹》</li><li>《了不起的盖茨比》</li><li><a href="https://movie.douban.com/subject/1305725/" target="_blank" rel="noopener">《大卫·戈尔的一生》</a></li><li><a href="https://movie.douban.com/subject/2369845/" target="_blank" rel="noopener">《嫌疑人X的献身》</a></li><li>《王牌特工2: 黄金圈》</li><li>《刺猬的优雅》</li><li><a href="https://movie.douban.com/subject/26356789/" target="_blank" rel="noopener">《心房客》</a></li><li><a href="https://movie.douban.com/subject/20514947/" target="_blank" rel="noopener">《龙虾》</a></li><li><a href="https://movie.douban.com/subject/2053515/" target="_blank" rel="noopener">《曾经》</a><blockquote><p>I paid the cost too late, Now you’re gone.</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2017 movie list</title>
      <link href="/blog/2017/10/30/2017-movie-list/"/>
      <url>/blog/2017/10/30/2017-movie-list/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面">写在前面</h3><p>好看的电影好多, 截图放到手机里怕丢, 写下来.<br>定期更新.</p><a id="more"></a><h3 id="一月">一月</h3><ul><li>2017-01-01 <a href="https://movie.douban.com/subject/25894431/" target="_blank" rel="noopener">《星球大战外传: 侠盗一号》</a></li><li>2017-01-07 <a href="https://movie.douban.com/subject/1309196/" target="_blank" rel="noopener">《婚礼傲客》</a></li><li>2017-01-08 <a href="https://movie.douban.com/subject/25815034/" target="_blank" rel="noopener">《湄公河行动》</a></li></ul><h3 id="二月">二月</h3><ul><li>2017-02-02 <a href="https://movie.douban.com/subject/26182910/" target="_blank" rel="noopener">《功夫瑜伽》</a></li><li>2017-02-06 <a href="https://movie.douban.com/subject/26862259/" target="_blank" rel="noopener">《乘风破浪》</a></li><li>2017-02-09 <a href="https://movie.douban.com/subject/1309163/" target="_blank" rel="noopener">《恋恋笔记本》</a></li><li>2017-02-15 <a href="https://movie.douban.com/subject/25934014/" target="_blank" rel="noopener">《爱乐之城》</a></li></ul><h3 id="三月">三月</h3><ul><li>2017-03-09 <a href="https://movie.douban.com/subject/26235839/" target="_blank" rel="noopener">《内在美》</a></li><li>2017-03-10 <a href="https://movie.douban.com/subject/25980443/" target="_blank" rel="noopener">《海边的曼彻斯特》</a></li><li>2017-03-11 <a href="https://movie.douban.com/subject/2974278/" target="_blank" rel="noopener">《蓝色情人节》</a></li><li>2017-03-16 <a href="https://movie.douban.com/subject/5360889/" target="_blank" rel="noopener">《月升王国》</a></li><li>2017-03-22 <a href="https://movie.douban.com/subject/1300992/" target="_blank" rel="noopener">《完美的世界》</a></li><li>2017-03-28 <a href="https://movie.douban.com/subject/1340517/" target="_blank" rel="noopener">《初吻》</a></li><li>2017-03-29 <a href="https://movie.douban.com/subject/3550132/" target="_blank" rel="noopener">《非常主播》</a></li></ul><h3 id="四月">四月</h3><ul><li>2017-04-12 <a href="https://movie.douban.com/subject/26599076/" target="_blank" rel="noopener">《四月是你的谎言》</a></li><li>2017-04-14 <a href="https://movie.douban.com/subject/26260853/" target="_blank" rel="noopener">《速度与激情8》</a></li><li>2017-04-23 <a href="https://movie.douban.com/subject/10777687/" target="_blank" rel="noopener">《7号房的礼物》</a></li></ul><h3 id="五月">五月</h3><ul><li>2017-05-11 <a href="https://movie.douban.com/subject/1301912/" target="_blank" rel="noopener">《秋天的童话》</a></li><li>2017-05-18 <a href="https://movie.douban.com/subject/10577869/" target="_blank" rel="noopener">《时空恋旅人》</a></li><li>2017-05-26 <a href="https://movie.douban.com/subject/6311303/" target="_blank" rel="noopener">《加勒比海盗5: 死无对证》</a></li><li>2017-05-28 <a href="https://movie.douban.com/subject/26593587/" target="_blank" rel="noopener">《天才少女》</a></li><li>2017-05-31 <a href="https://movie.douban.com/subject/26586432/" target="_blank" rel="noopener">《契克》</a></li></ul><h3 id="六月">六月</h3><ul><li>2017-06-13 <a href="https://movie.douban.com/subject/1309172/" target="_blank" rel="noopener">《初恋50次》</a></li><li>2017-06-15 <a href="https://movie.douban.com/subject/3025447/" target="_blank" rel="noopener">《金蝉脱壳》</a></li></ul><h3 id="七月">七月</h3><ul><li>2017-07-02 <a href="https://movie.douban.com/subject/23761370/" target="_blank" rel="noopener">《速度与激情7》</a></li><li>2017-07-16 <a href="https://movie.douban.com/subject/6845529/" target="_blank" rel="noopener">《有希望的男人》</a></li><li>2017-07-17 <a href="https://movie.douban.com/subject/25812712/" target="_blank" rel="noopener">《神偷奶爸3》</a></li><li>2017-07-19 <a href="https://movie.douban.com/subject/26811587/" target="_blank" rel="noopener">《大护法》</a></li><li>2017-07-24 <a href="https://movie.douban.com/subject/26266085/" target="_blank" rel="noopener">《三个老枪手》</a></li><li>2017-07-29 <a href="https://movie.douban.com/subject/24529353/" target="_blank" rel="noopener">《绝地逃亡》</a></li><li>2017-07-30 <a href="https://movie.douban.com/subject/26816383/" target="_blank" rel="noopener">《喜欢你》</a></li></ul><h3 id="八月">八月</h3><ul><li>2017-08-12 <a href="https://movie.douban.com/subject/3011091/" target="_blank" rel="noopener">《忠犬八公的故事》</a></li></ul><h3 id="九月">九月</h3><ul><li>2017-09-06 <a href="https://movie.douban.com/subject/26607693/" target="_blank" rel="noopener">《敦刻尔克》</a></li><li>2017-09-09 <a href="https://movie.douban.com/subject/26366465/" target="_blank" rel="noopener">《我的少女时代》</a></li></ul><h3 id="十月">十月</h3><ul><li>2017-10-15 <a href="https://movie.douban.com/subject/27024903/" target="_blank" rel="noopener">《天才枪手》</a></li><li>2017-10-22 <a href="https://movie.douban.com/subject/1298624/" target="_blank" rel="noopener">《闻香识女人》</a></li><li>2017-10-29 <a href="https://movie.douban.com/subject/26382962/" target="_blank" rel="noopener">《美好的意外》</a></li></ul><h3 id="十一月">十一月</h3><ul><li>2017-11-16 <a href="https://movie.douban.com/subject/3443074/" target="_blank" rel="noopener">《寂寞芳心》</a></li><li>2017-11-23 <a href="https://movie.douban.com/subject/1308820/" target="_blank" rel="noopener">《花与爱丽丝》</a></li></ul><h3 id="十二月">十二月</h3><ul><li>2017-12-21 <a href="https://movie.douban.com/subject/1293399/" target="_blank" rel="noopener">《莫扎特传》</a></li><li>2017-12-30 <a href="https://movie.douban.com/subject/26799731/" target="_blank" rel="noopener">《请以你的名字呼唤我》</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>New Here</title>
      <link href="/blog/2017/10/29/new-here/"/>
      <url>/blog/2017/10/29/new-here/</url>
      
        <content type="html"><![CDATA[<h2 id="First-and-Foremost">First and Foremost</h2><p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> is a fast, simple and powerful blog framework. You write posts in Markdown (or other languages) and Hexo generates static files with a beautiful theme in seconds.</p><a id="more"></a><p>Being tired of my old WordPress blog framework so I want to try something new. Hexo is just the one I really need! Simple and beautiful.</p><p>New here with new change, so in this blog I will try my best to wirte some posts in English.</p><p>博客的主题简单, 但是我意外的发现, 在这个主题下的文章用中文意外的比英文好看.</p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2017/10/28/hello-world/"/>
      <url>/blog/2017/10/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Arduino in command line</title>
      <link href="/blog/2017/05/01/arduino-in-command-line/"/>
      <url>/blog/2017/05/01/arduino-in-command-line/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>由于开发环境是树莓派连接Arduino的板子然后控制其它元件,而树莓派和Arduino都已经被放置在了密封装置中,只能通过wifi的方式连接,所以通过Google找到了一个教程成功实现远程Arduino编译上传.</p><a id="more"></a><h2 id="环境">环境</h2><p>Raspberry Pi3,Ubuntu-Mate 16.04 LTS,Arduino Mega 2560.</p><h2 id="配置">配置</h2><p>找到的工具是 <a href="http://inotool.org/" target="_blank" rel="noopener">Ino</a>. 首先按照文档要求, 安装依赖文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认Ubuntu下有Python 2.6+故无需重新安装</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install arduino arduino-core <span class="comment"># 大概ino也是一个控制工具,还是要依赖arduino的ide</span></span><br><span class="line">sudo apt-get install picocom <span class="comment"># picocom是一个串口调试工具</span></span><br></pre></td></tr></table></figure><p>安装后即可安装ino,官方推荐了可以用过pip和easy_install安装,不过我都安装失败了,故这里选择下载方式:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在https://pypi.python.org/pypi/ino/#downloads网页中找到最新的压缩包下载即可.</span></span><br><span class="line">tar -xvf ino-0.3.6.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ino-0.3.6/</span><br><span class="line">pip install -r requirements.txt <span class="comment"># 不知道为什么我用python setup.py就是会出错,只能手动安装pip依赖</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">sudo mv ino-0.3.6/ /usr/<span class="built_in">local</span>/ino</span><br><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/ino/bin/ino /usr/bin/ino</span><br></pre></td></tr></table></figure><h2 id="使用">使用</h2><p>因为arduino限制文件必须在工程下才能编译,所以先创建工程(其实就是一个文件夹即可):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir driver</span><br><span class="line"><span class="built_in">cd</span> driver</span><br></pre></td></tr></table></figure><p>使用init命令可以自动帮你生成一个工程:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ino init</span><br></pre></td></tr></table></figure><p>然后修改src文件下的.ino文件即可. 编写完成后,使用build命令编译:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ino build -m mega2560 <span class="comment"># -m参数是板子类型</span></span><br></pre></td></tr></table></figure><p>编译完成后,使用upload命令上传:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ino upload -m mega2560 -p /dev/ttyACM0 <span class="comment"># -p是串口号</span></span><br></pre></td></tr></table></figure><p>可以添加配置文件就不用每次build和upload的时候都带参数:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi ino.ini</span><br><span class="line">[build]</span><br><span class="line">board-model = mega2560</span><br><span class="line"></span><br><span class="line">[upload]</span><br><span class="line">board-model = mega2560</span><br><span class="line">serial-port = /dev/ttyACM0</span><br><span class="line"></span><br><span class="line">[serial]</span><br><span class="line">serial-port = /dev/ttyACM0</span><br></pre></td></tr></table></figure><h2 id="参考文档">参考文档</h2><ul><li><a href="http://playground.arduino.cc//Linux/Ubuntu" target="_blank" rel="noopener">Install Arduino on Ubuntu Linux</a></li><li><a href="http://inotool.org/#installation" target="_blank" rel="noopener">Ino</a></li><li><a href="http://inotool.org/quickstart" target="_blank" rel="noopener">Ino-Quick start</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arduino </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用Adobe Photoshop创造月光场景效果</title>
      <link href="/blog/2015/12/13/how-to-create-a-moonlight-scene-photo-manipulation-with-adobe-photoshop/"/>
      <url>/blog/2015/12/13/how-to-create-a-moonlight-scene-photo-manipulation-with-adobe-photoshop/</url>
      
        <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/mTf0sRWTETF*eeeP7I5HvMkVA.n8FexdNX9YQ9NFVts!/r/dHQBAAAAAAAA" alt><br>最终效果图<br>在这篇教程中，我会向你展示如何制作一张女子赏花的月景图。</p><a id="more"></a><p>首先，我们先添加天空和风景，之后添加月亮，并且通过调整图层、蒙板和笔刷来改变它的效果。这之后我们再添加其它元素，例如地板、阳台、模特和鲜花，我们用相同的手法把它们结合起来。最后的作品将由几个图层构成。</p><p>通过这篇教程，你可以学习到对光线的调整、对景深的加强等等。</p><p>你是一个Lightroom的粉丝么？我们有很多好的<a href="http://graphicriver.net/category/add-ons/lightroom-presets" target="_blank" rel="noopener">Lightroom预设</a>收藏在GraphicRiver，这些将帮你在修改照片的效应和风格上节省很多时间。</p><h3 id="教程所需素材">教程所需素材</h3><p>下面就是本教程需要用到的素材：</p><ul><li><a href="https://pixabay.com/en/gray-clouds-thunderstorm-718177/" target="_blank" rel="noopener">天空</a></li><li><a href="https://pixabay.com/en/mountains-lake-mist-fog-nature-691082/" target="_blank" rel="noopener">风景</a></li><li><a href="https://pixabay.com/en/moon-nocturne-night-nature-232753/" target="_blank" rel="noopener">月亮</a></li><li><a href="http://www.textures.com/download/brickround0092/37917" target="_blank" rel="noopener">地板</a></li><li><a href="http://simbores.deviantart.com/art/Medieval-Garden-07-492641354" target="_blank" rel="noopener">阳台</a></li><li><a href="http://mizzd-stock.deviantart.com/art/Fairytale-Princess-2-206778528" target="_blank" rel="noopener">模特</a></li><li><a href="https://pixabay.com/en/bloom-blossom-bougainvillea-flora-2387/" target="_blank" rel="noopener">花1</a></li><li><a href="https://pixabay.com/en/bougainvillea-flowers-pink-flowers-241690/" target="_blank" rel="noopener">花2</a></li><li><a href="https://pixabay.com/en/bougainvillea-sky-moon-374111/" target="_blank" rel="noopener">花3</a></li></ul><h3 id="1-添加天空和风景">1.添加天空和风景</h3><h4 id="步骤1">步骤1</h4><p>在Photoshop预设条件下创建一个1500像素*1500像素的新文件：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/cd8TyBtimYUUTH4ycZFUplic5kfm10zs0TMzRqJ*9l4!/r/dHUBAAAAAAAA" alt></p><h4 id="步骤2">步骤2</h4><p>打开天空的图片。将它用移动工具(V)拖动到主文件中，并将它放置在画布的上半部分。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/O*i39A7Lzl.NZCnC5r6A28zvSkOgOFXZJ.lhNkZFcrI!/r/dHIBAAAAAAAA" alt></p><p>选择滤镜&gt;模糊&gt;高斯模糊，设置半径为8像素：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/raNpbkQfXiAfVjPvbFfqpof4bEkoQm*WQbFTl*IVaGw!/r/dHMBAAAAAAAA" alt></p><h4 id="步骤3">步骤3</h4><p>使用图像调整让天空变得更暗一些。图层&gt;新建调整图层&gt;曲线：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/uTOJdaTPV0nzusZfKTHhEyBjR0ZP6kgWJzRJ7ToR5So!/r/dHIBAAAAAAAA" alt></p><p>在这个图层蒙板上，激活笔刷工具(B)，用一个软圆的、黑颜色的(软黑笔刷)来减少左边的效果，为的是我们之后会在这里添加的月亮。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/R6z4eLPc92UAgDC*DBq8u1m0MLpXN4grKa*XUcnk1lA!/r/dI8BAAAAAAAA" alt></p><h4 id="步骤4">步骤4</h4><p>用另一个曲线调整图层来使天空加亮，特别是左边部分。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/BZ3hmdfcNTRVGVY4lf2gupPDRFGqvQQpJuEod.F1RFk!/r/dGsAAAAAAAAA" alt></p><p>使用软黑笔刷隐藏右半部分的效果，这么做是为了让它更暗一些。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/vkVe8ekz*YjMVpEjOaqlrbEIZXV4KDpLgXTLb.RWG3s!/r/dHQBAAAAAAAA" alt></p><h4 id="步骤5">步骤5</h4><p>打开风景的图片。把它放置在画布的下半部分。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/lBPBaiPx7C4u7mJ4dO0SID0uvMkarzzcq8ds4Tphsrc!/r/dHIBAAAAAAAA" alt></p><p>在这个图层上添加一个蒙板，用软黑笔刷去掉对比强烈的边缘，让两张图片的天空融合。保留一些山顶周围云雾的边缘。在涂抹左边的山的时候降低笔刷的透明度，让它消失在天空中。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/RCyav9QORhwoYe4YGI1KyDlPnMlLnH0F1b5P7ALG.TQ!/r/dI8BAAAAAAAA" alt="“"></p><h4 id="步骤6">步骤6</h4><p>在湖面上有一些我们不想要的细节。新建一个图层，把它作为剪切蒙板。选择仿制图章工具(S)来清除这些细节。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/*pkFvZePxW8VNl1*tq8WFJ8F.pCPbEKltd6ifyTQ1*8!/r/dHIBAAAAAAAA" alt="“”/"></p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/fLm4kbuNt2DnfxZWbgsqu6CsyPj5WHL.hkCbeOdkxlM!/r/dHUBAAAAAAAA" alt="“”/"></p><h4 id="步骤7">步骤7</h4><p>添加一个曲线调整图层(作为剪切蒙板)来让画面暗化。在它的图层蒙板上，用软黑笔刷清除月光照亮的部分的暗化效果。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/HEMFn10HahuPII9fOUosMwMUOiGkxy5Yk1ZOf.MBYh4!/r/dHIBAAAAAAAA" alt="“”/"></p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/xBKAbWNBAolO09QZ7k*W9m7hmg7A*kgdRLvvp4bkVzQ!/r/dHIBAAAAAAAA" alt="“”/"></p><h4 id="步骤8">步骤8</h4><p>使用色相/饱和度调整图层让风景和天空的饱和度匹配：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/EMHRi*T1lrgTs7ARk*phWVNgWVpy2XzYc9ef*xrVup0!/r/dI8BAAAAAAAA" alt="“"></p><h3 id="2-添加月亮">2.添加月亮</h3><h4 id="步骤1-2">步骤1</h4><p>用椭圆选区工具(M)将月亮从原始图片中抠出，把它放置到画布的左上角。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/Jn.SihB9uqOgPn6LqrQVFJqckRZi81nwwbl5eeFgHTg!/r/dHQBAAAAAAAA" alt="“"></p><h4 id="步骤2-2">步骤2</h4><p>对月亮图层应用8像素的高斯模糊，使得它和天空的深度和柔软度相匹配：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/HoXp*B40D3Jfqs3Rw00nDNfhnx85n5MpGQoZDet1XlE!/r/dIoBAAAAAAAA" alt="“”/"></p><h4 id="步骤3-2">步骤3</h4><p>双击月亮图层，选择内发光效果，设置的发光颜色为#ededed：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/81POBVcgpZy60yCeovpd3cY*F0jPjNzC2Fr9D7jsUwk!/r/dHQBAAAAAAAA" alt="“”/"></p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/aR0HIA7BiD2HpXFNuM8gD0J96Wtd4pMH1EdKi7wnGmY!/r/dHIBAAAAAAAA" alt="“"></p><h4 id="步骤4-2">步骤4</h4><p>用和我之前的<a href="http://design.tutsplus.com/tutorials/create-a-relaxing-vibrant-fantasy-lake-scene-with-adobe-photoshop--cms-24409" target="_blank" rel="noopener">梦幻湖泊景象教程</a>一样的方法来做月光关于湖面的反射。你应该得到类似向下图一样的效果：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/JQnLzUr4yNUZY.bkux0yyQJbzS0W6K57HKcHvYZm.2k!/r/dHQBAAAAAAAA" alt="“”/"></p><h4 id="步骤5-2">步骤5</h4><p>新建一个图层，用柔软的、颜色值为#ededed的笔刷来涂抹湖面的区域，达到反射月光的效果。更改图层样式变为柔光100%。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/qJcrjAfAdo273Fr9vKtQoD5dJ45OS1r*R*mSZt2nifo!/r/dHYBAAAAAAAA" alt="“”/"></p><p><a href="http://design.tutsplus.com/tutorials/how-to-create-a-moonlight-scene-photo-manipulation-with-adobe-photoshop--cms-25064" target="_blank" rel="noopener">原文链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Photoshop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> photoshop </tag>
            
            <tag> design </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
